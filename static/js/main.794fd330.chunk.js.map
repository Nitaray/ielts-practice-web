{"version":3,"sources":["presentational-components/Button.js","presentational-components/Input.js","presentational-components/Text.js","service-component/API/mutation.js","presentational-components/Dialog.js","service-component/Context/authorization.js","route-component/Authorization/LandingPage.js","route-component/Authorization/SignUpPage.js","route-component/Authorization/ForgotPasswordPage.js","presentational-components/NavigationBar.js","presentational-components/Chip.js","container-components/Test/TestTable.js","service-component/API/query.js","route-component/Home/Test/AllTestPage.js","service-component/Others/timeSince.js","presentational-components/Comment.js","route-component/Home/Test/ViewTestPage.js","container-components/Authorization/AuthorizationContainer.js","route-component/Home/Test/AddTestPage.js","container-components/Test/Question.js","container-components/Test/Answer.js","container-components/Test/Test.js","route-component/Home/Test/DoTestPage.js","route-component/Home/HomePage.js","App.js","index.js"],"names":["ActionButton","value","onClick","handleClick","Button","fullWidth","disableElevation","variant","color","IconActionButton","disabled","icon","IconButton","DropdownButton","options","React","useState","anchorEl","setAnchorEl","Paper","elevation","aria-haspopup","event","currentTarget","style","margin","border","Menu","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","map","option","TextInput","size","label","name","onChange","handleChange","TextField","required","autoFocus","id","PasswordInput","type","TitleText","fontSize","Typography","noWrap","fontWeight","Text","align","TextWithLink","to","Link","component","RouteLink","underline","SIGNIN_MUTATION","gql","SIGNUP_MUTATION","SIGNOUT_MUTATION","REFRESHJWT_MUTATION","CREATECOMMENT_MUTATION","DETELECOMMENT_MUTATION","ADDTEST_MUTATION","ADDTESTSECTION_MUTATION","ADDQUESTIONGROUP_MUTATION","ADDQUESTION_MUTATION","ADDANSWER_MUTATION","SUBMITTEST_MUTATION","STARTTEST_MUTATION","ErrorDialog","error","handleClose","Dialog","DialogContent","DialogContentText","DialogActions","LoadingDialog","PaperProps","backgroundColor","boxShadow","CircularProgress","AuthorizationContext","createContext","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","LandingPage","classes","history","useHistory","username","password","signInInfo","setSignInInfo","setError","useMutation","signIn","loading","useContext","setAuthorization","handleSignInChange","prop","preventDefault","target","handleSignInClick","a","variables","errorPolicy","then","data","status","token","login","user","role","push","catch","Fragment","Grid","container","className","CssBaseline","item","xs","sm","md","Avatar","direction","justify","SignUpPage","confirmPassword","signUpInfo","setSignUpInfo","signUp","handleSignUpChange","Container","maxWidth","console","log","ForgotPasswordPage","email","forgotPasswordInfo","setForgotPasswordInfo","toolBar","common","white","black","justifyContent","overflowX","appBar","marginBottom","NavigationBar","props","AppBar","Toolbar","chip","maxHeight","ListeningChip","useTheme","Chip","listening","ReadingChip","reading","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","table","visuallyHidden","clip","overflow","padding","position","top","toolbar","paddingLeft","paddingRight","toolbarTitle","flex","headCells","numeric","SortTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","TableToolbar","authorization","toLowerCase","Tooltip","title","TestTable","allTests","doneTests","tests","setTests","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","useEffect","tmp","allTest","findIndex","element","TableContainer","Table","property","rowCount","TableBody","slice","row","hover","tabIndex","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","ALLTEST_QUERY","DONETEST_BYUSERID_QUERY","TEST_BYID_QUERY","TESTDONEYET_BYID_QUERY","TESTCOMMENT_BYID_QUERY","paddingTop","paddingBottom","AllTestPage","useQuery","getUserById","timeSince","date","seconds","floor","Date","now","interval","fonts","listItemSecondaryAction","visibility","listItem","Comment","comment","setComment","createComment","deleteComment","List","comments","ListItem","ListItemAvatar","ListItemText","primary","content","created","ListItemSecondaryAction","commentId","Divider","multiline","placeholder","testId","userId","ViewTestPage","useParams","testDoneYet","testComment","ResultTest","getTestResult","CommentTest","getTestById","test","score","answerHistory","answer","question","statementText","trueAnswer","text","setComments","AuthorizationContainer","children","unauthorized","setUnauthorized","refreshJWT","handleRefreshJWT","tokenPayload","split","tokenExpiration","getTime","createTestContainer","mainContainer","testContainer","testSectionContainer","questionGroupContainer","questionContainer","answerContainer","paddingContainer","AddTestPage","testInfo","setTestInfo","finished","setFinished","Box","AddTest","CreateTest","handleCreateTest","testInput","setTestInput","createTest","select","MenuItem","trimStart","trim","addTest","numTestSection","setNumTestSection","testSection","i","AddTestSection","generateTestSection","audio","testSectionInput","setTestSectionInput","addTestSection","numQuestionGroup","setNumQuestionGroup","testSectionInfo","setTestSectionInfo","InputProps","endAdornment","InputAdornment","section","questionGroup","AddQuestionGroup","generateQuestionGroup","sectionId","introText","questionGroupInput","setQuestionGroupInput","addQuestionGroup","questionGroupInfo","setQuestionGroupInfo","numQuestion","setNumQuestion","group","AddQuestion","generateQuestion","questionGroupId","questionInput","setQuestionInput","addQuestion","questionInfo","setQuestionInfo","numAnswer","setNumAnswer","AddAnswer","generateAnswer","questionId","isCorrect","answerInput","setAnswerInput","addAnswer","answerInfo","setAnswerInfo","startAdornment","ReadingPassage","passage","substring","QuestionGroup","questionGroups","Question","questions","TFQuestion","answers","FITBQuestion","MCQuestion","marginRight","marginLeft","replace","repeat","AnswerGroup","Answer","onAnswer","TypeAnswer","answerString","setAnswer","toUpperCase","card","borderRadius","timer","bottom","zoom","right","alert","ReadingTest","sections","TestTimer","progress","setProgress","setAlert","setInterval","clearInterval","diff","minutes","reviewMinutes","setTimeout","onTimeOut","LinearProgress","AlertTimer","zIndex","Zoom","in","Card","ListItemIcon","commentContainer","cardHeader","cardContent","noticed","DoTestPage","setNoticed","startTest","done","setDone","DoTest","onDone","Noticed","rule","setAnswers","submitTest","handleSubmit","testSubmission","elementIdx","newAnswers","flexGrow","appBarSpacer","mixins","HomePage","signOut","navigationBarFunction","handleSignOut","basename","exact","path","createMuiTheme","light","dark","contrastText","head","even","odd","action","errorLink","onError","graphQLErrors","networkError","httpLink","createHttpLink","uri","process","API_URL","credentials","authLink","setContext","_","headers","client","ApolloClient","link","concat","ApolloLink","from","cache","InMemoryCache","App","authorizationData","setAuthorizationData","ThemeProvider","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.794fd330.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport function ActionButton({ value, onClick }) {\r\n\tconst handleClick = () => onClick();\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tfullWidth disableElevation\r\n\t\t\tvariant = \"contained\"\r\n\t\t\tcolor = \"primary\"\r\n\t\t\tonClick = { () => handleClick() }>\r\n\t\t\t{ value }\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport function IconActionButton({ disabled, icon, onClick }) {\r\n\tconst handleClick = () => onClick();\r\n\r\n\treturn (\r\n\t\t<IconButton disabled = { disabled } color = \"primary\" onClick = { () => handleClick() }>\r\n\t\t\t{ icon }\r\n\t\t</IconButton>\r\n\t);\r\n}\r\n\r\nexport function DropdownButton({ options, icon }) {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget);\r\n\tconst handleClose = () => setAnchorEl(null);\r\n\r\n\treturn (\r\n\t\t<Paper elevation = {0}>\r\n\t\t\t<IconButton color = \"inherit\"\r\n\t\t\t\t\t\taria-haspopup = \"true\"\r\n\t\t\t\t\t\tonClick = { handleClick }>\r\n\t\t\t\t{ icon }\r\n\t\t\t</IconButton>\r\n\t\t\t<Paper elevation = {0} style = {{ margin: '0px', border: \"1px solid black\" }} />\r\n\t\t\t<Menu\r\n\t\t\t\tkeepMounted\r\n\t\t\t\televation = {2}\r\n\t\t\t\tgetContentAnchorEl = {null}\r\n\t\t\t\tanchorOrigin = {{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin = {{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl = { anchorEl }\r\n\t\t\t\topen = { Boolean(anchorEl) }\r\n\t\t\t\tonClose = { handleClose }>\r\n\t\t\t\t{ options.map((option) => { return (option) }) }\r\n\t\t\t</Menu>\r\n\t\t</Paper>\r\n\t);\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nexport function TextInput({ size, label, name, value, onChange }) {\r\n\tlet handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tsize = { size }\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function PasswordInput({ label, name, value, onChange }) {\r\n\tconst handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\ttype = \"password\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function SelectInput({ label, name, choices }) {\r\n\treturn (\r\n\t\t<Select\r\n\t\t\trequired fullWidth select\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t>\r\n\t\t\t{ choices.map((choice) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem key = { choice } value = { choice }>{ choice }</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Select>\r\n\t)\r\n};","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport function TitleText({ value, fontSize }) {\r\n\treturn (\r\n\t\t<Typography noWrap\r\n\t\t\t\t\tcolor = 'inherit'\r\n\t\t\t\t\tvariant = 'inherit'\r\n\t\t\t\t\tstyle = {{ fontWeight: 'bold', fontSize: fontSize }}\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nexport function Text({ value, align }) {\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\talign = { align }\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport function TextWithLink({ value, to }) {\r\n\treturn (\r\n\t\t<Link component = { RouteLink } to = { to } underline = 'none'>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant = \"body2\">\r\n\t\t\t\t{ value }\r\n\t\t\t</Typography>\r\n\t\t</Link>\r\n\t);\r\n}","import gql from \"graphql-tag\";\r\n\r\nexport const SIGNIN_MUTATION = gql`\r\n     mutation Login($username: String!, $password: String!) {\r\n        login(username: $username, password: $password) {\r\n            token\r\n            user {\r\n                id\r\n                username\r\n                role {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n     }   \r\n     `;\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n     mutation signup($user: UserInput!) {\r\n          signup(user: $user) {\r\n               token\r\n          }\r\n     }\r\n     `;\r\n\r\nexport const SIGNOUT_MUTATION = gql`\r\n\tmutation logout {\r\n\t\tlogout\r\n\t}\r\n`;\r\n\r\nexport const REFRESHJWT_MUTATION = gql`\r\n     mutation refreshJWT {\r\n          refreshJWT {\r\n               token\r\n               user {\r\n                    id\r\n                    username\r\n                    role {\r\n                         name\r\n                    }\r\n               }\r\n          }\r\n     }\r\n     `;\r\n\r\nexport const CREATECOMMENT_MUTATION = gql`\r\n    mutation createComment($comment: CommentInput!) {\r\n        createComment(comment: $comment) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DETELECOMMENT_MUTATION = gql`\r\n    mutation deleteComment($commentId: Int!) {\r\n        deleteComment(commentId: $commentId) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDTEST_MUTATION = gql`\r\n    mutation addTest($test: TestInput!) {\r\n        addTest(test: $test) {\r\n            id\r\n            title\r\n            type\r\n        }\r\n    }\r\n    `;\r\n\r\nexport const ADDTESTSECTION_MUTATION = gql`\r\n    mutation addTestSection($section: TestSectionInput!) {\r\n        addTestSection(section: $section) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDQUESTIONGROUP_MUTATION = gql`\r\n    mutation addQuestionGroup($group: QuestionGroupInput!) {\r\n        addQuestionGroup(group: $group) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDQUESTION_MUTATION = gql`\r\n    mutation addQuestion($question: QuestionInput!) {\r\n        addQuestion(question: $question) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDANSWER_MUTATION = gql`\r\n    mutation addAnswer($answer: AnswerInput!) {\r\n        addAnswer(answer: $answer) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SUBMITTEST_MUTATION = gql`\r\n\tmutation submitTest($testSubmission: TestSubmission!) {\r\n\t\tsubmitTest(testSubmission: $testSubmission) {\r\n\t\t\ttest {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\ttype\r\n\t\t\t\tcomments {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tuser {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tusername\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent\r\n\t\t\t\t\tcreated\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tscore\r\n\t\t\tanswerHistory {\r\n\t\t\t\tquestion {\r\n\t\t\t\t\ttype\r\n\t\t\t\t\tstatementText\r\n\t\t\t\t}\r\n\t\t\t\tanswer {\r\n\t\t\t\t\ttext\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const STARTTEST_MUTATION = gql`\r\n\tmutation startTest($testId: Int!, $userId: Int!) {\r\n\t\tstartTest(testId: $testId, userId: $userId) {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\ttype\r\n\t\t}\r\n\t}\r\n`;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport function ErrorDialog({ error, open, onClose }) {\r\n\tconst handleClose = () => onClose();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog\r\n\t\t\t\topen = { open }\r\n\t\t\t\tonClose = { handleClose }\r\n\t\t\t>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ error }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { handleClose } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function LoadingDialog({ open }) {\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen = { open }\r\n\t\t\tPaperProps = {{\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: 'transparent',\r\n\t\t\t\t\tboxShadow: 'none'\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<CircularProgress size = { 50 }/>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport function SuccessDialog({ success, open }) {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ success }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function InformDialog({ open, information, onContinue, onCancel}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open } onClose = { onCancel }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ information }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { onCancel } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick = { onContinue } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tContinue\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const AuthorizationContext = React.createContext();","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNIN_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../presentational-components/Dialog\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function LandingPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [signInInfo, setSignInInfo] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const [signIn, { loading }] = useMutation(SIGNIN_MUTATION);\r\n    const [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n\r\n    const handleSignInChange = (prop) => (event) => {\r\n        event.preventDefault();\r\n        setSignInInfo({ ...signInInfo, [prop]: event.target.value });\r\n    }\r\n\r\n    const handleSignInClick = async () => {\r\n        signIn({\r\n                variables: {\r\n                    username: signInInfo.username,\r\n                    password: signInInfo.password\r\n                },\r\n                errorPolicy: 'none',\r\n        })\r\n        .then(data => {\r\n            setAuthorization({\r\n                status: true,\r\n                token: data.data.login.token,\r\n                user: {\r\n                    id: data.data.login.user.id,\r\n                    username: data.data.login.user.username,\r\n                    role: {\r\n                        name: data.data.login.user.role.name,\r\n                    }\r\n                }\r\n            });\r\n            history.push(\"/tests/\");\r\n        })\r\n        .catch(error => {\r\n            setError(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { loading && <LoadingDialog open = { loading } /> }\r\n            { error && <ErrorDialog error = 'Invalid username/password. Please try again!'\r\n                                    open = { error } onClose = { setError(false) } /> }\r\n            <Grid container component = \"main\" className = { classes.root }>\r\n                <CssBaseline />\r\n                <Grid item xs = {false} sm = {4} md = {8}>\r\n                    {/* PAGE INTRODUCTION */}\r\n                </Grid>\r\n                {/* REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED */}\r\n                {/* REPLACE WITH <SignIn /> COMPONENT*/}\r\n                <Grid item xs = {12} sm = {8} md = {4} component = {Paper}>\r\n                    <div className = { classes.paper }>\r\n                        <Avatar className = { classes.avatar }>\r\n                            <LockOutlinedIcon/>\r\n                        </Avatar>\r\n                        <TitleText value = \"Sign In\" fontSize = \"18px\" />\r\n                        <form className = { classes.form }>\r\n                            <TextInput label = \"Username\" name = \"username\" value = { signInInfo['username'] }\r\n                                       onChange = { handleSignInChange('username') } />\r\n\r\n                            <PasswordInput label = \"Password\" name = \"password\" value = { signInInfo['password'] }\r\n                                           onChange = { handleSignInChange('password') } />\r\n\r\n                            <ActionButton value = \"Sign In\"\r\n                                          onClick = { () => handleSignInClick() } />\r\n                            <Grid container direction = 'row' justify = 'flex-end'>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Forgot password!\"\r\n                                        align = \"left\"\r\n                                        to = \"/forgot-password\" />\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Don't have account?\"\r\n                                        align = \"right\"\r\n                                        to = \"/create-account\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                {/* END REMOVE */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../presentational-components/Dialog\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function SignUpPage() {\r\n\t// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [signUpInfo, setSignUpInfo] = useState({\r\n\t\tname: '',\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: '',\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\tconst [signUp, { loading }] = useMutation(SIGNUP_MUTATION);\r\n\r\n\tconst handleSignUpChange = (prop) => (event) => setSignUpInfo({ ...signUpInfo, [prop]: event.target.value });\r\n\tconst handleSignUpClick = () => {\r\n\t\tsignUp({\r\n\t\t\tvariables: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tusername: signUpInfo.username,\r\n\t\t\t\t\tpassword: signUpInfo.password,\r\n\t\t\t\t\tname: signUpInfo.name,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorPolicy: 'none',\r\n\t\t})\r\n\t\t\t.then(data => history.push(\"/\"))\r\n\t\t\t.catch(error => {\r\n\t\t\tsetError(true);\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\t// END REMOVE\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = 'Please try again!'\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { setError(false) } /> }\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t{/* REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED */}\r\n\t\t\t\t{/* REPLACE WITH <SignUp /> COMPONENT*/}\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Create Account\" fontSize = \"18px\"/>\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Full Name\" name = \"name\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['name'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('name') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Username\" name = \"username\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['username'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('username') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Password\" name = \"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['password'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('password') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Confirm password\" name = \"confirm-password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['confirmPassword'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('confirmPassword') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Sign Up\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleSignUpClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Oh! I already have account\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* END REMOVE */}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React, { useState } from 'react';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Text, TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function ForgotPasswordPage() {\r\n\tconst classes = useStyles();\r\n\tconst [forgotPasswordInfo, setForgotPasswordInfo] = useState({\r\n\t\temail: '',\r\n\t});\r\n\r\n\tconst handleForgotPasswordChange = (prop) => (event) => setForgotPasswordInfo({ ...forgotPasswordInfo, [prop]: event.target.value });\r\n\tconst handleForgotPasswordClick = () => {\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Recover password\" fontSize = '18px' />\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Email\" name = \"email\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { forgotPasswordInfo['email'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleForgotPasswordChange('email') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Recover password\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleForgotPasswordClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Back to home\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport { TextWithLink, TitleText } from \"./Text\";\r\nimport { DropdownButton } from \"./Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolBar: {\r\n\t\tbackgroundColor: theme.palette.common.white,\r\n\t\tcolor: theme.palette.common.black,\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\tappBar: {\r\n\t\tmarginBottom: theme.spacing(0),\r\n\t}\r\n}));\r\n\r\nexport default function NavigationBar(props) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<AppBar elevation = {2} className = { classes.appBar }>\r\n\t\t\t<Toolbar component = \"nav\" variant = \"dense\" className = { classes.toolBar }>\r\n\t\t\t\t<TitleText value = \"IELTS Training\" component = \"h1\"/>\r\n\t\t\t\t<DropdownButton options = { props.options }\r\n\t\t\t\t\t\t\t\ticon = { <AccountCircleIcon /> } />\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tchip: {\r\n\t\tmaxHeight: '18px',\r\n\t\tfontSize: '11px',\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n}));\r\n\r\nexport function ListeningChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Listening\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.listening }}/>\r\n\t)\r\n}\r\n\r\nexport function ReadingChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Reading\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.reading }}/>\r\n\t)\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { ListeningChip, ReadingChip } from \"../../presentational-components/Chip\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n\tif (b[orderBy] < a[orderBy]) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (b[orderBy] > a[orderBy]) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n\treturn order === 'desc'\r\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\r\n\tstabilizedThis.sort((a, b) => {\r\n\t\tconst order = comparator(a[0], b[0]);\r\n\t\tif (order !== 0) return order;\r\n\t\treturn a[1] - b[1];\r\n\t});\r\n\treturn stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttable: {\r\n\t\twidth: 'inherit'\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t},\r\n\ttoolbar: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t\tpaddingRight: theme.spacing(1),\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\ttoolbarTitle: {\r\n\t\tflex: '1 1',\r\n\t}\r\n}));\r\n\r\nconst headCells = [\r\n\t{ id: 'id', numeric: true, label: '#' },\r\n\t{ id: 'title', numeric: false, label: 'Title' },\r\n\t{ id: 'type', numeric: false, label: 'Type' },\r\n\t{ id: 'status', numeric: false, label: 'Status' },\r\n];\r\n\r\nfunction SortTableHead(props) {\r\n\tconst { order, orderBy, onRequestSort } = props;\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t{ headCells.map((headCell) => (\r\n\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\tkey = { headCell.id }\r\n\t\t\t\t\t\talign = { headCell.numeric ? 'right' : 'left' }\r\n\t\t\t\t\t\tsortDirection = { orderBy === headCell.id ? order : false }>\r\n\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\tactive = { orderBy === headCell.id }\r\n\t\t\t\t\t\t\tdirection = { orderBy === headCell.id ? order : 'asc' }\r\n\t\t\t\t\t\t\tonClick = { (event) => onRequestSort(event, headCell.id) }>\r\n\t\t\t\t\t\t\t<TitleText value = { headCell.label }/>\r\n\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t))}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nfunction TableToolbar() {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\r\n\tconst handleAddTest = () => {\r\n\t\thistory.push('/add');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Toolbar className = { classes.toolbar }>\r\n\t\t\t<div>\r\n\t\t\t\t<Chip size = 'small'/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tauthorization.user.role.name.toLowerCase() === 'admin' &&\r\n\t\t\t\t\t<Tooltip title = \"Add test\">\r\n\t\t\t\t\t\t<IconButton onClick = { handleAddTest }>\r\n\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</Toolbar>\r\n\t);\r\n};\r\n\r\nexport default function TestTable(props) {\r\n\tconst { allTests, doneTests } = props;\r\n\tconst classes = useStyles();\r\n\tconst [tests, setTests] = useState([]);\r\n\tconst [order, setOrder] = useState('asc');\r\n\tconst [orderBy, setOrderBy] = useState('id');\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, allTests.length - page * rowsPerPage);\r\n\tconst rowHeight = 45;\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tmp = [];\r\n\t\tallTests.map(allTest => {\r\n\t\t\ttmp.push({\r\n\t\t\t\tid: allTest.id,\r\n\t\t\t\ttitle: allTest.title,\r\n\t\t\t\ttype: allTest.type,\r\n\t\t\t\tstatus: doneTests.findIndex((element => element.id === allTest.id)) !== -1,\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetTests(tmp);\r\n\t}, []);\r\n\r\n\tconst handleRequestSort = (event, property) => {\r\n\t\tconst isAsc = orderBy === property && order === 'asc';\r\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\r\n\t\tsetPage(0);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className = { classes.root }>\r\n\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t<TableToolbar />\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table size = 'small' className = { classes.table }>\r\n\t\t\t\t\t\t<SortTableHead\r\n\t\t\t\t\t\t\torder = { order }\r\n\t\t\t\t\t\t\torderBy = { orderBy }\r\n\t\t\t\t\t\t\tonRequestSort = { handleRequestSort }\r\n\t\t\t\t\t\t\trowCount = { tests.length } />\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{ stableSort(tests, getComparator(order, orderBy))\r\n\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t.map((row) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow hover tabIndex = { -1 }\r\n\t\t\t\t\t\t\t\t\t\t\t\t  key = { row.id } style = {{ height: rowHeight }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align = 'right'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ row.id }\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextWithLink value = { row.title } to = { row.status ? `/view/${row.id}` : `/do/${row.id}`}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ (row.type.toLowerCase() === 'listening') ? <ListeningChip /> : <ReadingChip /> }\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ (row.status) && <CheckIcon fontSize = 'small' /> }\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{ emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t<TableRow style = {{ height: rowHeight * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t<TableCell colSpan = { 6 } />\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<TablePagination\r\n\t\t\t\t\trowsPerPageOptions = {[10, 25, 50, 100]}\r\n\t\t\t\t\tcomponent = \"div\"\r\n\t\t\t\t\tcount = { tests.length }\r\n\t\t\t\t\trowsPerPage = { rowsPerPage }\r\n\t\t\t\t\tpage = { page }\r\n\t\t\t\t\tonChangePage = { (event, newPage) => setPage(newPage) }\r\n\t\t\t\t\tonChangeRowsPerPage = { handleChangeRowsPerPage }\r\n\t\t\t\t/>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const ALLTEST_QUERY = gql`\r\n    query allTests {\r\n        allTests {\r\n            id\r\n            title\r\n            type\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DONETEST_BYUSERID_QUERY = gql`\r\n\tquery getUserById($id: Int!) {\r\n\t\tgetUserById(id: $id) {\r\n\t\t\tdoneTests {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TEST_BYID_QUERY = gql` \t\r\n\tquery getTestById($id: Int!) {\r\n\t\tgetTestById(id: $id) {\r\n\t\t\tid\r\n\t\t\ttype\r\n\t\t\tsections {\r\n\t\t\t\tid\r\n \t\t\t\torder\r\n\t\t\t\ttype\r\n\t\t\t\tstatementText\r\n\t\t\t\tstatementAudio\r\n\t\t\t\tquestionGroups {\r\n\t\t\t\t\tid\r\n\t\t\t\t\torder\r\n\t\t\t\t\tintroText\r\n\t\t\t\t\tquestions {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\torder\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\tstatementText\r\n\t\t\t\t\t\tanswers {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\ttext\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n/*\r\n export const TESTRESULT_BYID_QUERY = gql`\r\n     query getTestResult($userId: Int!, $testId: Int!) {\r\n         getTestResult(userId: $userId, testId: $testId) {\r\n             test {\r\n                 type\r\n                 sections {\r\n                     order\r\n                     type\r\n                     statementText\r\n                     statementAudio\r\n                     questionList {\r\n                         order\r\n                         introText\r\n                         questions {\r\n                             order\r\n                             statementText\r\n                         }\r\n                     }\r\n                 }\r\n             }\r\n \t\t\tscore\r\n \t\t\tanswerHistory {\r\n \t\t\t\tquestion {\r\n \t\t\t\t\torder\r\n \t\t\t\t}\r\n \t\t\t\tanswer {\r\n \t\t\t\t\ttext\r\n \t\t\t\t}\r\n \t\t\t}\r\n         }\r\n     }\r\n `;\r\n */\r\n\r\nexport const TESTDONEYET_BYID_QUERY = gql`\r\n\tquery getTestResult($userId: Int!, $testId: Int!) {\r\n     \tgetTestResult(userId: $userId, testId: $testId) {\r\n     \t\ttest {\r\n     \t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\ttype\r\n     \t\t}\r\n     \t\tscore\r\n\t\t\tanswerHistory {\r\n\t\t\t\tquestion {\r\n                    statementText\r\n\t\t\t\t\ttrueAnswer {\r\n\t\t\t\t\t\ttext\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tanswer {\r\n\t\t\t\t\ttext\r\n\t\t\t\t}\r\n\t\t\t}\r\n     \t}\r\n\t}\r\n`;\r\n\r\nexport const TESTCOMMENT_BYID_QUERY = gql`\r\n\tquery getTestById($id: Int!) {\r\n\t\tgetTestById(id: $id) {\r\n\t\t\tcomments {\r\n\t\t\t\tid\r\n\t\t\t\tuser {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tusername\r\n\t\t\t\t}\r\n\t\t\t\tcontent\r\n\t\t\t\tcreated\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;","import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TestTable from \"../../../container-components/Test/TestTable\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { ALLTEST_QUERY, DONETEST_BYUSERID_QUERY } from \"../../../service-component/API/query\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t},\r\n}));\r\n\r\nexport default function AllTestPage() {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst allTests = useQuery(ALLTEST_QUERY);\r\n\tconst doneTests = useQuery(DONETEST_BYUSERID_QUERY, { variables: { id: parseInt(authorization.user.id, 10) } });\r\n\r\n\tif (allTests.error) {\r\n\t\tconsole.log(allTests.error);\r\n\t}\r\n\tif (doneTests.data) {\r\n\t\tconsole.log(doneTests.data);\r\n\t}\r\n\tif (doneTests.error) {\r\n\t\tconsole.log(authorization);\r\n\t\tconsole.log(doneTests.error);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ (allTests.loading || doneTests.loading) && <LoadingDialog open = { allTests.loading || doneTests.loading } /> }\r\n\t\t\t<Container className = {classes.container}>\r\n\t\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t\t<Grid item xs = {12} md = {8}>\r\n\t\t\t\t\t\t<Paper elevation = {0}>\r\n\t\t\t\t\t\t\t{ allTests.data && doneTests.data &&\r\n\t\t\t\t\t\t\t <TestTable allTests = { allTests.data.allTests } doneTests = { doneTests.data.getUserById.doneTests } /> }\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {0} md = {4}>\r\n\t\t\t\t\t\t<Paper className = {classes.paper}>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","export default function timeSince(date) {\r\n\tconst seconds = Math.floor((Date.now() - date) / 1000);\r\n\tlet interval = 0;\r\n\r\n\tinterval = seconds / (365 * 24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" years ago\";\r\n\t}\r\n\tinterval = seconds / (30 * 24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" months ago\";\r\n\t}\r\n\tinterval = seconds / (24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" days ago\";\r\n\t}\r\n\tinterval = seconds / (60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" hours ago\";\r\n\t}\r\n\tinterval = seconds / 60;\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" minutes ago\";\r\n\t}\r\n\treturn Math.floor(seconds) + \" seconds ago\";\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { AuthorizationContext } from \"../service-component/Context/authorization\";\r\nimport { ErrorDialog, LoadingDialog } from \"./Dialog\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATECOMMENT_MUTATION, DETELECOMMENT_MUTATION } from \"../service-component/API/mutation\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport timeSince from \"../service-component/Others/timeSince\";\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tfonts: {\r\n\t\tfontWeight: \"bold\"\r\n\t},\r\n\tlistItemSecondaryAction: {\r\n\t\tvisibility: \"hidden\",\r\n\t},\r\n\tlistItem: {\r\n\t\t\"&:hover $listItemSecondaryAction\": {\r\n\t\t\tvisibility: \"inherit\"\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport function Comment(props) {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [createComment, { loading }] = useMutation(CREATECOMMENT_MUTATION);\r\n\tconst [deleteComment] = useMutation(DETELECOMMENT_MUTATION);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleCreateComment = () => {\r\n\t\tcreateComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tcomment: {\r\n\t\t\t\t\tcontent: comment,\r\n\t\t\t\t\ttestId: parseInt(props.testId, 10),\r\n\t\t\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetComment('');\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetError('Hey please, don\\'t spam. We don\\'t have the money to buy more storage for our database.')\r\n\t\t\t})\r\n\t}\r\n\tconst handleDeleteComment = (id) => {\r\n\t\tdeleteComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tcommentId:parseInt(id, 10),\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => console.log(data))\r\n\t\t\t.catch(error => console.log(error))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<List className = { classes.root }>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.comments && props.comments.map((comment) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<ListItem alignItems = \"flex-start\"\r\n\t\t\t\t\t\t\t\t\t\t  classes = {{ container: classes.listItem }}>\r\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar />\r\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\tprimary = {\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style = {{ fontWeight: 'bold', fontSize: '14px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ comment.user.username }\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsecondary = {\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant = \"body1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = \"textPrimary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ fontSize: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ comment.content }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant = 'body2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'textSecondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ fontSize: '12px'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ timeSince(+comment.created) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tstyle = {{ maxWidth: \"90%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{\t(authorization.user.role.name.toLowerCase() === 'admin'\r\n\t\t\t\t\t\t\t\t\t\t|| authorization.user.role.name.toLowerCase() === 'moderator'\r\n\t\t\t\t\t\t\t\t\t\t|| authorization.user.id === comment.user.id) &&\r\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction className = { classes.listItemSecondaryAction }>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick = { () => handleDeleteComment(comment.id) }>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<ListItem alignItems = \"flex-start\">\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tsecondary = {\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tmultiline fullWidth\r\n\t\t\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\t\tid = 'comment'\r\n\t\t\t\t\t\t\t\t\tvalue = { comment }\r\n\t\t\t\t\t\t\t\t\tplaceholder = \"Type your comment here...\"\r\n\t\t\t\t\t\t\t\t\tonChange = { (event) => setComment(event.target.value) }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle = {{ maxWidth: \"95%\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t<IconButton onClick = { handleCreateComment }>\r\n\t\t\t\t\t\t\t<SendIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</React.Fragment>\r\n\t);\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { Comment } from \"../../../presentational-components/Comment\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { TESTCOMMENT_BYID_QUERY, TESTDONEYET_BYID_QUERY } from \"../../../service-component/API/query\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { Text, TitleText } from \"../../../presentational-components/Text\";\r\nimport { ListeningChip, ReadingChip } from \"../../../presentational-components/Chip\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: theme.spacing(2, 24, 2, 24),\r\n\t\tpadding: theme.spacing(2, 8, 2, 8),\r\n\t},\r\n\ttoolbar: {\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function ViewTestPage() {\r\n\tconst { id } = useParams();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst testDoneYet = useQuery(TESTDONEYET_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\ttestId: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\tconst testComment = useQuery(TESTCOMMENT_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\r\n\t// if query test result caused error, redirect to do test.\r\n\tif (testDoneYet.error) return <Redirect to = {`/do/${id}`} />\r\n\tif (testDoneYet.data) console.log(testDoneYet.data);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ (testDoneYet.loading || testComment.loading)\r\n\t\t\t\t?\r\n\t\t\t\t<LoadingDialog open = { (testDoneYet.loading || testComment.loading) } />\r\n\t\t\t\t:\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ResultTest { ...testDoneYet.data.getTestResult } />\r\n\t\t\t\t\t<CommentTest { ...testComment.data.getTestById } />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n};\r\n\r\nfunction ResultTest(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Paper variant = 'outlined' className = { classes.root }>\r\n\t\t\t<Toolbar className = { classes.toolbar }>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TitleText value = { props.test.title } />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TitleText value = { `Your score: ${props.score}` } />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ props.test.type.toLowerCase() === 'reading' ? <ReadingChip /> : <ListeningChip /> }\r\n\t\t\t\t</div>\r\n\t\t\t</Toolbar>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table size = 'small'>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{ [\"Question\", \"Correct Answer\", \"Your Answer\", \"Matched\"].map((title) =>\r\n\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t<TitleText value={ title }/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.answerHistory.map(answer => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.question.statementText } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.question.trueAnswer[0] ? answer.question.trueAnswer[0].text : '' } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.answer ? answer.answer.text : '' } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t(answer.answer.text === (answer.question.trueAnswer[0] ? answer.question.trueAnswer[0].text : ''))\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <CheckIcon /> : <ClearIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nfunction CommentTest(props) {\r\n\tconst { id } = useParams();\r\n\tconst classes = useStyles();\r\n\tconst [comments, setComments] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetComments(props.comments);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Paper variant = 'outlined' className = { classes.root }>\r\n\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t<Comment testId = { id } comments = { comments } />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REFRESHJWT_MUTATION } from \"../../service-component/API/mutation\";\r\n\r\nexport function AuthorizationContainer({ children }) {\r\n\tconst [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n\tconst [unauthorized, setUnauthorized] = useState(false);\r\n\tconst [refreshJWT, { loading }] = useMutation(REFRESHJWT_MUTATION);\r\n\r\n\tconst handleRefreshJWT = async () => {\r\n\t\tconsole.log('refreshJWT');\r\n\t\ttry {\r\n\t\t\tconst data = await refreshJWT();\r\n\t\t\tawait setAuthorization({\r\n\t\t\t\tstatus: true,\r\n\t\t\t\ttoken: data.data.refreshJWT.token,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: data.data.refreshJWT.user.id,\r\n\t\t\t\t\tusername: data.data.refreshJWT.user.username,\r\n\t\t\t\t\trole: {\r\n\t\t\t\t\t\tname: data.data.refreshJWT.user.role.name,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tawait setUnauthorized(true);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tif (authorization.token != null) {\r\n\t\t\t\tconst tokenPayload = authorization.token.split('.')[1];\r\n\t\t\t\tconst tokenExpiration = new Date(tokenPayload);\r\n\t\t\t\tconst now = new Date();\r\n\t\t\t\tif (tokenExpiration.getTime() - now.getTime() < 1000 * 60 * 5) {\r\n\t\t\t\t\tawait handleRefreshJWT();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait handleRefreshJWT();\r\n\t\t\t}\r\n\t\t})()\r\n\t}, []);\r\n\r\n\tif (unauthorized) return <Redirect to = '/' />\r\n\telse return children;\r\n}","import React, { useContext, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { TextWithLink, TitleText } from \"../../../presentational-components/Text\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ActionButton, IconActionButton } from \"../../../presentational-components/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n\tADDANSWER_MUTATION,\r\n\tADDQUESTION_MUTATION,\r\n\tADDQUESTIONGROUP_MUTATION,\r\n\tADDTEST_MUTATION,\r\n\tADDTESTSECTION_MUTATION\r\n} from \"../../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { ListeningChip, ReadingChip } from \"../../../presentational-components/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport * as theme from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tcreateTestContainer: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tmainContainer: {\r\n\t\tmargin: theme.spacing(2, 0, 8),\r\n\t},\r\n\ttestContainer: {\r\n\t\tpadding: theme.spacing(4, 8, 4, 8),\r\n\t},\r\n\ttestSectionContainer: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tpadding: theme.spacing(4),\r\n\t},\r\n\tquestionGroupContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t},\r\n\tquestionContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t},\r\n\tanswerContainer: {\r\n\t\tpaddingLeft: theme.spacing(4),\r\n\t},\r\n\tpaddingContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t}\r\n}));\r\n\r\nexport default function AddTestPage() {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [testInfo, setTestInfo] = useState(null);\r\n\tconst [finished, setFinished] = useState(false);\r\n\r\n\tconst handleCreateTest = (id, title, type) => {\r\n\t\tsetTestInfo({\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\ttype: type,\r\n\t\t});\r\n\t}\r\n\r\n\tif (!authorization.token || authorization.user.role.name.toLowerCase() !== 'admin') return <Redirect to = '/' />;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\ttestInfo\r\n\t\t\t\t\t? finished\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<Container maxWidth = 'xs' className = { classes.createTestContainer }>\r\n\t\t\t\t\t\t<TitleText value = \"Test successfully created\" fontSize = \"18px\"/>\r\n\t\t\t\t\t\t<TextWithLink value = 'Go back to homepage' to = '/' />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Box border = {0} className = { classes.mainContainer }>\r\n\t\t\t\t\t\t<Grid container direction = 'row' justify = 'center' alignItems = 'center'>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<AddTest { ...testInfo }/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {6}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = 'Finish' onClick = { () => setFinished(true) } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<CreateTest onClick = { (id, title, type) => handleCreateTest(id, title, type) } />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction CreateTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [testInput, setTestInput] = useState({\r\n\t\ttitle: '',\r\n\t\ttype: '',\r\n\t});\r\n\tconst [createTest, { loading }] = useMutation(ADDTEST_MUTATION);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleCreateTest = () => {\r\n\t\tif (testInput.title.trimStart() === '' || testInput.type.trimStart() === '') {\r\n\t\t\tsetError('Title and type must not be null.');\r\n\t\t} else {\r\n\t\t\tcreateTest({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\ttest: {\r\n\t\t\t\t\t\ttitle: testInput.title.trim(),\r\n\t\t\t\t\t\ttype: testInput.type,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tprops.onClick(data.data.addTest.id, data.data.addTest.title, data.data.addTest.type);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetError(\"A test with the same title and type already exists!\");\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Container maxWidth = 'xs' className = { classes.createTestContainer }>\r\n\t\t\t\t<TitleText value = \"Create test\" fontSize = \"18px\"/>\r\n\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t<Grid container spacing = {2}>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\tlabel = \"Title\"\r\n\t\t\t\t\t\t\t\tvalue = { testInput.title }\r\n\t\t\t\t\t\t\t\tonChange = { (event) => setTestInput({...testInput, title: event.target.value }) }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\tlabel = 'Type'\r\n\t\t\t\t\t\t\t\tvalue = { testInput.type }\r\n\t\t\t\t\t\t\t\tonChange = { (event) => setTestInput({...testInput, type: event.target.value }) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ ['Reading', 'Listening'].map((option) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t\t\t\t\t\t{ option }\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<ActionButton value = \"Create Test\" onClick = { handleCreateTest }/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction AddTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [numTestSection, setNumTestSection] = useState(1);\r\n\r\n\tconst handleAddTestSection = () => {\r\n\t\tsetNumTestSection(numTestSection + 1);\r\n\t}\r\n\r\n\tconst generateTestSection = () => {\r\n\t\tlet testSection = [];\r\n\t\tfor (let i = 0; i < numTestSection; i++) {\r\n\t\t\ttestSection.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddTestSection { ...props }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn testSection;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.testContainer}>\r\n\t\t\t<Grid container direction = 'row' justify = 'space-evenly'\r\n\t\t\t\t  alignItems = 'center' spacing = {2}>\r\n\t\t\t\t<Grid item xs = {12} sm = {8}>\r\n\t\t\t\t\t<TitleText value = { `Title: ${props.title}` } fontSize = '18px' />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3} sm = {1}>\r\n\t\t\t\t\t<TitleText value = { `ID: ${props.id}` } fontSize = '18px' />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3} sm = {1}>\r\n\t\t\t\t\t{ props.type.toLowerCase() === 'reading' ? <ReadingChip /> : <ListeningChip /> }\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {6} sm = {2}>\r\n\t\t\t\t\t<ActionButton value = { <AddIcon /> } onClick = { handleAddTestSection } />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{ generateTestSection() }\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nfunction AddTestSection(props) {\r\n\tconst classes = useStyles();\r\n\tconst [testSectionInput, setTestSectionInput] = useState({\r\n\t\ttestId: props.id,\r\n\t\ttype: props.type,\r\n\t\ttext: '',\r\n\t\taudio: '',\r\n\t});\r\n\tconst [addTestSection, { loading }] = useMutation(ADDTESTSECTION_MUTATION);\r\n\tconst [numQuestionGroup, setNumQuestionGroup] = useState(1);\r\n\tconst [testSectionInfo, setTestSectionInfo] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleAddQuestionGroup = () => {\r\n\t\tsetNumQuestionGroup(numQuestionGroup + 1);\r\n\t}\r\n\r\n\tconst handleSaveTestSection = () => {\r\n\t\t// && here because with listening test, text can be null and vice versa, only check if both is null\r\n\t\tif (testSectionInput.text.trimStart() === '' && testSectionInput.audio.trimStart() === '') {\r\n\t\t\tsetError('Text or audio must not be null.');\r\n\t\t} else {\r\n\t\t\taddTestSection({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tsection: {\r\n\t\t\t\t\t\ttestId: testSectionInput.testId,\r\n\t\t\t\t\t\ttype: testSectionInput.type,\r\n\t\t\t\t\t\ttext: testSectionInput.text.trim(),\r\n\t\t\t\t\t\taudio: testSectionInput.audio.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none'\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetTestSectionInfo({\r\n\t\t\t\t\t\tid: data.data.addTestSection.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst generateQuestionGroup = () => {\r\n\t\tlet questionGroup = [];\r\n\t\tfor (let i = 0; i < numQuestionGroup; i++) {\r\n\t\t\tquestionGroup.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddQuestionGroup { ...testSectionInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn questionGroup;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Paper variant = 'outlined' className = { classes.testSectionContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'flex-end' alignItems = 'center' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { testSectionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Section statement text'\r\n\t\t\t\t\t\t\tvalue = { testSectionInput.text }\r\n\t\t\t\t\t\t\tonChange = { (event) => setTestSectionInput({...testSectionInput, text: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ testSectionInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddQuestionGroup } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveTestSection } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ testSectionInfo && generateQuestionGroup() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction AddQuestionGroup(props) {\r\n\tconst classes = useStyles();\r\n\tconst [questionGroupInput, setQuestionGroupInput] = useState({\r\n\t\tsectionId: props.id,\r\n\t\tintroText: '',\r\n\t});\r\n\tconst [addQuestionGroup, { loading }] = useMutation(ADDQUESTIONGROUP_MUTATION);\r\n\tconst [questionGroupInfo, setQuestionGroupInfo] = useState(null);\r\n\tconst [numQuestion, setNumQuestion] = useState(1);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleAddQuestion = () => {\r\n\t\tsetNumQuestion(numQuestion + 1);\r\n\t}\r\n\r\n\tconst handleSaveQuestionGroup = () => {\r\n\t\tif (questionGroupInput.introText.trimStart() === '') {\r\n\t\t\tsetError('Intro text for question group must not be null.');\r\n\t\t} else {\r\n\t\t\taddQuestionGroup({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tgroup: {\r\n\t\t\t\t\t\tsectionId: questionGroupInput.sectionId,\r\n\t\t\t\t\t\tintroText: questionGroupInput.introText.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none',\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tsetQuestionGroupInfo({\r\n\t\t\t\t\t\tid: data.data.addQuestionGroup.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => console.log(error))\r\n\t\t}\r\n\t}\r\n\r\n\tconst generateQuestion = () => {\r\n\t\tlet question = [];\r\n\t\tfor (let i = 0; i < numQuestion; i++) {\r\n\t\t\tquestion.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddQuestion { ...questionGroupInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn question;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.questionGroupContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'flex-end' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { questionGroupInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Introduction text'\r\n\t\t\t\t\t\t\tvalue = { questionGroupInput.introText }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionGroupInput({...questionGroupInput, introText: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ questionGroupInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddQuestion } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveQuestionGroup } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ questionGroupInfo && generateQuestion() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction AddQuestion(props) {\r\n\tconst classes = useStyles();\r\n\tconst [questionInput, setQuestionInput] = useState({\r\n\t\tquestionGroupId: props.id,\r\n\t\ttype: '',\r\n\t\tstatementText: '',\r\n\t});\r\n\tconst [addQuestion, { loading }] = useMutation(ADDQUESTION_MUTATION);\r\n\tconst [questionInfo, setQuestionInfo] = useState(null);\r\n\tconst [numAnswer, setNumAnswer] = useState(1);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleSaveQuestion = () => {\r\n\t\tif (questionInput.type.trimStart() === '' || questionInput.statementText.trimStart() === '') {\r\n\t\t\tsetError('Type or statement text must not be null.');\r\n\t\t} else {\r\n\t\t\taddQuestion({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tquestion: {\r\n\t\t\t\t\t\tquestionGroupId: questionInput.questionGroupId,\r\n\t\t\t\t\t\ttype: questionInput.type.trim(),\r\n\t\t\t\t\t\tstatementText: questionInput.statementText.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none',\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tsetQuestionInfo({\r\n\t\t\t\t\t\tid: data.data.addQuestion.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => console.log(error));\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAddAnswer = () => {\r\n\t\tsetNumAnswer(numAnswer + 1);\r\n\t}\r\n\r\n\tconst generateAnswer = () => {\r\n\t\tlet answer = [];\r\n\t\tfor (let i = 0; i < numAnswer; i++) {\r\n\t\t\tanswer.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddAnswer { ...questionInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn answer;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.questionContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {6} sm = {1}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\t\tdisabled = { questionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Type'\r\n\t\t\t\t\t\t\tvalue = { questionInput.type }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionInput({...questionInput, type: event.target.value }) }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ ['FITB', 'MC', 'TF'].map((option) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t\t\t\t\t{ option }\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { questionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Question statement'\r\n\t\t\t\t\t\t\tvalue = { questionInput.statementText }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionInput({...questionInput, statementText: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ questionInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddAnswer } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveQuestion } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ questionInfo && generateAnswer() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n}\r\n\r\nfunction AddAnswer(props) {\r\n\tconst classes = useStyles();\r\n\tconst [answerInput, setAnswerInput] = useState({\r\n\t\tquestionId: props.id,\r\n\t\ttext: '',\r\n\t\tisCorrect: false,\r\n\t});\r\n\tconst [addAnswer, { loading }] = useMutation(ADDANSWER_MUTATION);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [answerInfo, setAnswerInfo] = useState(null);\r\n\r\n\tconst handleSaveAnswer = () => {\r\n\t\tif (answerInput.text.trimStart() === '') {\r\n\t\t\tsetError('Answer must not be null');\r\n\t\t} else {\r\n\t\t\taddAnswer({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tanswer: {\r\n\t\t\t\t\t\tquestionId: answerInput.questionId,\r\n\t\t\t\t\t\ttext: answerInput.text.trim(),\r\n\t\t\t\t\t\tisCorrect: answerInput.isCorrect,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none'\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetAnswerInfo({\r\n\t\t\t\t\t\tid: data.data.addAnswer.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetError(\"This answer is already assigned to this question.\");\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.answerContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisabled = { answerInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Answer text'\r\n\t\t\t\t\t\t\tvalue = { answerInput.text }\r\n\t\t\t\t\t\t\tonChange = { (event) => setAnswerInput({...answerInput, text: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tstartAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = 'start'>\r\n\t\t\t\t\t\t\t\t\t\t<IconActionButton disabled = { answerInfo }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  icon = { answerInput.isCorrect ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => setAnswerInput({...answerInput, isCorrect: !answerInput.isCorrect }) } />\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = 'end'>\r\n\t\t\t\t\t\t\t\t\t\t{ answerInfo == null && <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveAnswer } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Text, TitleText } from \"../../presentational-components/Text\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsection: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tpadding: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tquestionGroup: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tquestion: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tpadding: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function ReadingPassage({ section, passage }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {1.5} className = { classes.section }>\r\n\t\t\t<div className = { classes.title }>\r\n\t\t\t\t<TitleText value = {`Section ${section}`} fontSize = { '18px' } />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tpassage.split('\\n').map((text) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Text value = { text.substring(0, text.length - 2) } />\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport function QuestionGroup({ questionGroups }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(questionGroups.map(questionGroup => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0} className = { classes.questionGroup }>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${questionGroup.order}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Text value = { questionGroup.introText }/>\r\n\t\t\t\t\t\t\t<Question questions = { questionGroup.questions } />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Question({ questions }) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ questions.map((question) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(question.type === 'TF')\r\n\t\t\t\t\t\t? <TFQuestion order = { question.order } statementText = { question.statementText } answers = { question.answers } />\r\n\t\t\t\t\t\t: (question.type === 'FITB')\r\n\t\t\t\t\t\t\t? <FITBQuestion order = { question.order } statementText = { question.statementText } />\r\n\t\t\t\t\t\t\t: <MCQuestion order = { question.order } statementText = { question.statementText } answers = { question.answers } />\r\n\t\t\t\t)\r\n\t\t\t}) }\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport function TFQuestion({ order, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport function MCQuestion({ order, statementText, answers }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t\t<Box border = {0} style = {{ marginLeft: '25px'}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tanswers.map(answer => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline' style = {{ marginLeft: '10px', marginRight: '25px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t{ answer.text.substring(0, 1) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t\t\t\t\t\t{ answer.text.substring(3) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n};\r\nexport function FITBQuestion({ order, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText.replace('_', '_'.repeat(20)) }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { TitleText } from \"../../presentational-components/Text\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tanswer: {\r\n\t\tmargin: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function AnswerGroup(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(props.questionGroups.map(questionGroup => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${questionGroup.order}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Answer questions = { questionGroup.questions } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\tonAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Answer(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.answer }>\r\n\t\t\t{ props.questions.map(question => (\r\n\t\t\t\t<TypeAnswer type = { question.type } id = { question.id } order = { question.order }\r\n\t\t\t\t\t\t\tanswers = { question.answers } onAnswer = { props.onAnswer } />\r\n\t\t\t)) }\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport function TypeAnswer(props) {\r\n\tconst theme = useTheme();\r\n\tconst [answer, setAnswer] = useState({\r\n\t\tquestionId: parseInt(props.id, 10),\r\n\t\tanswerString: '',\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAnswer({\r\n\t\t\tquestionId: parseInt(props.id, 10),\r\n\t\t\tanswerString: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.onAnswer(answer);\r\n\t}, [answer.answerString]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tprops.type.toUpperCase() === 'TF'\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ props.answers.map((option) => (\r\n\t\t\t\t\t\t\t<MenuItem key = { option.id } value = { option.text }>\r\n\t\t\t\t\t\t\t\t{ option.text }\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)) }\r\n\t\t\t\t\t</TextField>\r\n\t\t\t\t\t: props.type.toUpperCase() === 'FITB'\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ props.answers.map((option) => (\r\n\t\t\t\t\t\t\t<MenuItem key = { option.id } value = { option.text }>\r\n\t\t\t\t\t\t\t\t{ option.text.substring(0, 1) }\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)) }\r\n\t\t\t\t\t</TextField>\r\n\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { QuestionGroup, ReadingPassage } from \"./Question\";\r\nimport { AnswerGroup } from \"./Answer\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t},\r\n\tcard: {\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\ttimer: {\r\n\t\ttop: 'auto',\r\n\t\tbottom: 0,\r\n\t},\r\n\tzoom: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: theme.spacing(2),\r\n\t\tright: theme.spacing(2),\r\n\t},\r\n\talert: {\r\n\t\tfontWeight: 'bold',\r\n\t\tbackgroundColor: 'white',\r\n\t}\r\n}));\r\n\r\nexport function ReadingTest(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t(props.sections.map(section => (\r\n\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<ReadingPassage section = { section.order } passage = { section.statementText } />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {9}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<QuestionGroup questionGroups = { section.questionGroups } />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<AnswerGroup questionGroups = { section.questionGroups } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\t onAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)))\r\n\t)\r\n}\r\n\r\nexport function TestTimer(props) {\r\n\tconst classes = useStyles();\r\n\tconst [progress, setProgress] = useState(0);\r\n\tconst [alert, setAlert] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetProgress((progress) => {\r\n\t\t\t\tif (progress === 100) {\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t}\r\n\t\t\t\tconst diff = 100 / (props.minutes * 60);\r\n\t\t\t\t// console.log(progress + diff + ' is ' + (progress + diff) * 180);\r\n\t\t\t\treturn Math.min(progress + diff, 100);\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (progress >= 100) {\r\n\t\t\tsetAlert(`${props.reviewMinutes} minutes to review your result.`);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tprops.onTimeOut();\r\n\t\t\t}, props.reviewMinutes * 60 * 1000);\r\n\t\t}\r\n\t\telse if (progress >= 83 && progress <= 85) setAlert('Only 10 minutes left.');\r\n\t\telse if (progress >= 66 && progress <= 68) setAlert('20 minutes left. You should do section 3 now!');\r\n\t\telse if (progress >= 33 && progress <= 35) setAlert('20 minutes passed!');\r\n\t\telse setAlert(null);\r\n\t}, [progress]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AppBar position = 'fixed' className = { classes.timer }>\r\n\t\t\t\t<div style = {{ width: '100%' }}>\r\n\t\t\t\t\t<LinearProgress variant = \"determinate\" value = { progress } />\r\n\t\t\t\t</div>\r\n\t\t\t</AppBar>\r\n\t\t\t<AlertTimer alert = { alert } />\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport function AlertTimer(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box className = { classes.zoom } position = 'fixed' zIndex = \"tooltip\">\r\n\t\t\t<Zoom in = { props.alert } >\r\n\t\t\t\t<Card variant = 'outlined' classes = {{ root: classes.card }}>\r\n\t\t\t\t\t<List className = { classes.alert }>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<PriorityHighIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary = { props.alert } />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Card>\r\n\t\t\t</Zoom>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n","import Container from \"@material-ui/core/Container\";\r\nimport { TitleText } from \"../../../presentational-components/Text\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ActionButton } from \"../../../presentational-components/Button\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { TEST_BYID_QUERY, TESTDONEYET_BYID_QUERY } from \"../../../service-component/API/query\";\r\nimport { STARTTEST_MUTATION, SUBMITTEST_MUTATION } from \"../../../service-component/API/mutation\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { ReadingTest, TestTimer } from \"../../../container-components/Test/Test\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttestContainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tcommentContainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingBottom: theme.spacing(8),\r\n\t},\r\n\tcardHeader: {\r\n\t\tpaddingBottom: theme.spacing(1),\r\n\t},\r\n\tcardContent: {\r\n\t\tpaddingTop: theme.spacing(0),\r\n\t},\r\n\tnoticed: {\r\n\t\tmarginTop: theme.spacing(20),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n}));\r\n\r\nexport default function DoTestPage() {\r\n\tconst { id } = useParams();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst { loading, data } = useQuery(TESTDONEYET_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\ttestId: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\tconst [noticed, setNoticed] = useState(false);\r\n\tconst [startTest] = useMutation(STARTTEST_MUTATION);\r\n\tconst [done, setDone] = useState(false);\r\n\r\n\tconst handleStartTest = () => {\r\n\t\tsetNoticed(true);\r\n\t\tstartTest({\r\n\t\t\tvariables: {\r\n\t\t\t\ttestId: parseInt(id, 10),\r\n\t\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\tconst handleDoneTest = () => {\r\n\t\tsetDone(true);\r\n\t}\r\n\r\n\t// if test is done by this user, redirect to view test.\r\n\tif (data) return <Redirect to = {`/view/${id}`} />\r\n\t// if user is well informed by Noticed component, start test timer on backend.\r\n\tif (done) return <Redirect to = {`/view/${id}`} />\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading\r\n\t\t\t\t? <LoadingDialog open = { loading } />\r\n\t\t\t\t: noticed\r\n\t\t\t\t\t? <DoTest onDone = { () => handleDoneTest() } />\r\n\t\t\t\t\t: <Noticed onClick = { () => handleStartTest() } />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction Noticed(props) {\r\n\tconst classes = useStyles();\r\n\tconst rules = [\r\n\t\t{\r\n\t\t\tid: '1',\r\n\t\t\ttext: 'Test will be account for 60 minutes. After 60 minutes, current answer will be submitted and result will be counted towards your rating.'\r\n\t\t},{\r\n\t\t\tid: '2',\r\n\t\t\ttext: 'Please do not reload your browser while you do your test; or else, your answer will be deleted.',\r\n\t\t},{\r\n\t\t\tid: '3',\r\n\t\t\ttext: 'You will be given additional 5 minutes to review your result after 60 minutes ended. Please submit your result in time.',\r\n\t\t}\r\n\t]\r\n\treturn (\r\n\t\t<Container maxWidth = 'xs' className = { classes.noticed }>\r\n\t\t\t<TitleText value = \"Before you do your test...\" fontSize = \"18px\"/>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trules.map(rule => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Box border = {0} style = {{ marginTop: '18px' }}>\r\n\t\t\t\t\t\t\t\t\t<Typography display = 'inline' style = {{ marginLeft: '10px', marginRight: '25px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t\t{ rule.id }\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t\t\t\t\t\t\t{ rule.text }\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<ActionButton value = \"Do test\" onClick = { () => props.onClick() }/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nfunction DoTest(props) {\r\n\tconst { id } = useParams();\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [answers, setAnswers] = useState([]);\r\n\tconst test = useQuery(TEST_BYID_QUERY, { variables: { id: parseInt(id, 10) } });\r\n\tconst [submitTest, { loading }] = useMutation(SUBMITTEST_MUTATION);\r\n\r\n\tlet handleAnswer = () => async (answer) => {\r\n\t\tlet elementIdx = answers.findIndex((element => element.questionId === answer.questionId));\r\n\t\tif (elementIdx === -1) {\r\n\t\t\tawait setAnswers([...answers, {\r\n\t\t\t\tquestionId: answer.questionId,\r\n\t\t\t\tanswerString: answer.answerString,\r\n\t\t\t}]);\r\n\t\t} else {\r\n\t\t\tlet newAnswers = answers;\r\n\t\t\tnewAnswers[elementIdx].answerString = answer.answerString;\r\n\t\t\tawait setAnswers(newAnswers);\r\n\t\t}\r\n\t}\r\n\r\n\tlet handleSubmit = () => {\r\n\t\tconsole.log(answers);\r\n\t\tsubmitTest({\r\n\t\t\tvariables: {\r\n\t\t\t\ttestSubmission: {\r\n\t\t\t\t\ttestId: parseInt(id, 10),\r\n\t\t\t\t\tuserId:\tparseInt(authorization.user.id, 10),\r\n\t\t\t\t\tanswers: answers,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorPolicy: 'none',\r\n\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tprops.onDone();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ test.loading && <LoadingDialog open = { test.loading } /> }\r\n\t\t\t{ !test.loading && <TestTimer minutes = { 5 } reviewMinutes = { 1 } onTimeOut = { handleSubmit }/> }\r\n\t\t\t{ test.data &&\r\n\t\t\t<Grid container direction = 'row' justify = 'flex-start'>\r\n\t\t\t\t<Container className = { classes.testContainer }>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(test.data.getTestById.type.toLowerCase() === 'reading')\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t<ReadingTest sections = { test.data.getTestById.sections } answers = { answers } onAnswer = { handleAnswer() } />\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>This is not developed yet.</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Grid container spacing = {2} direction = 'row' justify = 'space-evenly'>\r\n\t\t\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t\t\t<ActionButton value = 'Submit' onClick = { () => handleSubmit() }/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</Grid>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport NavigationBar from \"../../presentational-components/NavigationBar\";\r\nimport AllTestPage from \"./Test/AllTestPage\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport ViewTestPage from \"./Test/ViewTestPage\";\r\nimport { AuthorizationContainer } from \"../../container-components/Authorization/AuthorizationContainer\";\r\nimport AddTestPage from \"./Test/AddTestPage\";\r\nimport DoTestPage from \"./Test/DoTestPage\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { SIGNOUT_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\toverflow: 'auto'\r\n\t},\r\n\tappBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function HomePage() {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [signOut] = useMutation(SIGNOUT_MUTATION);\r\n\tconst navigationBarFunction = [\r\n\t\t<MenuItem onClick = { () => handleSignOut() }>Sign Out</MenuItem>,\r\n\t];\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tsignOut().then().catch();\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthorizationContainer>\r\n\t\t\t<div className = { classes.root }>\r\n\t\t\t\t<NavigationBar options = { navigationBarFunction }/>\r\n\t\t\t\t<div className = {classes.content}>\r\n\t\t\t\t\t<div className = {classes.appBarSpacer}/>\r\n\t\t\t\t\t<BrowserRouter basename = \"/qnc-ielts-practice/tests\">\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path = \"/\" component = { AllTestPage } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/view/:id\" children = { <ViewTestPage /> } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/do/:id\" children = { <DoTestPage /> } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/add\" component = { AddTestPage } />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</AuthorizationContainer>\r\n\t);\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport LandingPage from \"./route-component/Authorization/LandingPage\";\r\nimport SignUpPage from \"./route-component/Authorization/SignUpPage\";\r\nimport ForgotPasswordPage from \"./route-component/Authorization/ForgotPasswordPage\";\r\nimport HomePage from \"./route-component/Home/HomePage\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { AuthorizationContext } from \"./service-component/Context/authorization\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { ApolloClient, ApolloLink, ApolloProvider, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\n// https://coolors.co/fcba04-ffebeb-590004\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#8c332d',\r\n            main: '#590004',\r\n            dark: '#350000',\r\n            contrastText: '#ffffff'\r\n        },\r\n        secondary: {\r\n            light: '#ffec4e',\r\n            main: '#fcba04',\r\n            dark: '#c48a00',\r\n            contrastText: '#000000'\r\n        },\r\n        chip: {\r\n            listening: '#ff7077',\r\n            reading: '#fede86',\r\n        },\r\n        table: {\r\n            head: '#ffffff',\r\n            text: '#000000',\r\n            even: '#ffffff',\r\n            odd: '#f5f5f5',\r\n        },\r\n        action: {\r\n            hover: '#cccccc',\r\n        }\r\n\r\n    },\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors) {\r\n        console.log('graphQLErrors', graphQLErrors);\r\n    }\r\n    if (networkError) {\r\n        console.log('networkError', networkError);\r\n    }\r\n});\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: process.env.API_URL || 'https://qnc-ielts-practice.herokuapp.com/graphql',\r\n    credentials: 'include'\r\n});\r\n\r\nlet token;\r\nconst authLink = setContext((_, { headers }) => {\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(ApolloLink.from([errorLink, httpLink])),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default function App() {\r\n    const [authorizationData, setAuthorizationData] = useState({\r\n        status: false,\r\n        token: null,\r\n        user: {\r\n            id: null,\r\n            username: null,\r\n            role: {\r\n                name: null\r\n            }\r\n        }\r\n    });\r\n\r\n    token = authorizationData.token;\r\n\r\n    return (\r\n        <ThemeProvider theme = {theme}>\r\n            <ApolloProvider client = { client }>\r\n                <AuthorizationContext.Provider value = {[authorizationData, setAuthorizationData]}>\r\n                    <BrowserRouter basename = \"/qnc-ielts-practice\">\r\n                        <Switch>\r\n                            <Route exact path = \"/\" component = { LandingPage } />\r\n                            <Route exact path = \"/create-account\" component = { SignUpPage } />\r\n                            <Route exact path = \"/forgot-password\" component = { ForgotPasswordPage } />\r\n                            <Route path = \"/tests\" component = { HomePage } />\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </AuthorizationContext.Provider>\r\n            </ApolloProvider>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}