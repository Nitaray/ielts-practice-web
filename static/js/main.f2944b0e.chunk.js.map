{"version":3,"sources":["presentational-components/Button.js","presentational-components/Input.js","presentational-components/Text.js","service-component/API/mutation.js","presentational-components/Dialog.js","service-component/Context/authorization.js","route-component/Authorization/LandingPage.js","route-component/Authorization/SignUpPage.js","route-component/Authorization/ForgotPasswordPage.js","presentational-components/NavigationBar.js","presentational-components/Chip.js","service-component/API/query.js","container-components/Test/TestTable.js","route-component/Home/Test/AllTestPage.js","service-component/Others/timeSince.js","presentational-components/Comment.js","route-component/Home/Test/ViewTestPage.js","container-components/Authorization/AuthorizationContainer.js","route-component/Home/Test/AddTestPage.js","container-components/Test/Question.js","container-components/Test/Answer.js","container-components/Test/Test.js","route-component/Home/Test/DoTestPage.js","route-component/Home/HomePage.js","App.js","index.js"],"names":["ActionButton","value","onClick","handleClick","Button","fullWidth","disableElevation","variant","color","IconActionButton","disabled","icon","IconButton","DropdownButton","options","React","useState","anchorEl","setAnchorEl","Paper","elevation","aria-haspopup","event","currentTarget","style","margin","border","Menu","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","map","option","TextInput","size","label","name","onChange","handleChange","TextField","required","autoFocus","id","PasswordInput","type","TitleText","fontSize","Typography","noWrap","fontWeight","Text","align","TextWithLink","to","Link","component","RouteLink","underline","SIGNIN_MUTATION","gql","SIGNUP_MUTATION","SIGNOUT_MUTATION","REFRESHJWT_MUTATION","CREATECOMMENT_MUTATION","DETELECOMMENT_MUTATION","ADDTEST_MUTATION","ADDTESTSECTION_MUTATION","ADDQUESTIONGROUP_MUTATION","ADDQUESTION_MUTATION","ADDANSWER_MUTATION","SUBMITTEST_MUTATION","STARTTEST_MUTATION","DELETETEST_MUTATION","ErrorDialog","error","handleClose","Dialog","DialogContent","DialogContentText","DialogActions","LoadingDialog","PaperProps","backgroundColor","boxShadow","CircularProgress","AuthorizationContext","createContext","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","LandingPage","classes","history","useHistory","username","password","signInInfo","setSignInInfo","setError","useMutation","signIn","loading","useContext","authorization","setAuthorization","refreshJWT","refreshLoading","useEffect","a","data","status","token","user","role","console","log","handleSignInChange","prop","preventDefault","target","handleSignInClick","variables","errorPolicy","then","login","push","catch","Fragment","Grid","container","className","CssBaseline","item","xs","sm","md","Avatar","direction","justify","SignUpPage","confirmPassword","signUpInfo","setSignUpInfo","signUp","handleSignUpChange","Container","maxWidth","ForgotPasswordPage","email","forgotPasswordInfo","setForgotPasswordInfo","toolBar","common","white","black","justifyContent","overflowX","appBar","marginBottom","NavigationBar","props","AppBar","Toolbar","chip","maxHeight","ListeningChip","useTheme","Chip","listening","ReadingChip","reading","ALLTEST_QUERY","DONETEST_BYUSERID_QUERY","TEST_BYID_QUERY","TESTDONEYET_BYID_QUERY","TESTCOMMENT_BYID_QUERY","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","table","visuallyHidden","clip","overflow","padding","position","top","toolbar","paddingLeft","paddingRight","toolbarTitle","flex","headCells","numeric","SortTableHead","deleteMode","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","TableToolbar","toLowerCase","Tooltip","title","onAdd","onDelete","TestTable","allTests","doneTests","tests","setTests","setDeleteMode","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","refetchQueries","query","parseInt","deleteTest","emptyRows","Math","min","length","tmp","allTest","findIndex","element","TableContainer","Table","property","rowCount","TableBody","slice","row","hover","tabIndex","testId","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","paddingTop","paddingBottom","AllTestPage","useQuery","getUserById","timeSince","date","seconds","floor","Date","now","interval","fonts","listItemSecondaryAction","visibility","listItem","Comment","comment","setComment","createComment","deleteComment","List","comments","ListItem","ListItemAvatar","ListItemText","primary","content","created","ListItemSecondaryAction","commentId","Divider","multiline","placeholder","userId","ViewTestPage","useParams","testDoneYet","testComment","ResultTest","getTestResult","CommentTest","getTestById","test","score","answerHistory","answer","question","statementText","trueAnswer","text","setComments","AuthorizationContainer","children","unauthorized","setUnauthorized","handleRefreshJWT","tokenPayload","split","tokenExpiration","getTime","createTestContainer","mainContainer","testContainer","testSectionContainer","questionGroupContainer","questionContainer","answerContainer","paddingContainer","AddTestPage","testInfo","setTestInfo","finished","setFinished","Box","AddTest","CreateTest","handleCreateTest","testInput","setTestInput","createTest","select","MenuItem","trimStart","trim","addTest","numTestSection","setNumTestSection","testSection","i","AddTestSection","generateTestSection","audio","testSectionInput","setTestSectionInput","addTestSection","numQuestionGroup","setNumQuestionGroup","testSectionInfo","setTestSectionInfo","InputProps","endAdornment","InputAdornment","section","questionGroup","AddQuestionGroup","generateQuestionGroup","sectionId","introText","questionGroupInput","setQuestionGroupInput","addQuestionGroup","questionGroupInfo","setQuestionGroupInfo","numQuestion","setNumQuestion","group","AddQuestion","generateQuestion","questionGroupId","questionInput","setQuestionInput","addQuestion","questionInfo","setQuestionInfo","numAnswer","setNumAnswer","AddAnswer","generateAnswer","questionId","isCorrect","answerInput","setAnswerInput","addAnswer","answerInfo","setAnswerInfo","startAdornment","ReadingPassage","passage","substring","QuestionGroup","questionGroups","Question","questions","TFQuestion","answers","FITBQuestion","MCQuestion","marginRight","marginLeft","replace","repeat","AnswerGroup","Answer","onAnswer","TypeAnswer","answerString","setAnswer","toUpperCase","card","borderRadius","timer","bottom","zoom","right","alert","ReadingTest","sections","TestTimer","progress","setProgress","setAlert","setInterval","clearInterval","diff","minutes","reviewMinutes","setTimeout","onTimeOut","LinearProgress","AlertTimer","zIndex","Zoom","in","Card","ListItemIcon","commentContainer","cardHeader","cardContent","noticed","DoTestPage","setNoticed","startTest","done","setDone","DoTest","onDone","Noticed","rule","setAnswers","submitTest","handleSubmit","testSubmission","elementIdx","newAnswers","flexGrow","appBarSpacer","mixins","HomePage","signOut","navigationBarFunction","handleSignOut","basename","exact","path","createMuiTheme","light","dark","contrastText","head","even","odd","action","errorLink","onError","graphQLErrors","networkError","httpLink","createHttpLink","uri","process","API_URL","credentials","authLink","setContext","_","headers","client","ApolloClient","link","concat","ApolloLink","from","cache","InMemoryCache","App","authorizationData","setAuthorizationData","ThemeProvider","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2944b0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport function ActionButton({ value, onClick }) {\r\n\tconst handleClick = () => onClick();\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tfullWidth disableElevation\r\n\t\t\tvariant = \"contained\"\r\n\t\t\tcolor = \"primary\"\r\n\t\t\tonClick = { () => handleClick() }>\r\n\t\t\t{ value }\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport function IconActionButton({ disabled, icon, onClick }) {\r\n\tconst handleClick = () => onClick();\r\n\r\n\treturn (\r\n\t\t<IconButton disabled = { disabled } color = \"primary\" onClick = { () => handleClick() }>\r\n\t\t\t{ icon }\r\n\t\t</IconButton>\r\n\t);\r\n}\r\n\r\nexport function DropdownButton({ options, icon }) {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget);\r\n\tconst handleClose = () => setAnchorEl(null);\r\n\r\n\treturn (\r\n\t\t<Paper elevation = {0}>\r\n\t\t\t<IconButton color = \"inherit\"\r\n\t\t\t\t\t\taria-haspopup = \"true\"\r\n\t\t\t\t\t\tonClick = { handleClick }>\r\n\t\t\t\t{ icon }\r\n\t\t\t</IconButton>\r\n\t\t\t<Paper elevation = {0} style = {{ margin: '0px', border: \"1px solid black\" }} />\r\n\t\t\t<Menu\r\n\t\t\t\tkeepMounted\r\n\t\t\t\televation = {2}\r\n\t\t\t\tgetContentAnchorEl = {null}\r\n\t\t\t\tanchorOrigin = {{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin = {{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl = { anchorEl }\r\n\t\t\t\topen = { Boolean(anchorEl) }\r\n\t\t\t\tonClose = { handleClose }>\r\n\t\t\t\t{ options.map((option) => { return (option) }) }\r\n\t\t\t</Menu>\r\n\t\t</Paper>\r\n\t);\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nexport function TextInput({ size, label, name, value, onChange }) {\r\n\tlet handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tsize = { size }\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function PasswordInput({ label, name, value, onChange }) {\r\n\tconst handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\ttype = \"password\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function SelectInput({ label, name, choices }) {\r\n\treturn (\r\n\t\t<Select\r\n\t\t\trequired fullWidth select\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t>\r\n\t\t\t{ choices.map((choice) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem key = { choice } value = { choice }>{ choice }</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Select>\r\n\t)\r\n};","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport function TitleText({ value, fontSize }) {\r\n\treturn (\r\n\t\t<Typography noWrap\r\n\t\t\t\t\tcolor = 'inherit'\r\n\t\t\t\t\tvariant = 'inherit'\r\n\t\t\t\t\tstyle = {{ fontWeight: 'bold', fontSize: fontSize }}\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nexport function Text({ value, align }) {\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\talign = { align }\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport function TextWithLink({ value, to }) {\r\n\treturn (\r\n\t\t<Link component = { RouteLink } to = { to } underline = 'none'>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant = \"body2\">\r\n\t\t\t\t{ value }\r\n\t\t\t</Typography>\r\n\t\t</Link>\r\n\t);\r\n}","import gql from \"graphql-tag\";\r\n\r\nexport const SIGNIN_MUTATION = gql`\r\n     mutation Login($username: String!, $password: String!) {\r\n        login(username: $username, password: $password) {\r\n            token\r\n            user {\r\n                id\r\n                username\r\n                role {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n     }   \r\n     `;\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n     mutation signup($user: UserInput!) {\r\n          signup(user: $user) {\r\n               token\r\n          }\r\n     }\r\n     `;\r\n\r\nexport const SIGNOUT_MUTATION = gql`\r\n\tmutation logout {\r\n\t\tlogout\r\n\t}\r\n`;\r\n\r\nexport const REFRESHJWT_MUTATION = gql`\r\n     mutation refreshJWT {\r\n          refreshJWT {\r\n               token\r\n               user {\r\n                    id\r\n                    username\r\n                    role {\r\n                         name\r\n                    }\r\n               }\r\n          }\r\n     }\r\n     `;\r\n\r\nexport const CREATECOMMENT_MUTATION = gql`\r\n    mutation createComment($comment: CommentInput!) {\r\n        createComment(comment: $comment) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DETELECOMMENT_MUTATION = gql`\r\n    mutation deleteComment($commentId: Int!) {\r\n        deleteComment(commentId: $commentId) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDTEST_MUTATION = gql`\r\n    mutation addTest($test: TestInput!) {\r\n        addTest(test: $test) {\r\n            id\r\n            title\r\n            type\r\n        }\r\n    }\r\n    `;\r\n\r\nexport const ADDTESTSECTION_MUTATION = gql`\r\n    mutation addTestSection($section: TestSectionInput!) {\r\n        addTestSection(section: $section) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDQUESTIONGROUP_MUTATION = gql`\r\n    mutation addQuestionGroup($group: QuestionGroupInput!) {\r\n        addQuestionGroup(group: $group) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDQUESTION_MUTATION = gql`\r\n    mutation addQuestion($question: QuestionInput!) {\r\n        addQuestion(question: $question) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADDANSWER_MUTATION = gql`\r\n    mutation addAnswer($answer: AnswerInput!) {\r\n        addAnswer(answer: $answer) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SUBMITTEST_MUTATION = gql`\r\n\tmutation submitTest($testSubmission: TestSubmission!) {\r\n\t\tsubmitTest(testSubmission: $testSubmission) {\r\n\t\t\ttest {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\ttype\r\n\t\t\t\tcomments {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tuser {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tusername\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent\r\n\t\t\t\t\tcreated\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tscore\r\n\t\t\tanswerHistory {\r\n\t\t\t\tquestion {\r\n\t\t\t\t\ttype\r\n\t\t\t\t\tstatementText\r\n\t\t\t\t}\r\n\t\t\t\tanswer {\r\n\t\t\t\t\ttext\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const STARTTEST_MUTATION = gql`\r\n\tmutation startTest($testId: Int!, $userId: Int!) {\r\n\t\tstartTest(testId: $testId, userId: $userId) {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\ttype\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const DELETETEST_MUTATION = gql`\r\n\tmutation deleteTest($testId: Int!) {\r\n\t\tdeleteTest(testId: $testId) {\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport function ErrorDialog({ error, open, onClose }) {\r\n\tconst handleClose = () => onClose();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog\r\n\t\t\t\topen = { open }\r\n\t\t\t\tonClose = { handleClose }\r\n\t\t\t>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ error }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { handleClose } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function LoadingDialog({ open }) {\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen = { open }\r\n\t\t\tPaperProps = {{\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: 'transparent',\r\n\t\t\t\t\tboxShadow: 'none'\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<CircularProgress size = { 50 }/>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport function SuccessDialog({ success, open }) {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ success }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function InformDialog({ open, information, onContinue, onCancel}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open } onClose = { onCancel }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ information }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { onCancel } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick = { onContinue } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tContinue\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const AuthorizationContext = React.createContext();","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REFRESHJWT_MUTATION, SIGNIN_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../presentational-components/Dialog\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function LandingPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [signInInfo, setSignInInfo] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const [signIn, { loading }] = useMutation(SIGNIN_MUTATION);\r\n    const [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n    const [refreshJWT, { loading: refreshLoading }] = useMutation(REFRESHJWT_MUTATION);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const data = await refreshJWT();\r\n                await setAuthorization({\r\n                    status: true,\r\n                    token: data.data.refreshJWT.token,\r\n                    user: {\r\n                        id: data.data.refreshJWT.user.id,\r\n                        username: data.data.refreshJWT.user.username,\r\n                        role: {\r\n                            name: data.data.refreshJWT.user.role.name,\r\n                        }\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, []);\r\n\r\n    const handleSignInChange = (prop) => (event) => {\r\n        event.preventDefault();\r\n        setSignInInfo({ ...signInInfo, [prop]: event.target.value });\r\n    }\r\n    const handleSignInClick = async () => {\r\n        signIn({\r\n                variables: {\r\n                    username: signInInfo.username,\r\n                    password: signInInfo.password\r\n                },\r\n                errorPolicy: 'none',\r\n        })\r\n        .then(data => {\r\n            setAuthorization({\r\n                status: true,\r\n                token: data.data.login.token,\r\n                user: {\r\n                    id: data.data.login.user.id,\r\n                    username: data.data.login.user.username,\r\n                    role: {\r\n                        name: data.data.login.user.role.name,\r\n                    }\r\n                }\r\n            });\r\n            history.push(\"/tests/\");\r\n        })\r\n        .catch(error => {\r\n            setError(true);\r\n        });\r\n    }\r\n\r\n    if (authorization.token) return <Redirect to = '/tests' />;\r\n    return (\r\n        <React.Fragment>\r\n            { loading && <LoadingDialog open = { loading } /> }\r\n            { error && <ErrorDialog error = 'Invalid username/password. Please try again!'\r\n                                    open = { error } onClose = { setError(false) } /> }\r\n            { !refreshLoading &&\r\n            <Grid container component=\"main\" className={ classes.root }>\r\n                <CssBaseline/>\r\n                <Grid item xs = {false} sm = {4} md = {8}>\r\n                </Grid>\r\n                <Grid item xs = {12} sm = {8} md = {4} component = {Paper}>\r\n                    <div className = { classes.paper }>\r\n                        <Avatar className={ classes.avatar }>\r\n                            <LockOutlinedIcon/>\r\n                        </Avatar>\r\n                        <TitleText value = \"Sign In\" fontSize = \"18px\"/>\r\n                        <form className = { classes.form }>\r\n                            <TextInput label = \"Username\" name = \"username\" value = { signInInfo['username'] }\r\n                                       onChange = { handleSignInChange('username') }/>\r\n\r\n                            <PasswordInput label = \"Password\" name = \"password\" value = { signInInfo['password'] }\r\n                                           onChange = { handleSignInChange('password') }/>\r\n\r\n                            <ActionButton value = \"Sign In\"\r\n                                          onClick = { () => handleSignInClick() }/>\r\n                            <Grid container direction = 'row' justify = 'flex-end'>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Forgot password!\"\r\n                                        to = \"/forgot-password\"/>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Don't have account?\"\r\n                                        to = \"/create-account\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNUP_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../presentational-components/Dialog\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function SignUpPage() {\r\n\t// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [signUpInfo, setSignUpInfo] = useState({\r\n\t\tname: '',\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: '',\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\tconst [signUp, { loading }] = useMutation(SIGNUP_MUTATION);\r\n\r\n\tconst handleSignUpChange = (prop) => (event) => setSignUpInfo({ ...signUpInfo, [prop]: event.target.value });\r\n\tconst handleSignUpClick = () => {\r\n\t\tsignUp({\r\n\t\t\tvariables: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tusername: signUpInfo.username,\r\n\t\t\t\t\tpassword: signUpInfo.password,\r\n\t\t\t\t\tname: signUpInfo.name,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorPolicy: 'none',\r\n\t\t})\r\n\t\t\t.then(data => history.push(\"/\"))\r\n\t\t\t.catch(error => {\r\n\t\t\tsetError(true);\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\t// END REMOVE\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = 'Please try again!'\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { setError(false) } /> }\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t{/* REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED */}\r\n\t\t\t\t{/* REPLACE WITH <SignUp /> COMPONENT*/}\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Create Account\" fontSize = \"18px\"/>\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Full Name\" name = \"name\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['name'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('name') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Username\" name = \"username\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['username'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('username') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Password\" name = \"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['password'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('password') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Confirm password\" name = \"confirm-password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['confirmPassword'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('confirmPassword') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Sign Up\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleSignUpClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Oh! I already have account\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* END REMOVE */}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React, { useState } from 'react';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Text, TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function ForgotPasswordPage() {\r\n\tconst classes = useStyles();\r\n\tconst [forgotPasswordInfo, setForgotPasswordInfo] = useState({\r\n\t\temail: '',\r\n\t});\r\n\r\n\tconst handleForgotPasswordChange = (prop) => (event) => setForgotPasswordInfo({ ...forgotPasswordInfo, [prop]: event.target.value });\r\n\tconst handleForgotPasswordClick = () => {\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Recover password\" fontSize = '18px' />\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Email\" name = \"email\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { forgotPasswordInfo['email'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleForgotPasswordChange('email') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Recover password\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleForgotPasswordClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Back to home\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport { TextWithLink, TitleText } from \"./Text\";\r\nimport { DropdownButton } from \"./Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolBar: {\r\n\t\tbackgroundColor: theme.palette.common.white,\r\n\t\tcolor: theme.palette.common.black,\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\tappBar: {\r\n\t\tmarginBottom: theme.spacing(0),\r\n\t}\r\n}));\r\n\r\nexport default function NavigationBar(props) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<AppBar elevation = {2} className = { classes.appBar }>\r\n\t\t\t<Toolbar component = \"nav\" variant = \"dense\" className = { classes.toolBar }>\r\n\t\t\t\t<TitleText value = \"IELTS Training\" component = \"h1\"/>\r\n\t\t\t\t<DropdownButton options = { props.options }\r\n\t\t\t\t\t\t\t\ticon = { <AccountCircleIcon /> } />\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tchip: {\r\n\t\tmaxHeight: '18px',\r\n\t\tfontSize: '11px',\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n}));\r\n\r\nexport function ListeningChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Listening\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.listening }}/>\r\n\t)\r\n}\r\n\r\nexport function ReadingChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Reading\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.reading }}/>\r\n\t)\r\n}","import gql from 'graphql-tag';\r\n\r\nexport const ALLTEST_QUERY = gql`\r\n    query allTests {\r\n        allTests {\r\n            id\r\n            title\r\n            type\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DONETEST_BYUSERID_QUERY = gql`\r\n\tquery getUserById($id: Int!) {\r\n\t\tgetUserById(id: $id) {\r\n\t\t\tdoneTests {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TEST_BYID_QUERY = gql` \t\r\n\tquery getTestById($id: Int!) {\r\n\t\tgetTestById(id: $id) {\r\n\t\t\tid\r\n\t\t\ttype\r\n\t\t\tsections {\r\n\t\t\t\tid\r\n \t\t\t\torder\r\n\t\t\t\ttype\r\n\t\t\t\tstatementText\r\n\t\t\t\tstatementAudio\r\n\t\t\t\tquestionGroups {\r\n\t\t\t\t\tid\r\n\t\t\t\t\torder\r\n\t\t\t\t\tintroText\r\n\t\t\t\t\tquestions {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\torder\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\tstatementText\r\n\t\t\t\t\t\tanswers {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\ttext\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n/*\r\n export const TESTRESULT_BYID_QUERY = gql`\r\n     query getTestResult($userId: Int!, $testId: Int!) {\r\n         getTestResult(userId: $userId, testId: $testId) {\r\n             test {\r\n                 type\r\n                 sections {\r\n                     order\r\n                     type\r\n                     statementText\r\n                     statementAudio\r\n                     questionList {\r\n                         order\r\n                         introText\r\n                         questions {\r\n                             order\r\n                             statementText\r\n                         }\r\n                     }\r\n                 }\r\n             }\r\n \t\t\tscore\r\n \t\t\tanswerHistory {\r\n \t\t\t\tquestion {\r\n \t\t\t\t\torder\r\n \t\t\t\t}\r\n \t\t\t\tanswer {\r\n \t\t\t\t\ttext\r\n \t\t\t\t}\r\n \t\t\t}\r\n         }\r\n     }\r\n `;\r\n */\r\n\r\nexport const TESTDONEYET_BYID_QUERY = gql`\r\n\tquery getTestResult($userId: Int!, $testId: Int!) {\r\n     \tgetTestResult(userId: $userId, testId: $testId) {\r\n     \t\ttest {\r\n     \t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\ttype\r\n     \t\t}\r\n     \t\tscore\r\n\t\t\tanswerHistory {\r\n\t\t\t\tquestion {\r\n                    statementText\r\n\t\t\t\t\ttrueAnswer {\r\n\t\t\t\t\t\ttext\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tanswer {\r\n\t\t\t\t\ttext\r\n\t\t\t\t}\r\n\t\t\t}\r\n     \t}\r\n\t}\r\n`;\r\n\r\nexport const TESTCOMMENT_BYID_QUERY = gql`\r\n\tquery getTestById($id: Int!) {\r\n\t\tgetTestById(id: $id) {\r\n\t\t\tcomments {\r\n\t\t\t\tid\r\n\t\t\t\tuser {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tusername\r\n\t\t\t\t}\r\n\t\t\t\tcontent\r\n\t\t\t\tcreated\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { ListeningChip, ReadingChip } from \"../../presentational-components/Chip\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { DELETETEST_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ALLTEST_QUERY, DONETEST_BYUSERID_QUERY } from \"../../service-component/API/query\";\r\nimport { LoadingDialog } from \"../../presentational-components/Dialog\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n\tif (b[orderBy] < a[orderBy]) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (b[orderBy] > a[orderBy]) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n\treturn order === 'desc'\r\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\r\n\tstabilizedThis.sort((a, b) => {\r\n\t\tconst order = comparator(a[0], b[0]);\r\n\t\tif (order !== 0) return order;\r\n\t\treturn a[1] - b[1];\r\n\t});\r\n\treturn stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttable: {\r\n\t\twidth: 'inherit'\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t},\r\n\ttoolbar: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t\tpaddingRight: theme.spacing(1),\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\ttoolbarTitle: {\r\n\t\tflex: '1 1',\r\n\t}\r\n}));\r\n\r\nconst headCells = [\r\n\t{ id: 'id', numeric: true, label: '#' },\r\n\t{ id: 'title', numeric: false, label: 'Title' },\r\n\t{ id: 'type', numeric: false, label: 'Type' },\r\n\t{ id: 'status', numeric: false, label: 'Status' },\r\n];\r\n\r\nfunction SortTableHead(props) {\r\n\tconst { order, orderBy, deleteMode, onRequestSort } = props;\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t{ headCells.map((headCell) => (\r\n\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\tkey = { headCell.id }\r\n\t\t\t\t\t\talign = { headCell.numeric ? 'right' : 'left' }\r\n\t\t\t\t\t\tsortDirection = { orderBy === headCell.id ? order : false }>\r\n\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\tactive = { orderBy === headCell.id }\r\n\t\t\t\t\t\t\tdirection = { orderBy === headCell.id ? order : 'asc' }\r\n\t\t\t\t\t\t\tonClick = { (event) => onRequestSort(event, headCell.id) }>\r\n\t\t\t\t\t\t\t<TitleText value = { headCell.label }/>\r\n\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t))}\r\n\t\t\t\t{ deleteMode && <TableCell padding = 'checkbox' />}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nfunction TableToolbar(props) {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\r\n\treturn (\r\n\t\t<Toolbar className = { classes.toolbar }>\r\n\t\t\t<div>\r\n\t\t\t\t<Chip size = 'small'/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tauthorization.user.role.name.toLowerCase() === 'admin' &&\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Tooltip title = \"Add test\">\r\n\t\t\t\t\t\t\t<IconButton onClick = { () => props.onAdd() }>\r\n\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title = \"Delete test\">\r\n\t\t\t\t\t\t\t<IconButton onClick = { () => props.onDelete() }>\r\n\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</Toolbar>\r\n\t);\r\n};\r\n\r\nexport default function TestTable(props) {\r\n\tconst { allTests, doneTests } = props;\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst history = useHistory();\r\n\tconst classes = useStyles();\r\n\tconst [tests, setTests] = useState([]);\r\n\tconst [deleteMode, setDeleteMode] = useState(false);\r\n\tconst [order, setOrder] = useState('asc');\r\n\tconst [orderBy, setOrderBy] = useState('id');\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\tconst [deleteTest, { loading }] = useMutation(DELETETEST_MUTATION, {\r\n\t\trefetchQueries: [\r\n\t\t\t{\r\n\t\t\t\tquery: DONETEST_BYUSERID_QUERY,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tid: parseInt(authorization.user.id, 10)\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tquery: ALLTEST_QUERY,\r\n\t\t\t}\r\n\t\t]\r\n\t})\r\n\r\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, allTests.length - page * rowsPerPage);\r\n\tconst rowHeight = 45;\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tmp = [];\r\n\t\tallTests.map(allTest => {\r\n\t\t\ttmp.push({\r\n\t\t\t\tid: allTest.id,\r\n\t\t\t\ttitle: allTest.title,\r\n\t\t\t\ttype: allTest.type,\r\n\t\t\t\tstatus: doneTests.findIndex((element => element.id === allTest.id)) !== -1,\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetTests(tmp);\r\n\t}, []);\r\n\r\n\tconst handleRequestSort = (event, property) => {\r\n\t\tconst isAsc = orderBy === property && order === 'asc';\r\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\r\n\t\tsetPage(0);\r\n\t};\r\n\r\n\tconst handleDeleteTest = (id) => {\r\n\t\tdeleteTest({\r\n\t\t\tvariables: {\r\n\t\t\t\ttestId: id,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then(data => console.log(data))\r\n\t\t\t.catch(error => console.log(error));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t<div className = { classes.root }>\r\n\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t<TableToolbar onDelete = { () => setDeleteMode(!deleteMode) }\r\n\t\t\t\t\t\t\t\t  onAdd = { () => history.push('/add') } />\r\n\t\t\t\t\t<TableContainer>\r\n\t\t\t\t\t\t<Table size = 'small' className = { classes.table }>\r\n\t\t\t\t\t\t\t<SortTableHead\r\n\t\t\t\t\t\t\t\torder = { order }\r\n\t\t\t\t\t\t\t\torderBy = { orderBy }\r\n\t\t\t\t\t\t\t\tdeleteMode = { deleteMode }\r\n\t\t\t\t\t\t\t\tonRequestSort = { handleRequestSort }\r\n\t\t\t\t\t\t\t\trowCount = { tests.length } />\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t{ stableSort(tests, getComparator(order, orderBy))\r\n\t\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t\t.map((row) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow hover tabIndex = { -1 }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  key = { row.id } style = {{ height: rowHeight }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align = 'right'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ row.id }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextWithLink value = { row.title } to = { row.status ? `/view/${row.id}` : `/do/${row.id}`}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ (row.type.toLowerCase() === 'listening') ? <ListeningChip /> : <ReadingChip /> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align = \"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ (row.status) && <CheckIcon fontSize = 'small' /> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteMode &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton size = 'small' onClick = { () => handleDeleteTest(row.id) }>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t{ emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t\t<TableRow style = {{ height: rowHeight * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan = { 6 } />\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\trowsPerPageOptions = {[10, 25, 50, 100]}\r\n\t\t\t\t\t\tcomponent = \"div\"\r\n\t\t\t\t\t\tcount = { tests.length }\r\n\t\t\t\t\t\trowsPerPage = { rowsPerPage }\r\n\t\t\t\t\t\tpage = { page }\r\n\t\t\t\t\t\tonChangePage = { (event, newPage) => setPage(newPage) }\r\n\t\t\t\t\t\tonChangeRowsPerPage = { handleChangeRowsPerPage }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TestTable from \"../../../container-components/Test/TestTable\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { ALLTEST_QUERY, DONETEST_BYUSERID_QUERY } from \"../../../service-component/API/query\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t},\r\n}));\r\n\r\nexport default function AllTestPage() {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst allTests = useQuery(ALLTEST_QUERY);\r\n\tconst doneTests = useQuery(DONETEST_BYUSERID_QUERY, { variables: { id: parseInt(authorization.user.id, 10) } });\r\n\r\n\tif (allTests.error) {\r\n\t\tconsole.log(allTests.error);\r\n\t}\r\n\tif (doneTests.data) {\r\n\t\tconsole.log(doneTests.data);\r\n\t}\r\n\tif (doneTests.error) {\r\n\t\tconsole.log(authorization);\r\n\t\tconsole.log(doneTests.error);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ (allTests.loading || doneTests.loading) && <LoadingDialog open = { allTests.loading || doneTests.loading } /> }\r\n\t\t\t<Container className = {classes.container}>\r\n\t\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t\t<Grid item xs = {12} md = {8}>\r\n\t\t\t\t\t\t<Paper elevation = {0}>\r\n\t\t\t\t\t\t\t{ allTests.data && doneTests.data &&\r\n\t\t\t\t\t\t\t <TestTable allTests = { allTests.data.allTests } doneTests = { doneTests.data.getUserById.doneTests } /> }\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {0} md = {4}>\r\n\t\t\t\t\t\t<Paper className = {classes.paper}>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","export default function timeSince(date) {\r\n\tconst seconds = Math.floor((Date.now() - date) / 1000);\r\n\tlet interval = 0;\r\n\r\n\tinterval = seconds / (365 * 24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" years ago\";\r\n\t}\r\n\tinterval = seconds / (30 * 24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" months ago\";\r\n\t}\r\n\tinterval = seconds / (24 * 60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" days ago\";\r\n\t}\r\n\tinterval = seconds / (60 * 60);\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" hours ago\";\r\n\t}\r\n\tinterval = seconds / 60;\r\n\tif (interval > 1) {\r\n\t\treturn Math.floor(interval) + \" minutes ago\";\r\n\t}\r\n\treturn Math.floor(seconds) + \" seconds ago\";\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { AuthorizationContext } from \"../service-component/Context/authorization\";\r\nimport { ErrorDialog, LoadingDialog } from \"./Dialog\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATECOMMENT_MUTATION, DETELECOMMENT_MUTATION } from \"../service-component/API/mutation\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport timeSince from \"../service-component/Others/timeSince\";\r\nimport { TESTCOMMENT_BYID_QUERY } from \"../service-component/API/query\";\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tfonts: {\r\n\t\tfontWeight: \"bold\"\r\n\t},\r\n\tlistItemSecondaryAction: {\r\n\t\tvisibility: \"hidden\",\r\n\t},\r\n\tlistItem: {\r\n\t\t\"&:hover $listItemSecondaryAction\": {\r\n\t\t\tvisibility: \"inherit\"\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport function Comment(props) {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [createComment, { loading }] = useMutation(CREATECOMMENT_MUTATION, {\r\n\t\trefetchQueries: [{\r\n\t\t\tquery: TESTCOMMENT_BYID_QUERY,\r\n\t\t\tvariables: {\r\n\t\t\t\tid: parseInt(props.testId, 10),\r\n\t\t\t}\r\n\t\t}]\r\n\t});\r\n\tconst [deleteComment] = useMutation(DETELECOMMENT_MUTATION, {\r\n\t\trefetchQueries: [{\r\n\t\t\tquery: TESTCOMMENT_BYID_QUERY,\r\n\t\t\tvariables: {\r\n\t\t\t\tid: parseInt(props.testId, 10),\r\n\t\t\t}\r\n\t\t}]\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleCreateComment = () => {\r\n\t\tcreateComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tcomment: {\r\n\t\t\t\t\tcontent: comment,\r\n\t\t\t\t\ttestId: parseInt(props.testId, 10),\r\n\t\t\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetComment('');\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetError('Hey please, don\\'t spam. We don\\'t have the money to buy more storage for our database.')\r\n\t\t\t})\r\n\t}\r\n\tconst handleDeleteComment = (id) => {\r\n\t\tdeleteComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tcommentId:parseInt(id, 10),\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => console.log(data))\r\n\t\t\t.catch(error => console.log(error))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<List className = { classes.root }>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.comments && props.comments.map((comment) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<ListItem alignItems = \"flex-start\"\r\n\t\t\t\t\t\t\t\t\t\t  classes = {{ container: classes.listItem }}>\r\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar />\r\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\tprimary = {\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style = {{ fontWeight: 'bold', fontSize: '14px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ comment.user.username }\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsecondary = {\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant = \"body1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = \"textPrimary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ fontSize: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ comment.content }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant = 'body2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'textSecondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ fontSize: '12px'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ timeSince(+comment.created) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tstyle = {{ maxWidth: \"90%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{\t(authorization.user.role.name.toLowerCase() === 'admin'\r\n\t\t\t\t\t\t\t\t\t\t|| authorization.user.role.name.toLowerCase() === 'moderator'\r\n\t\t\t\t\t\t\t\t\t\t|| authorization.user.id === comment.user.id) &&\r\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction className = { classes.listItemSecondaryAction }>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick = { () => handleDeleteComment(comment.id) }>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<ListItem alignItems = \"flex-start\">\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tsecondary = {\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tmultiline fullWidth\r\n\t\t\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\t\tid = 'comment'\r\n\t\t\t\t\t\t\t\t\tvalue = { comment }\r\n\t\t\t\t\t\t\t\t\tplaceholder = \"Type your comment here...\"\r\n\t\t\t\t\t\t\t\t\tonChange = { (event) => setComment(event.target.value) }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle = {{ maxWidth: \"95%\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t<IconButton onClick = { handleCreateComment }>\r\n\t\t\t\t\t\t\t<SendIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</React.Fragment>\r\n\t);\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { Comment } from \"../../../presentational-components/Comment\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { TESTCOMMENT_BYID_QUERY, TESTDONEYET_BYID_QUERY } from \"../../../service-component/API/query\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { Text, TitleText } from \"../../../presentational-components/Text\";\r\nimport { ListeningChip, ReadingChip } from \"../../../presentational-components/Chip\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: theme.spacing(2, 24, 2, 24),\r\n\t\tpadding: theme.spacing(2, 8, 2, 8),\r\n\t},\r\n\ttoolbar: {\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function ViewTestPage() {\r\n\tconst { id } = useParams();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst testDoneYet = useQuery(TESTDONEYET_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\ttestId: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\tconst testComment = useQuery(TESTCOMMENT_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\r\n\t// if query test result caused error, redirect to do test.\r\n\tif (testDoneYet.error) return <Redirect to = {`/do/${id}`} />\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ (testDoneYet.loading || testComment.loading )\r\n\t\t\t\t?\r\n\t\t\t\t<LoadingDialog open = { (testDoneYet.loading || testComment.loading) } />\r\n\t\t\t\t:\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ResultTest { ...testDoneYet.data.getTestResult } />\r\n\t\t\t\t\t<CommentTest { ...testComment.data.getTestById } />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n};\r\n\r\nfunction ResultTest(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Paper variant = 'outlined' className = { classes.root }>\r\n\t\t\t<Toolbar className = { classes.toolbar }>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TitleText value = { props.test.title } />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TitleText value = { `Your score: ${props.score}` } />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ props.test.type.toLowerCase() === 'reading' ? <ReadingChip /> : <ListeningChip /> }\r\n\t\t\t\t</div>\r\n\t\t\t</Toolbar>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table size = 'small'>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{ [\"Question\", \"Correct Answer\", \"Your Answer\", \"Matched\"].map((title) =>\r\n\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t<TitleText value={ title }/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.answerHistory.map(answer => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.question.statementText } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.question.trueAnswer[0] ? answer.question.trueAnswer[0].text : '' } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text value = { answer.answer ? answer.answer.text : '' } />\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align = 'left'>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t(answer.answer.text === (answer.question.trueAnswer[0] ? answer.question.trueAnswer[0].text : ''))\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <CheckIcon /> : <ClearIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nfunction CommentTest(props) {\r\n\tconst { id } = useParams();\r\n\tconst classes = useStyles();\r\n\tconst [comments, setComments] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetComments(props.comments);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Paper variant = 'outlined' className = { classes.root }>\r\n\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t<Comment testId = { id } comments = { comments } />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REFRESHJWT_MUTATION } from \"../../service-component/API/mutation\";\r\n\r\nexport function AuthorizationContainer({ children }) {\r\n\tconst [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n\tconst [unauthorized, setUnauthorized] = useState(false);\r\n\tconst [refreshJWT] = useMutation(REFRESHJWT_MUTATION);\r\n\r\n\tconst handleRefreshJWT = async () => {\r\n\t\tconsole.log('refreshJWT');\r\n\t\ttry {\r\n\t\t\tconst data = await refreshJWT();\r\n\t\t\tawait setAuthorization({\r\n\t\t\t\tstatus: true,\r\n\t\t\t\ttoken: data.data.refreshJWT.token,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: data.data.refreshJWT.user.id,\r\n\t\t\t\t\tusername: data.data.refreshJWT.user.username,\r\n\t\t\t\t\trole: {\r\n\t\t\t\t\t\tname: data.data.refreshJWT.user.role.name,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tawait setUnauthorized(true);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tif (authorization.token != null) {\r\n\t\t\t\tconst tokenPayload = authorization.token.split('.')[1];\r\n\t\t\t\tconst tokenExpiration = new Date(tokenPayload);\r\n\t\t\t\tconst now = new Date();\r\n\t\t\t\tif (tokenExpiration.getTime() - now.getTime() < 1000 * 60 * 5) {\r\n\t\t\t\t\tawait handleRefreshJWT();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait handleRefreshJWT();\r\n\t\t\t}\r\n\t\t})()\r\n\t}, []);\r\n\r\n\tif (unauthorized) return <Redirect to = '/' />\r\n\telse return children;\r\n}","import React, { useContext, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { TextWithLink, TitleText } from \"../../../presentational-components/Text\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ActionButton, IconActionButton } from \"../../../presentational-components/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n\tADDANSWER_MUTATION,\r\n\tADDQUESTION_MUTATION,\r\n\tADDQUESTIONGROUP_MUTATION,\r\n\tADDTEST_MUTATION,\r\n\tADDTESTSECTION_MUTATION\r\n} from \"../../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { ListeningChip, ReadingChip } from \"../../../presentational-components/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport * as theme from \"@material-ui/system\";\r\nimport { ALLTEST_QUERY, DONETEST_BYUSERID_QUERY } from \"../../../service-component/API/query\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tcreateTestContainer: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tmainContainer: {\r\n\t\tmargin: theme.spacing(2, 0, 8),\r\n\t},\r\n\ttestContainer: {\r\n\t\tpadding: theme.spacing(4, 8, 4, 8),\r\n\t},\r\n\ttestSectionContainer: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tpadding: theme.spacing(4),\r\n\t},\r\n\tquestionGroupContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t},\r\n\tquestionContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t},\r\n\tanswerContainer: {\r\n\t\tpaddingLeft: theme.spacing(4),\r\n\t},\r\n\tpaddingContainer: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t}\r\n}));\r\n\r\nexport default function AddTestPage() {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [testInfo, setTestInfo] = useState(null);\r\n\tconst [finished, setFinished] = useState(false);\r\n\r\n\tconst handleCreateTest = (id, title, type) => {\r\n\t\tsetTestInfo({\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\ttype: type,\r\n\t\t});\r\n\t}\r\n\r\n\tif (!authorization.token || authorization.user.role.name.toLowerCase() !== 'admin') return <Redirect to = '/' />;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\ttestInfo\r\n\t\t\t\t\t? finished\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<Container maxWidth = 'xs' className = { classes.createTestContainer }>\r\n\t\t\t\t\t\t<TitleText value = \"Test successfully created\" fontSize = \"18px\"/>\r\n\t\t\t\t\t\t<TextWithLink value = 'Go back to homepage' to = '/' />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Box border = {0} className = { classes.mainContainer }>\r\n\t\t\t\t\t\t<Grid container direction = 'row' justify = 'center' alignItems = 'center'>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<AddTest { ...testInfo }/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {6}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = 'Finish' onClick = { () => setFinished(true) } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<CreateTest onClick = { (id, title, type) => handleCreateTest(id, title, type) } />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction CreateTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [testInput, setTestInput] = useState({\r\n\t\ttitle: '',\r\n\t\ttype: '',\r\n\t});\r\n\tconst [createTest, { loading }] = useMutation(ADDTEST_MUTATION, {\r\n\t\trefetchQueries: [\r\n\t\t\t{\r\n\t\t\t\tquery: DONETEST_BYUSERID_QUERY,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tid: parseInt(authorization.user.id, 10)\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tquery: ALLTEST_QUERY,\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleCreateTest = () => {\r\n\t\tif (testInput.title.trimStart() === '' || testInput.type.trimStart() === '') {\r\n\t\t\tsetError('Title and type must not be null.');\r\n\t\t} else {\r\n\t\t\tcreateTest({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\ttest: {\r\n\t\t\t\t\t\ttitle: testInput.title.trim(),\r\n\t\t\t\t\t\ttype: testInput.type,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tprops.onClick(data.data.addTest.id, data.data.addTest.title, data.data.addTest.type);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetError(\"A test with the same title and type already exists!\");\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Container maxWidth = 'xs' className = { classes.createTestContainer }>\r\n\t\t\t\t<TitleText value = \"Create test\" fontSize = \"18px\"/>\r\n\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t<Grid container spacing = {2}>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\tlabel = \"Title\"\r\n\t\t\t\t\t\t\t\tvalue = { testInput.title }\r\n\t\t\t\t\t\t\t\tonChange = { (event) => setTestInput({...testInput, title: event.target.value }) }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\t\tlabel = 'Type'\r\n\t\t\t\t\t\t\t\tvalue = { testInput.type }\r\n\t\t\t\t\t\t\t\tonChange = { (event) => setTestInput({...testInput, type: event.target.value }) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ ['Reading', 'Listening'].map((option) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t\t\t\t\t\t{ option }\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t<ActionButton value = \"Create Test\" onClick = { handleCreateTest }/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction AddTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [numTestSection, setNumTestSection] = useState(1);\r\n\r\n\tconst handleAddTestSection = () => {\r\n\t\tsetNumTestSection(numTestSection + 1);\r\n\t}\r\n\r\n\tconst generateTestSection = () => {\r\n\t\tlet testSection = [];\r\n\t\tfor (let i = 0; i < numTestSection; i++) {\r\n\t\t\ttestSection.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddTestSection { ...props }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn testSection;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.testContainer}>\r\n\t\t\t<Grid container direction = 'row' justify = 'space-evenly'\r\n\t\t\t\t  alignItems = 'center' spacing = {2}>\r\n\t\t\t\t<Grid item xs = {12} sm = {8}>\r\n\t\t\t\t\t<TitleText value = { `Title: ${props.title}` } fontSize = '18px' />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3} sm = {1}>\r\n\t\t\t\t\t<TitleText value = { `ID: ${props.id}` } fontSize = '18px' />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3} sm = {1}>\r\n\t\t\t\t\t{ props.type.toLowerCase() === 'reading' ? <ReadingChip /> : <ListeningChip /> }\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {6} sm = {2}>\r\n\t\t\t\t\t<ActionButton value = { <AddIcon /> } onClick = { handleAddTestSection } />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{ generateTestSection() }\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nfunction AddTestSection(props) {\r\n\tconst classes = useStyles();\r\n\tconst [testSectionInput, setTestSectionInput] = useState({\r\n\t\ttestId: props.id,\r\n\t\ttype: props.type,\r\n\t\ttext: '',\r\n\t\taudio: '',\r\n\t});\r\n\tconst [addTestSection, { loading }] = useMutation(ADDTESTSECTION_MUTATION);\r\n\tconst [numQuestionGroup, setNumQuestionGroup] = useState(1);\r\n\tconst [testSectionInfo, setTestSectionInfo] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleAddQuestionGroup = () => {\r\n\t\tsetNumQuestionGroup(numQuestionGroup + 1);\r\n\t}\r\n\r\n\tconst handleSaveTestSection = () => {\r\n\t\t// && here because with listening test, text can be null and vice versa, only check if both is null\r\n\t\tif (testSectionInput.text.trimStart() === '' && testSectionInput.audio.trimStart() === '') {\r\n\t\t\tsetError('Text or audio must not be null.');\r\n\t\t} else {\r\n\t\t\taddTestSection({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tsection: {\r\n\t\t\t\t\t\ttestId: testSectionInput.testId,\r\n\t\t\t\t\t\ttype: testSectionInput.type,\r\n\t\t\t\t\t\ttext: testSectionInput.text.trim(),\r\n\t\t\t\t\t\taudio: testSectionInput.audio.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none'\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetTestSectionInfo({\r\n\t\t\t\t\t\tid: data.data.addTestSection.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst generateQuestionGroup = () => {\r\n\t\tlet questionGroup = [];\r\n\t\tfor (let i = 0; i < numQuestionGroup; i++) {\r\n\t\t\tquestionGroup.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddQuestionGroup { ...testSectionInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn questionGroup;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Paper variant = 'outlined' className = { classes.testSectionContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'flex-end' alignItems = 'center' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { testSectionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Section statement text'\r\n\t\t\t\t\t\t\tvalue = { testSectionInput.text }\r\n\t\t\t\t\t\t\tonChange = { (event) => setTestSectionInput({...testSectionInput, text: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ testSectionInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddQuestionGroup } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveTestSection } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ testSectionInfo && generateQuestionGroup() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction AddQuestionGroup(props) {\r\n\tconst classes = useStyles();\r\n\tconst [questionGroupInput, setQuestionGroupInput] = useState({\r\n\t\tsectionId: props.id,\r\n\t\tintroText: '',\r\n\t});\r\n\tconst [addQuestionGroup, { loading }] = useMutation(ADDQUESTIONGROUP_MUTATION);\r\n\tconst [questionGroupInfo, setQuestionGroupInfo] = useState(null);\r\n\tconst [numQuestion, setNumQuestion] = useState(1);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleAddQuestion = () => {\r\n\t\tsetNumQuestion(numQuestion + 1);\r\n\t}\r\n\r\n\tconst handleSaveQuestionGroup = () => {\r\n\t\tif (questionGroupInput.introText.trimStart() === '') {\r\n\t\t\tsetError('Intro text for question group must not be null.');\r\n\t\t} else {\r\n\t\t\taddQuestionGroup({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tgroup: {\r\n\t\t\t\t\t\tsectionId: questionGroupInput.sectionId,\r\n\t\t\t\t\t\tintroText: questionGroupInput.introText.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none',\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tsetQuestionGroupInfo({\r\n\t\t\t\t\t\tid: data.data.addQuestionGroup.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => console.log(error))\r\n\t\t}\r\n\t}\r\n\r\n\tconst generateQuestion = () => {\r\n\t\tlet question = [];\r\n\t\tfor (let i = 0; i < numQuestion; i++) {\r\n\t\t\tquestion.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddQuestion { ...questionGroupInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn question;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.questionGroupContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'flex-end' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { questionGroupInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Introduction text'\r\n\t\t\t\t\t\t\tvalue = { questionGroupInput.introText }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionGroupInput({...questionGroupInput, introText: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ questionGroupInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddQuestion } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveQuestionGroup } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ questionGroupInfo && generateQuestion() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction AddQuestion(props) {\r\n\tconst classes = useStyles();\r\n\tconst [questionInput, setQuestionInput] = useState({\r\n\t\tquestionGroupId: props.id,\r\n\t\ttype: '',\r\n\t\tstatementText: '',\r\n\t});\r\n\tconst [addQuestion, { loading }] = useMutation(ADDQUESTION_MUTATION);\r\n\tconst [questionInfo, setQuestionInfo] = useState(null);\r\n\tconst [numAnswer, setNumAnswer] = useState(1);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleSaveQuestion = () => {\r\n\t\tif (questionInput.type.trimStart() === '' || questionInput.statementText.trimStart() === '') {\r\n\t\t\tsetError('Type or statement text must not be null.');\r\n\t\t} else {\r\n\t\t\taddQuestion({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tquestion: {\r\n\t\t\t\t\t\tquestionGroupId: questionInput.questionGroupId,\r\n\t\t\t\t\t\ttype: questionInput.type.trim(),\r\n\t\t\t\t\t\tstatementText: questionInput.statementText.trim(),\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none',\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tsetQuestionInfo({\r\n\t\t\t\t\t\tid: data.data.addQuestion.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => console.log(error));\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAddAnswer = () => {\r\n\t\tsetNumAnswer(numAnswer + 1);\r\n\t}\r\n\r\n\tconst generateAnswer = () => {\r\n\t\tlet answer = [];\r\n\t\tfor (let i = 0; i < numAnswer; i++) {\r\n\t\t\tanswer.push(\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<AddAnswer { ...questionInfo }/>\r\n\t\t\t\t</Grid>);\r\n\t\t}\r\n\t\treturn answer;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.questionContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {6} sm = {1}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\t\tdisabled = { questionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Type'\r\n\t\t\t\t\t\t\tvalue = { questionInput.type }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionInput({...questionInput, type: event.target.value }) }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ ['FITB', 'MC', 'TF'].map((option) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t\t\t\t\t{ option }\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {12} sm = {11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth multiline\r\n\t\t\t\t\t\t\tdisabled = { questionInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Question statement'\r\n\t\t\t\t\t\t\tvalue = { questionInput.statementText }\r\n\t\t\t\t\t\t\tonChange = { (event) => setQuestionInput({...questionInput, statementText: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = \"end\">\r\n\t\t\t\t\t\t\t\t\t\t{ questionInfo\r\n\t\t\t\t\t\t\t\t\t\t\t? <IconActionButton icon = { <AddIcon /> } onClick = { handleAddAnswer } />\r\n\t\t\t\t\t\t\t\t\t\t\t: <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveQuestion } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{ questionInfo && generateAnswer() }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n}\r\n\r\nfunction AddAnswer(props) {\r\n\tconst classes = useStyles();\r\n\tconst [answerInput, setAnswerInput] = useState({\r\n\t\tquestionId: props.id,\r\n\t\ttext: '',\r\n\t\tisCorrect: false,\r\n\t});\r\n\tconst [addAnswer, { loading }] = useMutation(ADDANSWER_MUTATION);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [answerInfo, setAnswerInfo] = useState(null);\r\n\r\n\tconst handleSaveAnswer = () => {\r\n\t\tif (answerInput.text.trimStart() === '') {\r\n\t\t\tsetError('Answer must not be null');\r\n\t\t} else {\r\n\t\t\taddAnswer({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tanswer: {\r\n\t\t\t\t\t\tquestionId: answerInput.questionId,\r\n\t\t\t\t\t\ttext: answerInput.text.trim(),\r\n\t\t\t\t\t\tisCorrect: answerInput.isCorrect,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terrorPolicy: 'none'\r\n\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetAnswerInfo({\r\n\t\t\t\t\t\tid: data.data.addAnswer.id,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetError(\"This answer is already assigned to this question.\");\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = { error }\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { () => setError(null) } /> }\r\n\t\t\t<Box border = {0} className = { classes.answerContainer }>\r\n\t\t\t\t<Grid container direction = 'row' justify = 'space-evenly' spacing = {2}>\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisabled = { answerInfo }\r\n\t\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\t\tlabel = 'Answer text'\r\n\t\t\t\t\t\t\tvalue = { answerInput.text }\r\n\t\t\t\t\t\t\tonChange = { (event) => setAnswerInput({...answerInput, text: event.target.value }) }\r\n\t\t\t\t\t\t\tInputProps = {{\r\n\t\t\t\t\t\t\t\tstartAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = 'start'>\r\n\t\t\t\t\t\t\t\t\t\t<IconActionButton disabled = { answerInfo }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  icon = { answerInput.isCorrect ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => setAnswerInput({...answerInput, isCorrect: !answerInput.isCorrect }) } />\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position = 'end'>\r\n\t\t\t\t\t\t\t\t\t\t{ answerInfo == null && <IconActionButton icon = { <SaveIcon /> } onClick = { handleSaveAnswer } /> }\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Text, TitleText } from \"../../presentational-components/Text\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsection: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tpadding: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tquestionGroup: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tquestion: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tpadding: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function ReadingPassage({ section, passage }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {1.5} className = { classes.section }>\r\n\t\t\t<div className = { classes.title }>\r\n\t\t\t\t<TitleText value = {`Section ${section}`} fontSize = { '18px' } />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tpassage.split('\\n').map((text) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Text value = { text.substring(0, text.length - 2) } />\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport function QuestionGroup({ questionGroups }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(questionGroups.map(questionGroup => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0} className = { classes.questionGroup }>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${questionGroup.order}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Text value = { questionGroup.introText }/>\r\n\t\t\t\t\t\t\t<Question questions = { questionGroup.questions } />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Question({ questions }) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ questions.map((question) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(question.type === 'TF')\r\n\t\t\t\t\t\t? <TFQuestion order = { question.order } statementText = { question.statementText } answers = { question.answers } />\r\n\t\t\t\t\t\t: (question.type === 'FITB')\r\n\t\t\t\t\t\t\t? <FITBQuestion order = { question.order } statementText = { question.statementText } />\r\n\t\t\t\t\t\t\t: <MCQuestion order = { question.order } statementText = { question.statementText } answers = { question.answers } />\r\n\t\t\t\t)\r\n\t\t\t}) }\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport function TFQuestion({ order, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport function MCQuestion({ order, statementText, answers }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t\t<Box border = {0} style = {{ marginLeft: '25px'}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tanswers.map(answer => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline' style = {{ marginLeft: '10px', marginRight: '25px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t{ answer.text.substring(0, 1) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t\t\t\t\t\t{ answer.text.substring(3) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n};\r\nexport function FITBQuestion({ order, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ order }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText.replace('_', '_'.repeat(20)) }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { TitleText } from \"../../presentational-components/Text\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tanswer: {\r\n\t\tmargin: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function AnswerGroup(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(props.questionGroups.map(questionGroup => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${questionGroup.order}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Answer questions = { questionGroup.questions } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\tonAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Answer(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.answer }>\r\n\t\t\t{ props.questions.map(question => (\r\n\t\t\t\t<TypeAnswer type = { question.type } id = { question.id } order = { question.order }\r\n\t\t\t\t\t\t\tanswers = { question.answers } onAnswer = { props.onAnswer } />\r\n\t\t\t)) }\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport function TypeAnswer(props) {\r\n\tconst theme = useTheme();\r\n\tconst [answer, setAnswer] = useState({\r\n\t\tquestionId: parseInt(props.id, 10),\r\n\t\tanswerString: '',\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAnswer({\r\n\t\t\tquestionId: parseInt(props.id, 10),\r\n\t\t\tanswerString: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.onAnswer(answer);\r\n\t}, [answer.answerString]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tprops.type.toUpperCase() === 'TF'\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ props.answers.map((option) => (\r\n\t\t\t\t\t\t\t<MenuItem key = { option.id } value = { option.text }>\r\n\t\t\t\t\t\t\t\t{ option.text }\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)) }\r\n\t\t\t\t\t</TextField>\r\n\t\t\t\t\t: props.type.toUpperCase() === 'FITB'\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect fullWidth\r\n\t\t\t\t\t\tsize = 'small'\r\n\t\t\t\t\t\tvariant = 'outlined'\r\n\t\t\t\t\t\tid = { props.order }\r\n\t\t\t\t\t\tlabel = { `Question ${props.order}`}\r\n\t\t\t\t\t\tvalue = { answer.answerString }\r\n\t\t\t\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\t\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ props.answers.map((option) => (\r\n\t\t\t\t\t\t\t<MenuItem key = { option.id } value = { option.text }>\r\n\t\t\t\t\t\t\t\t{ option.text.substring(0, 1) }\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)) }\r\n\t\t\t\t\t</TextField>\r\n\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { QuestionGroup, ReadingPassage } from \"./Question\";\r\nimport { AnswerGroup } from \"./Answer\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t},\r\n\tcard: {\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\ttimer: {\r\n\t\ttop: 'auto',\r\n\t\tbottom: 0,\r\n\t},\r\n\tzoom: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: theme.spacing(2),\r\n\t\tright: theme.spacing(2),\r\n\t},\r\n\talert: {\r\n\t\tfontWeight: 'bold',\r\n\t\tbackgroundColor: 'white',\r\n\t}\r\n}));\r\n\r\nexport function ReadingTest(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t(props.sections.map(section => (\r\n\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<ReadingPassage section = { section.order } passage = { section.statementText } />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {9}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<QuestionGroup questionGroups = { section.questionGroups } />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<AnswerGroup questionGroups = { section.questionGroups } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\t onAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)))\r\n\t)\r\n}\r\n\r\nexport function TestTimer(props) {\r\n\tconst classes = useStyles();\r\n\tconst [progress, setProgress] = useState(0);\r\n\tconst [alert, setAlert] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetProgress((progress) => {\r\n\t\t\t\tif (progress === 100) {\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t}\r\n\t\t\t\tconst diff = 100 / (props.minutes * 60);\r\n\t\t\t\t// console.log(progress + diff + ' is ' + (progress + diff) * 180);\r\n\t\t\t\treturn Math.min(progress + diff, 100);\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (progress >= 100) {\r\n\t\t\tsetAlert(`${props.reviewMinutes} minutes to review your result.`);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tprops.onTimeOut();\r\n\t\t\t}, props.reviewMinutes * 60 * 1000);\r\n\t\t}\r\n\t\telse if (progress >= 83 && progress <= 85) setAlert('Only 10 minutes left.');\r\n\t\telse if (progress >= 66 && progress <= 68) setAlert('20 minutes left. You should do section 3 now!');\r\n\t\telse if (progress >= 33 && progress <= 35) setAlert('20 minutes passed!');\r\n\t\telse setAlert(null);\r\n\t}, [progress]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AppBar position = 'fixed' className = { classes.timer }>\r\n\t\t\t\t<div style = {{ width: '100%' }}>\r\n\t\t\t\t\t<LinearProgress variant = \"determinate\" value = { progress } />\r\n\t\t\t\t</div>\r\n\t\t\t</AppBar>\r\n\t\t\t<AlertTimer alert = { alert } />\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport function AlertTimer(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box className = { classes.zoom } position = 'fixed' zIndex = \"tooltip\">\r\n\t\t\t<Zoom in = { props.alert } >\r\n\t\t\t\t<Card variant = 'outlined' classes = {{ root: classes.card }}>\r\n\t\t\t\t\t<List className = { classes.alert }>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<PriorityHighIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary = { props.alert } />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Card>\r\n\t\t\t</Zoom>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n","import Container from \"@material-ui/core/Container\";\r\nimport { TitleText } from \"../../../presentational-components/Text\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ActionButton } from \"../../../presentational-components/Button\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n\tALLTEST_QUERY,\r\n\tDONETEST_BYUSERID_QUERY,\r\n\tTEST_BYID_QUERY,\r\n\tTESTDONEYET_BYID_QUERY\r\n} from \"../../../service-component/API/query\";\r\nimport { STARTTEST_MUTATION, SUBMITTEST_MUTATION } from \"../../../service-component/API/mutation\";\r\nimport { LoadingDialog } from \"../../../presentational-components/Dialog\";\r\nimport { ReadingTest, TestTimer } from \"../../../container-components/Test/Test\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttestContainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tcommentContainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingBottom: theme.spacing(8),\r\n\t},\r\n\tcardHeader: {\r\n\t\tpaddingBottom: theme.spacing(1),\r\n\t},\r\n\tcardContent: {\r\n\t\tpaddingTop: theme.spacing(0),\r\n\t},\r\n\tnoticed: {\r\n\t\tmarginTop: theme.spacing(20),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n}));\r\n\r\nexport default function DoTestPage() {\r\n\tconst { id } = useParams();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst { loading, data } = useQuery(TESTDONEYET_BYID_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\ttestId: parseInt(id, 10),\r\n\t\t}\r\n\t});\r\n\tconst [noticed, setNoticed] = useState(false);\r\n\tconst [startTest] = useMutation(STARTTEST_MUTATION);\r\n\tconst [done, setDone] = useState(false);\r\n\r\n\tconst handleStartTest = () => {\r\n\t\tsetNoticed(true);\r\n\t\tstartTest({\r\n\t\t\tvariables: {\r\n\t\t\t\ttestId: parseInt(id, 10),\r\n\t\t\t\tuserId: parseInt(authorization.user.id, 10),\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\tconst handleDoneTest = () => {\r\n\t\tsetDone(true);\r\n\t}\r\n\r\n\t// if test is done by this user, redirect to view test.\r\n\tif (data) return <Redirect to = {`/view/${id}`} />\r\n\t// if user is well informed by Noticed component, start test timer on backend.\r\n\tif (done) return <Redirect to = {`/view/${id}`} />\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading\r\n\t\t\t\t? <LoadingDialog open = { loading } />\r\n\t\t\t\t: noticed\r\n\t\t\t\t\t? <DoTest onDone = { () => handleDoneTest() } />\r\n\t\t\t\t\t: <Noticed onClick = { () => handleStartTest() } />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nfunction Noticed(props) {\r\n\tconst classes = useStyles();\r\n\tconst rules = [\r\n\t\t{\r\n\t\t\tid: '1',\r\n\t\t\ttext: 'Test will be account for 60 minutes. After 60 minutes, current answer will be submitted and result will be counted towards your rating.'\r\n\t\t},{\r\n\t\t\tid: '2',\r\n\t\t\ttext: 'Please do not reload your browser while you do your test; or else, your answer will be deleted.',\r\n\t\t},{\r\n\t\t\tid: '3',\r\n\t\t\ttext: 'You will be given additional 5 minutes to review your result after 60 minutes ended. Please submit your result in time.',\r\n\t\t}\r\n\t]\r\n\treturn (\r\n\t\t<Container maxWidth = 'xs' className = { classes.noticed }>\r\n\t\t\t<TitleText value = \"Before you do your test...\" fontSize = \"18px\"/>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trules.map(rule => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Box border = {0} style = {{ marginTop: '18px' }}>\r\n\t\t\t\t\t\t\t\t\t<Typography display = 'inline' style = {{ marginLeft: '10px', marginRight: '25px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t\t{ rule.id }\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t\t\t\t\t\t\t{ rule.text }\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t<ActionButton value = \"Do test\" onClick = { () => props.onClick() }/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nfunction DoTest(props) {\r\n\tconst { id } = useParams();\r\n\tconst classes = useStyles();\r\n\tconst [authorization] = useContext(AuthorizationContext);\r\n\tconst [answers, setAnswers] = useState([]);\r\n\tconst test = useQuery(TEST_BYID_QUERY, { variables: { id: parseInt(id, 10) } });\r\n\tconst [submitTest, { loading }] = useMutation(SUBMITTEST_MUTATION, {\r\n\t\trefetchQueries: [\r\n\t\t\t{\r\n\t\t\t\tquery: DONETEST_BYUSERID_QUERY,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tid: parseInt(authorization.user.id, 10)\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tquery: ALLTEST_QUERY,\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\tlet handleAnswer = () => async (answer) => {\r\n\t\tlet elementIdx = answers.findIndex((element => element.questionId === answer.questionId));\r\n\t\tif (elementIdx === -1) {\r\n\t\t\tawait setAnswers([...answers, {\r\n\t\t\t\tquestionId: answer.questionId,\r\n\t\t\t\tanswerString: answer.answerString,\r\n\t\t\t}]);\r\n\t\t} else {\r\n\t\t\tlet newAnswers = answers;\r\n\t\t\tnewAnswers[elementIdx].answerString = answer.answerString;\r\n\t\t\tawait setAnswers(newAnswers);\r\n\t\t}\r\n\t}\r\n\r\n\tlet handleSubmit = () => {\r\n\t\tconsole.log(answers);\r\n\t\tsubmitTest({\r\n\t\t\tvariables: {\r\n\t\t\t\ttestSubmission: {\r\n\t\t\t\t\ttestId: parseInt(id, 10),\r\n\t\t\t\t\tuserId:\tparseInt(authorization.user.id, 10),\r\n\t\t\t\t\tanswers: answers,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorPolicy: 'none',\r\n\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tprops.onDone();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ test.loading && <LoadingDialog open = { test.loading } /> }\r\n\t\t\t{ !test.loading && <TestTimer minutes = { 5 } reviewMinutes = { 1 } onTimeOut = { handleSubmit }/> }\r\n\t\t\t{ test.data &&\r\n\t\t\t<Grid container direction = 'row' justify = 'flex-start'>\r\n\t\t\t\t<Container className = { classes.testContainer }>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(test.data.getTestById.type.toLowerCase() === 'reading')\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t<ReadingTest sections = { test.data.getTestById.sections } answers = { answers } onAnswer = { handleAnswer() } />\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>This is not developed yet.</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Grid container spacing = {2} direction = 'row' justify = 'space-evenly'>\r\n\t\t\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t\t\t<ActionButton value = 'Submit' onClick = { () => handleSubmit() }/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</Grid>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport NavigationBar from \"../../presentational-components/NavigationBar\";\r\nimport AllTestPage from \"./Test/AllTestPage\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport ViewTestPage from \"./Test/ViewTestPage\";\r\nimport { AuthorizationContainer } from \"../../container-components/Authorization/AuthorizationContainer\";\r\nimport AddTestPage from \"./Test/AddTestPage\";\r\nimport DoTestPage from \"./Test/DoTestPage\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { SIGNOUT_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\toverflow: 'auto'\r\n\t},\r\n\tappBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function HomePage() {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [signOut] = useMutation(SIGNOUT_MUTATION);\r\n\tconst navigationBarFunction = [\r\n\t\t<MenuItem onClick = { () => history.push('/tests') }>Home</MenuItem>,\r\n\t\t<MenuItem onClick = { () => handleSignOut() }>Sign Out</MenuItem>,\r\n\t];\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tsignOut().then().catch();\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthorizationContainer>\r\n\t\t\t<div className = { classes.root }>\r\n\t\t\t\t<NavigationBar options = { navigationBarFunction }/>\r\n\t\t\t\t<div className = {classes.content}>\r\n\t\t\t\t\t<div className = {classes.appBarSpacer}/>\r\n\t\t\t\t\t<BrowserRouter basename = \"/qnc-ielts-practice/tests\">\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path = \"/\" component = { AllTestPage } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/view/:id\" children = { <ViewTestPage /> } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/do/:id\" children = { <DoTestPage /> } />\r\n\t\t\t\t\t\t\t<Route exact path = \"/add\" component = { AddTestPage } />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</AuthorizationContainer>\r\n\t);\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport LandingPage from \"./route-component/Authorization/LandingPage\";\r\nimport SignUpPage from \"./route-component/Authorization/SignUpPage\";\r\nimport ForgotPasswordPage from \"./route-component/Authorization/ForgotPasswordPage\";\r\nimport HomePage from \"./route-component/Home/HomePage\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { AuthorizationContext } from \"./service-component/Context/authorization\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { ApolloClient, ApolloLink, ApolloProvider, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\n// https://coolors.co/fcba04-ffebeb-590004\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#8c332d',\r\n            main: '#590004',\r\n            dark: '#350000',\r\n            contrastText: '#ffffff'\r\n        },\r\n        secondary: {\r\n            light: '#ffec4e',\r\n            main: '#fcba04',\r\n            dark: '#c48a00',\r\n            contrastText: '#000000'\r\n        },\r\n        chip: {\r\n            listening: '#ff7077',\r\n            reading: '#fede86',\r\n        },\r\n        table: {\r\n            head: '#ffffff',\r\n            text: '#000000',\r\n            even: '#ffffff',\r\n            odd: '#f5f5f5',\r\n        },\r\n        action: {\r\n            hover: '#cccccc',\r\n        }\r\n\r\n    },\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors) {\r\n        console.log('graphQLErrors', graphQLErrors);\r\n    }\r\n    if (networkError) {\r\n        console.log('networkError', networkError);\r\n    }\r\n});\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: process.env.API_URL || 'https://qnc-ielts-practice.herokuapp.com/graphql',\r\n    credentials: 'include'\r\n});\r\n\r\nlet token;\r\nconst authLink = setContext((_, { headers }) => {\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(ApolloLink.from([errorLink, httpLink])),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default function App() {\r\n    const [authorizationData, setAuthorizationData] = useState({\r\n        status: false,\r\n        token: null,\r\n        user: {\r\n            id: null,\r\n            username: null,\r\n            role: {\r\n                name: null\r\n            }\r\n        }\r\n    });\r\n\r\n    token = authorizationData.token;\r\n\r\n    return (\r\n        <ThemeProvider theme = {theme}>\r\n            <ApolloProvider client = { client }>\r\n                <AuthorizationContext.Provider value = {[authorizationData, setAuthorizationData]}>\r\n                    <BrowserRouter basename = \"/qnc-ielts-practice\">\r\n                        <Switch>\r\n                            <Route exact path = \"/\" component = { LandingPage } />\r\n                            <Route exact path = \"/create-account\" component = { SignUpPage } />\r\n                            <Route exact path = \"/forgot-password\" component = { ForgotPasswordPage } />\r\n                            <Route path = \"/tests\" component = { HomePage } />\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </AuthorizationContext.Provider>\r\n            </ApolloProvider>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}