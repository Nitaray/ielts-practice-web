{"version":3,"sources":["presentational-components/Button.js","presentational-components/Input.js","presentational-components/Text.js","service-component/API/mutation.js","presentational-components/Dialog.js","service-component/Context/authorization.js","route-component/Authorization/LandingPage.js","route-component/Authorization/SignUpPage.js","route-component/Authorization/ForgotPasswordPage.js","presentational-components/NavigationBar.js","service-component/API/test.js","presentational-components/Chip.js","presentational-components/Icon.js","container-components/Test/TestTable.js","container-components/Authorization/AuthorizationContainer.js","route-component/Home/Test/AllTestPage.js","container-components/Test/Question.js","container-components/Test/Answer.js","container-components/Test/Test.js","route-component/Home/Test/TestPage.js","route-component/Home/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","ActionButton","value","onClick","classes","handleClick","Button","fullWidth","variant","color","className","DropdownButton","options","icon","React","useState","anchorEl","setAnchorEl","history","useHistory","component","Paper","IconButton","aria-haspopup","event","currentTarget","elevation","style","border","Menu","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","map","option","MenuItem","to","push","TextInput","label","name","onChange","handleChange","TextField","required","autoFocus","id","PasswordInput","type","TitleText","fontSize","Typography","noWrap","fontWeight","Text","align","TextWithLink","Link","RouteLink","underline","SIGNIN_MUTATION","gql","SIGNUP_MUTATION","REFRESHJWT_MUTATION","ErrorDialog","error","handleClose","Dialog","DialogContent","DialogContentText","DialogActions","LoadingDialog","PaperProps","backgroundColor","boxShadow","CircularProgress","size","InformDialog","information","onContinue","onCancel","AuthorizationContext","createContext","root","height","image","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","LandingPage","useContext","setAuthorization","username","password","signInInfo","setSignInInfo","setError","useMutation","signIn","loading","handleSignInChange","prop","preventDefault","target","handleSignInClick","a","variables","errorPolicy","then","data","status","token","login","user","role","catch","console","log","Fragment","Grid","container","CssBaseline","item","xs","sm","md","Avatar","SignUpPage","confirmPassword","signUpInfo","setSignUpInfo","signUp","handleSignUpChange","Container","maxWidth","ForgotPasswordPage","email","forgotPasswordInfo","setForgotPasswordInfo","toolBar","common","white","black","justifyContent","overflowX","appBar","NavigationBar","AppBar","Toolbar","createData","title","created","getTestById","test","sections","number","statementText","statementAudio","questionList","introText","questions","answer","chip","maxHeight","ListeningChip","useTheme","Chip","listening","ReadingChip","reading","DoneIcon","cellWithIcon","flexWrap","TestTable","Table","stickyHeader","TableHead","TableRow","compareFn","b","direction","res","toUpperCase","column","TCell","TableBody","row","TRow","hover","toLowerCase","withStyles","borderBottom","head","table","text","body","TableCell","odd","AuthorizationContainer","children","authorization","refreshJWT","useEffect","tokenPayload","split","tokenExpiration","Date","now","getTime","paddingTop","paddingLeft","paddingBottom","paddingRight","padding","overflow","tableHead","AllTestPage","authorizationData","useAuthorization","section","marginBottom","questionGroup","question","ReadingPassage","passage","Box","ReadingSectionQuestion","QuestionGroup","Question","TFQuestion","FITBQuestion","MCQuestion","possibleAnswer","marginRight","marginLeft","substring","ReadingSectionAnswer","props","AnswerGroup","answers","onAnswer","Answer","TFAnswer","FITBAnswer","MCAnswer","setAnswer","select","ReadingTest","cardHeader","cardContent","TestPage","useParams","tab","setTab","nextTab","setNextTab","testDisable","setTestDisable","informDialogOpen","setInformDialogOpen","justify","Tabs","orientation","Tab","disabled","DoTest","CommentTest","ResultTest","setAnswers","setData","elementIdx","findIndex","element","newAnswers","comments","content","comment","Card","CardHeader","action","subheader","CardContent","flexGrow","appBarSpacer","mixins","toolbar","HomePage","basename","exact","path","createMuiTheme","primary","light","dark","contrastText","even","App","setAuthorizationData","ThemeProvider","Provider","window","location","hostname","match","httpLink","createHttpLink","uri","process","API_URL","credentials","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+XASMA,EAAYC,KAAW,SAACC,GAAD,MAAY,CACxCC,OAAQ,CACPC,OAAQF,EAAMG,QAAQ,EAAG,EAAG,QAIvB,SAASC,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC/BC,EAAUT,IAEZU,EAAc,kBAAMF,KAExB,OACC,cAACG,EAAA,EAAD,CACCC,WAAS,EACTC,QAAU,YACVC,MAAQ,UACRC,UAAcN,EAAQN,OACtBK,QAAY,kBAAME,KALnB,SAMGH,IAoBE,SAASS,EAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EACjBC,IAAMC,SAAS,MADE,mBAC1CC,EAD0C,KAChCC,EADgC,KAE3CC,EAAUC,cAMhB,OACC,sBAAKC,UAAcC,IAAnB,UACC,cAACC,EAAA,EAAD,CAAYb,MAAQ,UACjBc,gBAAgB,OAChBpB,QARe,SAACqB,GAAD,OAAWP,EAAYO,EAAMC,gBAM/C,SAGGZ,IAEH,cAACQ,EAAA,EAAD,CAAOK,UAAa,EAAGC,MAAS,CAAE5B,OAAQ,MAAO6B,OAAQ,qBACzD,cAACC,EAAA,EAAD,CACCC,aAAW,EACXJ,UAAa,EACbK,mBAAsB,KACtBC,aAAgB,CACfC,SAAU,SACVC,WAAY,UAEbC,gBAAmB,CAClBF,SAAU,MACVC,WAAY,UAEblB,SAAaA,EACboB,KAASC,QAAQrB,GACjBsB,QAzBiB,kBAAMrB,EAAY,OAWpC,SAiBGL,EAAQ2B,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,CAAUtC,QAAY,kBA5BGuC,EA4BuBF,EAAOE,GA5BvBxB,EAAQyB,KAAKD,GAArB,IAACA,GA4BzB,SAA+DF,EAAOtC,gB,oBC5EpE,SAAS0C,EAAT,GAAsD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAM5C,EAAmB,EAAnBA,MAAO6C,EAAY,EAAZA,SAC3CC,EAAe,SAACxB,GAAD,OAAWuB,EAASvB,IAEvC,OACC,cAACyB,EAAA,EAAD,CACCC,UAAQ,EAAC3C,WAAS,EAAC4C,WAAS,EAC5B3C,QAAU,WACVT,OAAS,SACTqD,GAAON,EACPD,MAAUA,EACVC,KAASA,EACT5C,MAAUA,EACV6C,SAAa,SAACvB,GAAD,OAAWwB,EAAaxB,MAKjC,SAAS6B,EAAT,GAA0D,IAAjCR,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAM5C,EAAmB,EAAnBA,MAAO6C,EAAY,EAAZA,SAC/CC,EAAe,SAACxB,GAAD,OAAWuB,EAASvB,IAEvC,OACC,cAACyB,EAAA,EAAD,CACCC,UAAQ,EAAC3C,WAAS,EAAC4C,WAAS,EAC5B3C,QAAU,WACVT,OAAS,SACTuD,KAAO,WACPF,GAAON,EACPD,MAAUA,EACVC,KAASA,EACT5C,MAAUA,EACV6C,SAAa,SAACvB,GAAD,OAAWwB,EAAaxB,M,qBC9BjC,SAAS+B,EAAT,GAAyC,IAApBrD,EAAmB,EAAnBA,MAAOsD,EAAY,EAAZA,SAClC,OACC,cAACC,EAAA,EAAD,CAAYC,QAAM,EACfjD,MAAQ,UACRD,QAAU,UACVmB,MAAS,CAAEgC,WAAY,OAAQH,SAAUA,GAH5C,SAKGtD,IAKE,SAAS0D,EAAT,GAAiC,IAAjB1D,EAAgB,EAAhBA,MAAO2D,EAAS,EAATA,MAC7B,OACC,cAACJ,EAAA,EAAD,CACCI,MAAUA,EADX,SAGG3D,IAKE,SAAS4D,EAAT,GAA6C,IAArB5D,EAAoB,EAApBA,MAAO2D,EAAa,EAAbA,MAAOnB,EAAM,EAANA,GAC5C,OACC,cAACqB,EAAA,EAAD,CAAM3C,UAAc4C,IAAYtB,GAAOA,EAAKuB,UAAY,OAAxD,SACC,cAACR,EAAA,EAAD,CACCjD,QAAU,QACVqD,MAAUA,EAFX,SAGG3D,M,mCC/BOgE,EAAkBC,YAAH,0VAiBfC,EAAkBD,YAAH,wJAQfE,EAAsBF,YAAH,iT,6CCnBzB,SAASG,EAAT,GAAgD,IAAzBC,EAAwB,EAAxBA,MAAOnC,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,QACpCkC,EAAc,kBAAMlC,KAE1B,OACC,8BACC,eAACmC,EAAA,EAAD,CACCrC,KAASA,EACTE,QAAYkC,EAFb,UAIC,cAACE,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UAAqBJ,MAEtB,cAACK,EAAA,EAAD,UACC,cAACtE,EAAA,EAAD,CAAQH,QAAYqE,EAAc/D,MAAQ,UAAU0C,WAAS,EAA7D,0BASE,SAAS0B,GAAT,GAAkC,IAATzC,EAAQ,EAARA,KAC/B,OACC,cAACqC,EAAA,EAAD,CACCrC,KAASA,EACT0C,WAAc,CACbnD,MAAO,CACNoD,gBAAiB,cACjBC,UAAW,SALd,SAQC,cAACN,EAAA,EAAD,UACC,cAACO,EAAA,EAAD,CAAkBC,KAAS,SAmBxB,SAASC,GAAT,GAAmE,IAA3C/C,EAA0C,EAA1CA,KAAMgD,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SAC7D,OACC,8BACC,eAACb,EAAA,EAAD,CAAQrC,KAASA,EAAOE,QAAYgD,EAApC,UACC,cAACZ,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UAAqBS,MAEtB,eAACR,EAAA,EAAD,WACC,cAACtE,EAAA,EAAD,CAAQH,QAAYmF,EAAW7E,MAAQ,UAAU0C,WAAS,EAA1D,oBAGA,cAAC7C,EAAA,EAAD,CAAQH,QAAYkF,EAAa5E,MAAQ,UAAU0C,WAAS,EAA5D,8BCrEE,IAAMoC,GAAuBzE,IAAM0E,gBCcpC7F,GAAYC,KAAW,SAACC,GAAD,MAAY,CACrC4F,KAAM,CACFC,OAAQ,SAEZC,MAAO,CACHC,gBAAiB,0CACjBC,iBAAkB,YAClBd,gBAC2B,UAAvBlF,EAAMiG,QAAQxC,KAAmBzD,EAAMiG,QAAQC,KAAK,IAAMlG,EAAMiG,QAAQC,KAAK,KACjFC,eAAgB,QAChBC,mBAAoB,UAExBC,MAAO,CACHnG,OAAQF,EAAMG,QAAQ,EAAG,GACzBmG,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJvG,OAAQF,EAAMG,QAAQ,GACtB+E,gBAAiBlF,EAAMiG,QAAQS,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPC,UAAW9G,EAAMG,QAAQ,QAIlB,SAAS4G,KACpB,IAAMxG,EAAUT,KACVuB,EAAUC,cAFkB,EAGQ0F,qBAAWtB,IAHnB,mBAGZuB,GAHY,aAIE/F,mBAAS,CACzCgG,SAAU,GACVC,SAAU,KANoB,mBAI3BC,EAJ2B,KAIfC,EAJe,OAQRnG,mBAAS,MARD,mBAQ3BwD,EAR2B,KAQpB4C,EARoB,OASJC,sBAAYlD,GATR,mBAS3BmD,EAT2B,KASjBC,EATiB,KASjBA,QAEXC,EAAqB,SAACC,GAAD,OAAU,SAAChG,GAClCA,EAAMiG,iBACNP,EAAc,2BAAKD,GAAN,kBAAmBO,EAAOhG,EAAMkG,OAAOxH,WAElDyH,EAAiB,uCAAG,sBAAAC,EAAA,sDACtBP,EAAO,CACCQ,UAAW,CACPd,SAAUE,EAAWF,SACrBC,SAAUC,EAAWD,UAEzBc,YAAa,SAEpBC,MAAK,SAAAC,GACFlB,EAAiB,CACbmB,QAAQ,EACRC,MAAOF,EAAKA,KAAKG,MAAMD,MACvBE,KAAM,CACFhF,GAAI4E,EAAKA,KAAKG,MAAMC,KAAKhF,GACzB2D,SAAUiB,EAAKA,KAAKG,MAAMC,KAAKrB,SAC/BsB,KAAM,CACFvF,KAAMkF,EAAKA,KAAKG,MAAMC,KAAKC,KAAKvF,SAI5C5B,EAAQyB,KAAK,cAEhB2F,OAAM,SAAA/D,GACH4C,GAAS,GACToB,QAAQC,IAAIjE,MAxBM,2CAAH,qDA4BvB,OACI,eAAC,IAAMkE,SAAP,WACMnB,GAAW,cAACzC,GAAD,CAAezC,KAASkF,IACnC/C,GAAS,cAACD,EAAD,CAAaC,MAAQ,+CACRnC,KAASmC,EAAQjC,QAAY6E,GAAS,KAC9D,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACvH,UAAY,OAAOV,UAAcN,EAAQqF,KAAzD,UACI,cAACmD,EAAA,EAAD,IACA,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAM,EAAOC,GAAM,EAAGC,GAAM,IAKvC,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,EAAGC,GAAM,EAAG5H,UAAaC,IAApD,SACI,sBAAKX,UAAcN,EAAQ8F,MAA3B,UACI,cAAC+C,EAAA,EAAD,CAAQvI,UAAcN,EAAQkG,OAA9B,SACI,cAAC,IAAD,MAEJ,cAAC/C,EAAD,CAAWrD,MAAQ,UAAUsD,SAAW,SACxC,uBAAM9C,UAAcN,EAAQqG,KAA5B,UACI,cAAC7D,EAAD,CAAWC,MAAQ,WAAWC,KAAO,WAAW5C,MAAU+G,EAAU,SACzDlE,SAAawE,EAAmB,cAE3C,cAAClE,EAAD,CAAeR,MAAQ,WAAWC,KAAO,WAAW5C,MAAU+G,EAAU,SACzDlE,SAAawE,EAAmB,cAE/C,cAACtH,EAAD,CAAcC,MAAQ,UACRC,QAAY,kBAAMwH,OAChC,eAACe,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACI,cAAChF,EAAD,CACI5D,MAAQ,mBACR2D,MAAQ,OACRnB,GAAK,uBAEb,cAACgG,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACI,cAAChF,EAAD,CACI5D,MAAQ,sBACR2D,MAAQ,QACRnB,GAAK,uC,cCzG7C,IAAM/C,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCqG,MAAO,CACNS,UAAW9G,EAAMG,QAAQ,GACzBmG,QAAS,OACTC,cAAe,SACfC,WAAY,UAEbC,OAAQ,CACPvG,OAAQF,EAAMG,QAAQ,GACtB+E,gBAAiBlF,EAAMiG,QAAQS,UAAUC,MAE1CC,KAAM,CACLC,MAAO,OACPC,UAAW9G,EAAMG,QAAQ,QAKZ,SAASkJ,KAEvB,IAAM9I,EAAUT,KACVuB,EAAUC,cAHoB,EAIAJ,mBAAS,CAC5C+B,KAAM,GACNiE,SAAU,GACVC,SAAU,GACVmC,gBAAiB,KARkB,mBAI7BC,EAJ6B,KAIjBC,EAJiB,OAUVtI,mBAAS,MAVC,mBAU7BwD,EAV6B,KAUtB4C,EAVsB,OAWNC,sBAAYhD,GAXN,mBAW7BkF,EAX6B,KAWnBhC,EAXmB,KAWnBA,QAEXiC,EAAqB,SAAC/B,GAAD,OAAU,SAAChG,GAAD,OAAW6H,EAAc,2BAAKD,GAAN,kBAAmB5B,EAAOhG,EAAMkG,OAAOxH,WAmBpG,OACC,eAAC,IAAMuI,SAAP,WACGnB,GAAW,cAACzC,GAAD,CAAezC,KAASkF,IACnC/C,GAAS,cAACD,EAAD,CAAaC,MAAQ,oBAC1BnC,KAASmC,EAAQjC,QAAY6E,GAAS,KAC5C,eAACqC,GAAA,EAAD,CAAWC,SAAW,KAAtB,UACC,cAACb,EAAA,EAAD,IAGA,sBAAKlI,UAAcN,EAAQ8F,MAA3B,UACC,cAAC+C,EAAA,EAAD,CAAQvI,UAAcN,EAAQkG,OAA9B,SACC,cAAC,IAAD,MAED,cAAC/C,EAAD,CAAWrD,MAAQ,iBAAiBsD,SAAW,SAC/C,uBAAM9C,UAAcN,EAAQqG,KAA5B,UACC,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAACnG,EAAD,CAAWC,MAAQ,YAAYC,KAAO,OACjC5C,MAAUkJ,EAAU,KACpBrG,SAAawG,EAAmB,YAEtC,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAACnG,EAAD,CAAWC,MAAQ,WAAWC,KAAO,WAChC5C,MAAUkJ,EAAU,SACpBrG,SAAawG,EAAmB,gBAEtC,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAAC1F,EAAD,CAAeR,MAAQ,WAAWC,KAAO,WACnC5C,MAAUkJ,EAAU,SACpBrG,SAAawG,EAAmB,gBAEvC,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAAC1F,EAAD,CAAeR,MAAQ,mBAAmBC,KAAO,mBAC3C5C,MAAUkJ,EAAU,gBACpBrG,SAAawG,EAAmB,uBAEvC,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAAC9I,EAAD,CAAcC,MAAQ,UACjBC,QAAY,WAvDvBmJ,EAAO,CACNzB,UAAW,CACVO,KAAM,CACLrB,SAAUqC,EAAWrC,SACrBC,SAAUoC,EAAWpC,SACrBlE,KAAMsG,EAAWtG,OAGnBgF,YAAa,SACXC,MAAK,SAAAC,GAAI,OAAI9G,EAAQyB,KAAK,QAC3B2F,OAAM,SAAA/D,GACP4C,GAAS,GACToB,QAAQC,IAAIjE,cA8CT,cAACmE,EAAA,EAAD,CAAMC,WAAS,EAAf,SACC,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACC,cAAChF,EAAD,CACC5D,MAAQ,6BACR2D,MAAQ,QACRnB,GAAK,sBCpGd,IAAM/C,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCqG,MAAO,CACNS,UAAW9G,EAAMG,QAAQ,GACzBmG,QAAS,OACTC,cAAe,SACfC,WAAY,UAEbC,OAAQ,CACPvG,OAAQF,EAAMG,QAAQ,GACtB+E,gBAAiBlF,EAAMiG,QAAQS,UAAUC,MAE1CC,KAAM,CACLC,MAAO,OACPC,UAAW9G,EAAMG,QAAQ,QAKZ,SAAS0J,KACvB,IAKoClC,EAL9BpH,EAAUT,KAD4B,EAEQoB,mBAAS,CAC5D4I,MAAO,KAHoC,mBAErCC,EAFqC,KAEjBC,EAFiB,KAW5C,OACC,cAAC,IAAMpB,SAAP,UACC,eAACe,GAAA,EAAD,CAAWC,SAAW,KAAtB,UACC,cAACb,EAAA,EAAD,IACA,sBAAKlI,UAAcN,EAAQ8F,MAA3B,UACC,cAAC+C,EAAA,EAAD,CAAQvI,UAAcN,EAAQkG,OAA9B,SACC,cAAC,IAAD,MAED,cAAC/C,EAAD,CAAWrD,MAAQ,mBAAmBsD,SAAW,SACjD,uBAAM9C,UAAcN,EAAQqG,KAA5B,UACC,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAACnG,EAAD,CAAWC,MAAQ,QAAQC,KAAO,QAC7B5C,MAAU0J,EAAkB,MAC5B7G,UAnBwByE,EAmBgB,QAnBP,SAAChG,GAAD,OAAWqI,EAAsB,2BAAKD,GAAN,kBAA2BpC,EAAOhG,EAAMkG,OAAOxH,eAqBtH,cAACwI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAIC,GAAM,GAA3B,SACC,cAAC9I,EAAD,CAAcC,MAAQ,mBACjBC,QAAY,oBAGnB,cAACuI,EAAA,EAAD,CAAMC,WAAS,EAAf,SACC,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACC,cAAChF,EAAD,CACC5D,MAAQ,eACR2D,MAAQ,QACRnB,GAAK,qB,6CC9DR/C,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCiK,QAAS,CACR/E,gBAAiBlF,EAAMiG,QAAQiE,OAAOC,MACtCvJ,MAAOZ,EAAMiG,QAAQiE,OAAOE,MAC5BC,eAAgB,gBAChBC,UAAW,QAEZC,OAAQ,OAIM,SAASC,KACvB,IAAMjK,EAAUT,KAWhB,OACC,cAAC2K,GAAA,EAAD,CAAQ5I,UAAa,EAAGhB,UAAcN,EAAQgK,OAA9C,SACC,eAACG,GAAA,EAAD,CAASnJ,UAAY,MAAMZ,QAAU,QAAQE,UAAcN,EAAQ0J,QAAnE,UACC,cAACvG,EAAD,CAAWrD,MAAQ,iBAAiBkB,UAAY,OAChD,cAACT,EAAD,CAAgBC,QAdH,CACf,CACCV,MAAO,OACPwC,GAAI,SAEL,CACCxC,MAAO,mBACPwC,GAAI,qBAQC7B,KAAS,cAAC,KAAD,W,2ECVjB,SAAS2J,GAAWpH,EAAIqH,EAAOnH,EAAMoH,EAASzC,GAC7C,MAAO,CAAE7E,KAAIqH,QAAOnH,OAAMoH,UAASzC,UAO7B,SAAS0C,GAAYvH,GACP,8BAERA,EAFQ,maA0WpB,MA7Ua,CACZwH,KAAM,CACLxH,GAAI,IACJE,KAAM,UACNuH,SAAU,CACT,CACCzH,GAAI,IACJ0H,OAAQ,IACRxH,KAAM,OACNyH,cAAe,6kBACfC,eAAgB,GAChBC,aAAc,CACb,CACC7H,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cACzB,CACDhI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,0FACfK,OAAQ,CAAC,IAAK,IAAK,MAEpB,CACChI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,uDACfK,OAAQ,CAAC,IAAK,IAAK,MAClB,CACDhI,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,OAC5ByH,cAAe,4IACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,IAAK0H,OAAQ,IAAKxH,KAAM,KAC5ByH,cAAe,0FACfK,OAAQ,CAAC,mBAAoB,mBAAoB,aAElD,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,uDACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,oBAC1D,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,yBAKjF,CACDhI,GAAI,IACJ0H,OAAQ,IACRxH,KAAM,OACNyH,cAAe,6kBACfC,eAAgB,GAChBC,aAAc,CACb,CACC7H,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cACzB,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,0FACfK,OAAQ,CAAC,IAAK,IAAK,MAEpB,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,uDACfK,OAAQ,CAAC,IAAK,IAAK,MAClB,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,4IACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,0FACfK,OAAQ,CAAC,mBAAoB,mBAAoB,aAElD,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,uDACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,oBAC1D,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,yBAKjF,CACDhI,GAAI,IACJ0H,OAAQ,IACRxH,KAAM,OACNyH,cAAe,6kBACfC,eAAgB,GAChBC,aAAc,CACb,CACC7H,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cACzB,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,cAE3B,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,qGACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,0FACfK,OAAQ,CAAC,IAAK,IAAK,MAEpB,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,uDACfK,OAAQ,CAAC,IAAK,IAAK,MAClB,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,OAC9ByH,cAAe,4IACfK,OAAQ,CAAC,OAAQ,QAAS,gBAG1B,CACFhI,GAAI,IAAK0H,OAAQ,IAAKI,UACrB,2RAQDC,UAAW,CACV,CACC/H,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,0FACfK,OAAQ,CAAC,mBAAoB,mBAAoB,aAElD,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,uDACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,oBAC1D,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,qBAE/E,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,0FACfK,OAAQ,CAAC,mBAAoB,mBAAoB,aAElD,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,uDACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,oBAC1D,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,qBAE/E,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,0FACfK,OAAQ,CAAC,mBAAoB,mBAAoB,aAElD,CACChI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,uDACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,oBAC1D,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,qBAC7E,CACDhI,GAAI,KAAM0H,OAAQ,KAAMxH,KAAM,KAC9ByH,cAAe,4IACfK,OAAQ,CAAC,cAAe,eAAgB,kBAAmB,kBAAmB,4B,kCC/XjFzL,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCwL,KAAM,CACLC,UAAW,OACX9H,SAAU,OACVG,WAAY,YAIP,SAAS4H,KACf,IAAMnL,EAAUT,KACVE,EAAQ2L,OAEd,OACC,cAACC,GAAA,EAAD,CAAMvG,KAAO,QAAQrC,MAAQ,YAAYnC,UAAcN,EAAQiL,KAC5D1J,MAAS,CAAEoD,gBAAiBlF,EAAMiG,QAAQuF,KAAKK,aAI7C,SAASC,KACf,IAAMvL,EAAUT,KACVE,EAAQ2L,OAEd,OACC,cAACC,GAAA,EAAD,CAAMvG,KAAO,QAAQrC,MAAQ,UAAUnC,UAAcN,EAAQiL,KAC1D1J,MAAS,CAAEoD,gBAAiBlF,EAAMiG,QAAQuF,KAAKO,W,yBC1B7C,SAASC,KACf,OACC,cAAC,KAAD,CAAiBrI,SAAW,UCW9B,IAAM7D,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCiM,aAAc,CACb3F,QAAS,OACTE,WAAY,SACZ0F,SAAU,YAIG,SAASC,KACvB,IAAM5L,EAAUT,KAiDViL,EHnEC,CACNJ,GAAW,IAAI,0BAA2B,UAAW,aAAc,QACnEA,GAAW,IAAI,qBAAsB,YAAa,aAAc,QAChEA,GAAW,IAAI,wBAAyB,UAAW,aAAc,QACjEA,GAAW,IAAI,sBAAuB,YAAa,aAAc,QACjEA,GAAW,IAAI,0BAA2B,UAAW,aAAc,QACnEA,GAAW,IAAI,qBAAsB,UAAW,aAAc,QAC9DA,GAAW,IAAI,wBAAyB,UAAW,aAAc,QACjEA,GAAW,IAAI,sBAAuB,YAAa,aAAc,QACjEA,GAAW,IAAI,0BAA2B,UAAW,aAAc,QACnEA,GAAW,KAAK,qBAAsB,YAAa,aAAc,QACjEA,GAAW,KAAK,wBAAyB,YAAa,aAAc,QACpEA,GAAW,KAAK,sBAAuB,UAAW,aAAc,QAChEA,GAAW,KAAK,0BAA2B,YAAa,aAAc,QACtEA,GAAW,KAAK,qBAAsB,UAAW,aAAc,QAC/DA,GAAW,KAAK,wBAAyB,YAAa,aAAc,QACpEA,GAAW,KAAK,sBAAuB,UAAW,aAAc,SGqDjE,OACC,eAACyB,GAAA,EAAD,CAAO/G,KAAO,QAAQgH,cAAY,EAAlC,UACE,cAACC,GAAA,EAAD,UACC,cAACC,GAAA,EAAD,UArDY,CACf,CACChJ,GAAI,KACJP,MAAO,IACPgB,MAAO,QACP6C,MAAO,KACP2F,UAAW,SAACzE,EAAG0E,EAAGC,GACjB,IAAMC,EAAM5E,EAAExE,GAAKkJ,EAAElJ,GACrB,MAAqB,QAAdmJ,EAAsBC,GAAOA,IAEpC,CACDpJ,GAAI,QACJP,MAAO,QACPgB,MAAO,OACP6C,MAAO,MACP2F,UAAW,SAACzE,EAAG0E,EAAGC,GACjB,IAAMC,EAAM5E,EAAE6C,MAAQ6B,EAAE7B,MACxB,MAAqB,QAAd8B,EAAsBC,GAAOA,IAEnC,CACFpJ,GAAI,OACJP,MAAO,OACPgB,MAAO,OACP6C,MAAO,KACP2F,UAAW,SAACzE,EAAG0E,EAAGC,GACjB,IAAMC,EAAM5E,EAAEtE,KAAOgJ,EAAEhJ,KAAO,GAAK,EACnC,MAAqB,QAAdiJ,EAAsBC,GAAOA,IAEnC,CACFpJ,GAAI,UACJP,MAAO,eACPgB,MAAO,QACP6C,MAAO,KACP2F,UAAW,SAACzE,EAAG0E,EAAGC,GACjB,IAAMC,EAAM5E,EAAE8C,QAAU4B,EAAE5B,QAAU,GAAK,EACzC,MAAqB,QAAd6B,EAAsBC,GAAOA,IAEnC,CACFpJ,GAAI,SACJP,MAAO,SACPgB,MAAO,QACP6C,MAAO,KACP2F,UAAW,SAACzE,EAAG0E,EAAGC,GACjB,IAAMC,EAAM5E,EAAEK,OAAOwE,cAAgBH,EAAErE,OAAOwE,cAAgB,GAAK,EACnE,MAAqB,QAAdF,EAAsBC,GAAOA,KAUxBjK,KAAI,SAACmK,GAAD,OACb,cAACC,GAAD,CAAO9I,MAAU6I,EAAO7I,MAAxB,SACC,cAACN,EAAD,CAAWrD,MAAUwM,EAAO7J,iBAKhC,cAAC+J,GAAA,EAAD,UACGhC,EAAKrI,KAAI,SAACsK,GAAD,OACV,eAACC,GAAD,CAAMC,OAAK,EAAX,UACC,cAACJ,GAAD,CAAO9I,MAAQ,QAAf,SACGgJ,EAAIzJ,KAEP,cAACuJ,GAAD,CAAO9I,MAAQ,OACXlC,MAAS,CAAE+E,MAAO,OADtB,SAEC,cAAC5C,EAAD,CAAc5D,MAAU2M,EAAIpC,MAAQ/H,GAAE,WAAQmK,EAAIzJ,QAEnD,cAACuJ,GAAD,CAAO9I,MAAQ,OAAf,SAC+B,cAA3BgJ,EAAIvJ,KAAK0J,cAAiC,cAACzB,GAAD,IAAoB,cAACI,GAAD,MAElE,cAACgB,GAAD,CAAO9I,MAAQ,QAAf,SACGgJ,EAAInC,UAEP,cAACiC,GAAD,CAAO9I,MAAQ,QACXnD,UAAcN,EAAQ0L,aAD1B,SAEiC,SAA7Be,EAAI5E,OAAO+E,eAA6B,cAACnB,GAAD,QAhBzBgB,EAAIzJ,YAyB9B,IAAMuJ,GAAQM,MAAW,SAACpN,GAAD,MAAY,CACnC4F,KAAM,CACLC,OAAQ,GACRwH,aAAc,QAEfC,KAAM,CACLpI,gBAAiBlF,EAAMiG,QAAQsH,MAAMD,KACrC1M,MAAOZ,EAAMiG,QAAQsH,MAAMC,MAE5BC,KAAM,CACL9J,SAAU,OAVCyJ,CAYTM,MACCT,GAAOG,MAAW,SAACpN,GAAD,MAAY,CAClC4F,KAAM,CACL,qBAAsB,CACrBV,gBAAiBlF,EAAMiG,QAAQsH,MAAMI,SAH5BP,CAMRb,MC/HE,SAASqB,GAAT,GAA+C,IAAbC,EAAY,EAAZA,SAAY,EACV7G,qBAAWtB,IADD,mBAC7CoI,EAD6C,aAElBvG,sBAAY/C,IAFM,mBAE7CuJ,EAF6C,UAE/BtG,QAoBrB,OAlBAuG,qBAAU,WAET,GADAtF,QAAQC,IAAI,qBACe,MAAvBmF,EAAczF,MAAe,CAChC,IAAM4F,EAAeH,EAAczF,MAAM6F,MAAM,KAAK,GAC9CC,EAAkB,IAAIC,KAAKH,GAC3BI,EAAM,IAAID,KACZD,EAAgBG,UAAYD,EAAIC,UAAY,KAC/CP,IACE7F,MAAK,SAAAC,GAAI,OAAIO,QAAQC,IAAIR,MACzBM,OAAM,SAAA/D,GAAK,OAAIgE,QAAQC,IAAIjE,WAG9BqJ,IACE7F,MAAK,SAAAC,GAAI,OAAIO,QAAQC,IAAIR,MACzBM,OAAM,SAAA/D,GAAK,OAAIgE,QAAQC,IAAIjE,SAK9B,cAAC,IAAMkE,SAAP,UAEEkF,EAAc1F,OACXyF,EACA,cAAC,IAAD,CAAUhL,GAAK,QCxBtB,IAAM/C,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxC8I,UAAW,CACVyF,WAAYvO,EAAMG,QAAQ,GAC1BqO,YAAaxO,EAAMG,QAAQ,GAC3BsO,cAAezO,EAAMG,QAAQ,GAC7BuO,aAAc1O,EAAMG,QAAQ,IAE7BkG,MAAO,CACNsI,QAAS3O,EAAMG,QAAQ,GACvBmG,QAAS,OACTsI,SAAU,OACVrI,cAAe,SACfV,OAAQ,QAETgJ,UAAW,CACV3J,gBAAiBlF,EAAMiG,QAAQiE,OAAOE,MACtCxJ,MAAOZ,EAAMiG,QAAQiE,OAAOC,MAC5BrG,WAAY,YAIC,SAASgL,KACvB,IAAMvO,EAAUT,MV3Be,WAC/B,IAAMiP,EAAoB/H,qBAAWtB,IACrCgD,QAAQC,IAAIoG,GACL,eACHA,GUwBkBC,GAEtB,OACC,cAACpB,GAAD,UACC,cAACjE,GAAA,EAAD,CAAW9I,UAAaN,EAAQuI,UAAhC,SACC,eAACD,EAAA,EAAD,CAAMC,WAAS,EAAC3I,QAAW,EAA3B,UACC,cAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,cAACzH,EAAA,EAAD,CAAOK,UAAa,EAApB,SACC,cAACsK,GAAD,QAGF,cAACtD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,cAACzH,EAAA,EAAD,CAAOX,UAAaN,EAAQ8F,iB,wBCtC5BvG,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCiP,QAAS,CACR/O,OAAQF,EAAMG,QAAQ,GACtBwO,QAAS3O,EAAMG,QAAQ,IAExByK,MAAO,CACNsE,aAAclP,EAAMG,QAAQ,IAE7BgP,cAAe,CACdjP,OAAQF,EAAMG,QAAQ,GACtB+O,aAAclP,EAAMG,QAAQ,GAC5BwO,QAAS3O,EAAMG,QAAQ,IAExBiP,SAAU,CACTlP,OAAQF,EAAMG,QAAQ,GACtBwO,QAAS3O,EAAMG,QAAQ,QAIlB,SAASkP,GAAT,GAA+C,IAArBJ,EAAoB,EAApBA,QAASK,EAAW,EAAXA,QACnC/O,EAAUT,KAEhB,OACC,eAACyP,GAAA,EAAD,CAAKxN,OAAU,IAAKlB,UAAcN,EAAQ0O,QAA1C,UACC,qBAAKpO,UAAcN,EAAQqK,MAA3B,SACC,cAAClH,EAAD,CAAWrD,MAAK,kBAAe4O,GAAWtL,SAAa,WAExD,cAACI,EAAD,CAAM1D,MAAUiP,OAKZ,SAASE,GAAT,GAA8C,IAAZP,EAAW,EAAXA,QACxC,OACC,eAAC,IAAMrG,SAAP,WACC,cAACyG,GAAD,CAAgBJ,QAAYA,EAAQhE,OAASqE,QAAYL,EAAQ/D,gBACjE,cAACuE,GAAD,CAAerE,aAAiB6D,EAAQ7D,kBAIpC,SAASqE,GAAT,GAA0C,IAAjBrE,EAAgB,EAAhBA,aACzB7K,EAAUT,KAEhB,OACC,cAAC,IAAM8I,SAAP,UAEGwC,EAAa1I,KAAI,SAAA0M,GACjB,OACC,eAACG,GAAA,EAAD,CAAKxN,OAAU,EAAGlB,UAAcN,EAAQ4O,cAAxC,UACC,qBAAKtO,UAAcN,EAAQqK,MAA3B,SACC,cAAClH,EAAD,CAAWrD,MAAK,gBAAa+O,EAASnE,QAAUtH,SAAa,WAE9D,cAACI,EAAD,CAAM1D,MAAU+O,EAAS/D,YACzB,cAACqE,GAAD,CAAUpE,UAAc8D,EAAS9D,oBAQjC,SAASoE,GAAT,GAAkC,IAAdpE,EAAa,EAAbA,UAC1B,OACC,cAAC,IAAM1C,SAAP,UACG0C,EAAU5I,KAAI,SAAC0M,GAChB,MACoB,SAAlBA,EAAS3L,KACP,cAACkM,GAAD,CAAY1E,OAAWmE,EAASnE,OAASC,cAAkBkE,EAASlE,gBACjD,SAAlBkE,EAAS3L,KACT,cAACmM,GAAD,CAAc3E,OAAWmE,EAASnE,OAASC,cAAkBkE,EAASlE,gBACtE,cAAC2E,GAAD,CAAY5E,OAAWmE,EAASnE,OAASC,cAAkBkE,EAASlE,cAAgB4E,eAAmBV,EAAS7D,cAOlH,SAASoE,GAAT,GAAgD,IAA1B1E,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAC9B3K,EAAUT,KAEhB,OACC,eAACyP,GAAA,EAAD,CAAKxN,OAAU,EAAGlB,UAAcN,EAAQ6O,SAAxC,UACC,cAACxL,EAAA,EAAD,CAAY0C,QAAU,SAASxE,MAAS,CAAEiO,YAAa,OAAQjM,WAAY,QAA3E,SACGmH,IAEH,cAACrH,EAAA,EAAD,CAAY0C,QAAU,SAAtB,SACG4E,OAKC,SAAS2E,GAAT,GAAgE,IAA1C5E,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,cAAe4E,EAAkB,EAAlBA,eAC7CvP,EAAUT,KAEhB,OACC,eAACyP,GAAA,EAAD,CAAKxN,OAAU,EAAGlB,UAAcN,EAAQ6O,SAAxC,UACC,cAACxL,EAAA,EAAD,CAAY0C,QAAU,SAASxE,MAAS,CAAEiO,YAAa,OAAQjM,WAAY,QAA3E,SACGmH,IAEH,cAACrH,EAAA,EAAD,CAAY0C,QAAU,SAAtB,SACG4E,IAEH,cAACqE,GAAA,EAAD,CAAKxN,OAAU,EAAGD,MAAS,CAAEkO,WAAY,QAAzC,SAEEF,EAAepN,KAAI,SAAA6I,GAClB,OACC,eAACgE,GAAA,EAAD,CAAKxN,OAAU,EAAf,UACC,cAAC6B,EAAA,EAAD,CAAY0C,QAAU,SAASxE,MAAS,CAAEkO,WAAY,OAAQD,YAAa,OAAQjM,WAAY,QAA/F,SACGyH,EAAO0E,UAAU,EAAG,KAEvB,cAACrM,EAAA,EAAD,CAAY0C,QAAU,SAAtB,SACGiF,EAAO0E,UAAU,gBAWrB,SAASL,GAAT,GAAkD,IAA1B3E,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAChC3K,EAAUT,KAEhB,OACC,eAACyP,GAAA,EAAD,CAAKxN,OAAU,EAAGlB,UAAcN,EAAQ6O,SAAxC,UACC,cAACxL,EAAA,EAAD,CAAY0C,QAAU,SAASxE,MAAS,CAAEiO,YAAa,OAAQjM,WAAY,QAA3E,SACGmH,IAEH,cAACrH,EAAA,EAAD,CAAY0C,QAAU,SAAtB,SACG4E,OCjIN,IAAMpL,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxC4K,MAAO,CACNsE,aAAclP,EAAMG,QAAQ,IAE7BoL,OAAQ,CACPrL,OAAQF,EAAMG,QAAQ,QAIjB,SAAS+P,GAAqBC,GACpC,OACC,cAACC,GAAD,CAAahF,aAAiB+E,EAAMlB,QAAQ7D,aAAeiF,QAAYF,EAAME,QACzEC,SAAaH,EAAMG,WAGlB,SAASF,GAAYD,GAC3B,IAAM5P,EAAUT,KAEhB,OACC,cAAC,IAAM8I,SAAP,UAEGuH,EAAM/E,aAAa1I,KAAI,SAAA0M,GACvB,OACC,eAACG,GAAA,EAAD,CAAKxN,OAAU,EAAf,UACC,qBAAKlB,UAAcN,EAAQqK,MAA3B,SACC,cAAClH,EAAD,CAAWrD,MAAK,gBAAa+O,EAASnE,QAAUtH,SAAa,WAE9D,cAAC4M,GAAD,CAAQjF,UAAc8D,EAAS9D,UAAY+E,QAAYF,EAAME,QAC3DC,SAAaH,EAAMG,mBAQrB,SAASC,GAAOJ,GACtB,IAAM5P,EAAUT,KAEhB,OACC,cAACyP,GAAA,EAAD,CAAKxN,OAAU,EAAGlB,UAAcN,EAAQgL,OAAxC,SACG4E,EAAM7E,UAAU5I,KAAI,SAAA0M,GACrB,MACoB,SAAlBA,EAAS3L,KACP,cAAC+M,GAAD,CAAUjN,GAAO6L,EAAS7L,GAAK0H,OAAWmE,EAASnE,OAAS6E,eAAmBV,EAAS7D,OACvF8E,QAAYF,EAAME,QAAUC,SAAaH,EAAMG,WAC7B,SAAlBlB,EAAS3L,KACT,cAACgN,GAAD,CAAYlN,GAAO6L,EAAS7L,GAAK0H,OAAWmE,EAASnE,OAASqF,SAAaH,EAAMG,WACjF,cAACI,GAAD,CAAUnN,GAAO6L,EAAS7L,GAAK0H,OAAWmE,EAASnE,OAAS6E,eAAmBV,EAAS7D,OACvF+E,SAAaH,EAAMG,gBAQtB,SAASE,GAASL,GACxB,IAAMnQ,EAAQ2L,OADiB,EAEHzK,mBAAS,CACpCqC,GAAI4M,EAAM5M,GACVgI,OAAQ,MAJsB,mBAExBA,EAFwB,KAEhBoF,EAFgB,KAmB/B,OAJA3C,qBAAU,WACTmC,EAAMG,SAAS/E,KACb,CAACA,EAAOA,SAGV,cAACnI,EAAA,EAAD,CACCwN,QAAM,EAAClQ,WAAS,EAChB2E,KAAO,QACP1E,QAAU,WACV4C,GAAO4M,EAAMlF,OACbjI,MAAK,mBAAiBmN,EAAMlF,QAC5B5K,MAAUkL,EAAOA,OACjBzJ,MAAS,CAAEoN,aAAclP,EAAMG,QAAQ,IACvC+C,SAAa,SAACvB,GAAD,OArBM,SAACA,GACrBgP,EAAU,CACTpN,GAAI4M,EAAM5M,GACVgI,OAAQ5J,EAAMkG,OAAOxH,QAkBG8C,CAAaxB,IARtC,SAUGwO,EAAML,eAAepN,KAAI,SAACC,GAAD,OAC1B,cAACC,EAAA,EAAD,CAA2BvC,MAAUsC,EAArC,SACGA,GADeA,QAOf,SAAS+N,GAASP,GACxB,IAAMnQ,EAAQ2L,OADiB,EAGHzK,mBAAS,CACpCqC,GAAI4M,EAAM5M,GACVgI,OAAQ,MALsB,mBAGxBA,EAHwB,KAGhBoF,EAHgB,KAqB/B,OALA3C,qBAAU,WACTmC,EAAMG,SAAS/E,KACb,CAACA,EAAOA,SAIV,cAACnI,EAAA,EAAD,CACCwN,QAAM,EAAClQ,WAAS,EAChB2E,KAAO,QACP1E,QAAU,WACV4C,GAAO4M,EAAMlF,OACbjI,MAAK,mBAAiBmN,EAAMlF,QAC5B5K,MAAUkL,EAAOA,OACjBzJ,MAAS,CAAEoN,aAAclP,EAAMG,QAAQ,IACvC+C,SAAa,SAACvB,GAAD,OAtBM,SAACA,GACrBgP,EAAU,CACTpN,GAAI4M,EAAM5M,GACVgI,OAAQ5J,EAAMkG,OAAOxH,QAmBG8C,CAAaxB,IARtC,SAUGwO,EAAML,eAAepN,KAAI,SAACC,GAAD,OAC1B,cAACC,EAAA,EAAD,CAA2BvC,MAAUsC,EAArC,SACGA,EAAOsN,UAAU,EAAG,IADLtN,QAOf,SAAS8N,GAAWN,GAC1B,IAAMnQ,EAAQ2L,OADmB,EAGLzK,mBAAS,CACpCqC,GAAI4M,EAAM5M,GACVgI,OAAQ,MALwB,mBAG1BA,EAH0B,KAGlBoF,EAHkB,KAoBjC,OAJA3C,qBAAU,WACTmC,EAAMG,SAAS/E,KACb,CAACA,EAAOA,SAGV,cAACnI,EAAA,EAAD,CACC1C,WAAS,EACT2E,KAAO,QACP1E,QAAU,WACV4C,GAAO4M,EAAMlF,OACbjI,MAAK,mBAAiBmN,EAAMlF,QAC5B5K,MAAUkL,EAAOA,OACjBzJ,MAAS,CAAEoN,aAAclP,EAAMG,QAAQ,IACvC+C,SAAa,SAACvB,GAAD,OArBM,SAACA,GACrBgP,EAAU,CACTpN,GAAI4M,EAAM5M,GACVgI,OAAQ5J,EAAMkG,OAAOxH,QAkBG8C,CAAaxB,MCrKxC,IAAM7B,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxCqG,MAAO,CACNsI,QAAS3O,EAAMG,QAAQ,GACvBmG,QAAS,OACTsI,SAAU,OACVrI,cAAe,SACfV,OAAQ,YAIH,SAASgL,GAAYV,GAC3B,IAAM5P,EAAUT,KAEhB,OACEqQ,EAAMnF,SAAStI,KAAI,SAAAuM,GAAO,OAC1B,eAACpG,EAAA,EAAD,CAAMC,WAAS,EAAC3I,QAAW,EAA3B,UACC,cAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,cAACzH,EAAA,EAAD,CAAOb,QAAU,WAAWE,UAAcN,EAAQ8F,MAAlD,SACC,cAACmJ,GAAD,CAAwBP,QAAYA,QAGtC,cAACpG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,cAACzH,EAAA,EAAD,CAAOb,QAAU,WAAWE,UAAaN,EAAQ8F,MAAjD,SACC,cAAC6J,GAAD,CAAsBjB,QAAYA,EAAUoB,QAAYF,EAAME,QACvDC,SAAaH,EAAMG,qB,0ICP1BxQ,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxC8I,UAAW,CACVyF,WAAYvO,EAAMG,QAAQ,GAC1BqO,YAAaxO,EAAMG,QAAQ,GAC3BsO,cAAezO,EAAMG,QAAQ,GAC7BuO,aAAc1O,EAAMG,QAAQ,IAE7B2Q,WAAY,CACXrC,cAAezO,EAAMG,QAAQ,IAE9B4Q,YAAa,CACZxC,WAAYvO,EAAMG,QAAQ,QAIb,SAAS6Q,KAAY,IAC3BzN,EAAO0N,cAAP1N,GAD0B,EAEZrC,mBAAS,UAFG,mBAE3BgQ,EAF2B,KAEtBC,EAFsB,OAGJjQ,mBAAS,MAHL,mBAG3BkQ,EAH2B,KAGlBC,EAHkB,OAIInQ,oBAAS,GAJb,mBAI3BoQ,EAJ2B,KAIdC,EAJc,OAKcrQ,oBAAS,GALvB,mBAK3BsQ,EAL2B,KAKTC,EALS,KAyBlC,OACC,eAAC7D,GAAD,WACC,cAACtI,GAAD,CAAc/C,KAASiP,EACjBjM,YAAc,wEACdC,WAbqB,WAC5BiM,GAAoB,GACpBF,GAAe,GACfJ,EAAOC,IAWA3L,SATmB,WAC1BgM,GAAoB,MASnB,eAAC5I,EAAA,EAAD,CAAMC,WAAS,EAAC4D,UAAY,MAAMgF,QAAU,aAA5C,UACC,cAAC7I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,eAAC0I,GAAA,EAAD,CAAMtR,MAAU6Q,EAAMU,YAAc,WAAW1O,SA1B3B,SAACvB,EAAOyP,GACnB,WAARF,GAAgC,WAAZE,GACvBK,GAAoB,GACpBJ,EAAWD,IAEXD,EAAOC,IAqBL,UACC,cAACS,GAAA,EAAD,CAAK7Q,KAAS,cAAC,KAAD,IAAe8Q,SAAaR,EAAcjR,MAAQ,WAChE,cAACwR,GAAA,EAAD,CAAK7Q,KAAS,cAAC,KAAD,IAAkBX,MAAQ,gBACxC,cAACwR,GAAA,EAAD,CAAK7Q,KAAS,cAAC,KAAD,IAA6BX,MAAQ,oBAGrD,eAACwI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAjB,UACW,WAARiI,GAAoB,cAACa,GAAD,CAAQxO,GAAOA,IAC3B,gBAAR2N,GAAyB,cAACc,GAAD,CAAazO,GAAOA,IACrC,eAAR2N,GAAwB,cAACe,GAAD,CAAY1O,GAAOA,aAOlD,SAASwO,GAAO5B,GACf,IAAM5P,EAAUT,KADM,EAEQoB,mBAAS,IAFjB,mBAEfmP,EAFe,KAEN6B,EAFM,OAGEhR,mBAAS,MAHX,mBAGfiH,EAHe,KAGTgK,EAHS,KAKtBnE,qBAAU,WACT,IAAM7F,EAAO2C,GAAYqF,EAAM5M,IAC/B4O,EAAQhK,KACN,IAoBH,OACC,eAACwB,GAAA,EAAD,CAAW9I,UAAcN,EAAQuI,UAAjC,UAEEX,GAA4B,YAAnBA,EAAK4C,KAAKtH,KACf,cAACoN,GAAD,CAAa7F,SAAa7C,EAAK4C,KAAKC,SAAWqF,QAAYA,EAC1DC,SAvBiB,SAAC/E,GACzB,IAAI6G,EAAa/B,EAAQgC,WAAW,SAAAC,GAAO,OAAIA,EAAQ/O,KAAOgI,EAAOhI,MACrE,IAAoB,IAAhB6O,EACHF,EAAW,GAAD,oBAAK7B,GAAL,CAAc,CACvB9M,GAAIgI,EAAOhI,GACXgI,OAAQA,EAAOA,eAEV,CACN,IAAIgH,EAAalC,EACjBkC,EAAWH,GAAY7G,OAASA,EAAOA,OACvC2G,EAAWK,OAcN,wBAGL,eAAC1J,EAAA,EAAD,CAAMC,WAAS,EAAC3I,QAAW,EAA3B,UACC,cAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,IACjB,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACC,cAAC7I,EAAD,CAAcC,MAAQ,SAASC,QAAY,WAf9CoI,QAAQC,IAAI0H,QAiBV,cAACxH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,UAKrB,SAAS+I,GAAY7B,GACpB,IAAM5P,EAAUT,KADW,EAEHoB,mBAAS,MAFN,mBAEpBiH,EAFoB,KAEdgK,EAFc,KAS3B,OALAnE,qBAAU,WACT,ITyQiCzK,ESzQ3B4E,GTyQ2B5E,ESzQD4M,EAAM5M,GT0QZ,8BAEfA,EAFe,0GAYd,CACZwH,KAAM,CACLyH,SAAU,CACT,CACCjP,GAAI,IACJgF,KAAM,QACNkK,QAAS,sBACT5H,QAAS,cACR,CACDtH,GAAI,IACJgF,KAAM,QACNkK,QAAS,eACT5H,QAAS,cACR,CACDtH,GAAI,IACJgF,KAAM,QACNkK,QAAS,cACT5H,QAAS,kBStSZsH,EAAQhK,KACN,IAGF,cAACwB,GAAA,EAAD,CAAW9I,UAAcN,EAAQuI,UAAjC,SACC,cAACD,EAAA,EAAD,CAAMC,WAAS,EAAC3I,QAAW,EAA3B,SACIgI,GAAQA,EAAK4C,KAAKyH,SAAS9P,KAAI,SAAAgQ,GACjC,OACC,cAAC7J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,GAAjB,SACC,eAAC0J,GAAA,EAAD,CAAMhS,QAAU,WAAhB,UACC,cAACiS,GAAA,EAAD,CACCnM,OAAW,cAAC,KAAD,IACXoM,OACC,cAACpR,EAAA,EAAD,UACC,cAAC,KAAD,MAGFmJ,MAAU8H,EAAQnK,KAClBuK,UAAaJ,EAAQ7H,QACrBhK,UAAcN,EAAQuQ,aAEvB,cAACiC,GAAA,EAAD,CAAalS,UAAcN,EAAQwQ,YAAnC,SACC,cAAChN,EAAD,CAAM1D,MAAUqS,EAAQD,wBAUjC,SAASR,GAAW9B,GACnB,IAAM5P,EAAUT,KADU,EAEIoB,mBAAS,IAFb,mBAEnBmP,EAFmB,KAEV6B,EAFU,OAGFhR,mBAAS,MAHP,mBAGnBiH,EAHmB,KAGbgK,EAHa,KAK1BnE,qBAAU,WACT,IAAM7F,EAAO2C,GAAYqF,EAAM5M,IAC/B4O,EAAQhK,KACN,IAiBH,OACC,cAACwB,GAAA,EAAD,CAAW9I,UAAcN,EAAQuI,UAAjC,SAEEX,GAA4B,YAAnBA,EAAK4C,KAAKtH,KACf,cAACoN,GAAD,CAAa7F,SAAa7C,EAAK4C,KAAKC,SAAWqF,QAAYA,EAC1DC,SApBiB,SAAC/E,GACzB,IAAI6G,EAAa/B,EAAQgC,WAAW,SAAAC,GAAO,OAAIA,EAAQ/O,IAAMgI,EAAOhI,MACpE,IAAoB,IAAhB6O,EACHF,EAAW,GAAD,oBAAK7B,GAAL,CAAc,CACvB9M,GAAIgI,EAAOhI,GACXgI,OAAQA,EAAOA,eAEV,CACN,IAAIgH,EAAalC,EACjBkC,EAAWH,GAAY7G,OAASA,EAAOA,OACvC2G,EAAWK,OAWP,0BCpMP,IAAMzS,GAAYC,KAAW,SAACC,GAAD,MAAY,CACxC4F,KAAM,CACLU,QAAS,QAEVmM,QAAS,CACRO,SAAU,EACVpE,SAAU,QAEXqE,aAAcjT,EAAMkT,OAAOC,YAGb,SAASC,KACvB,IAAM7S,EAAUT,KAEhB,OACC,cAAC8N,GAAD,UACC,sBAAK/M,UAAcN,EAAQqF,KAA3B,UACC,cAAC4E,GAAD,IACA,sBAAK3J,UAAaN,EAAQkS,QAA1B,UACC,qBAAK5R,UAAaN,EAAQ0S,eAC1B,cAAC,IAAD,CAAeI,SAAW,4BAA1B,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIhS,UAAcuN,KACtC,cAAC,IAAD,CAAOyE,KAAO,OAAO1F,SAAa,cAACmD,GAAD,mB,wBCjBnChR,G,OAAQwT,GAAe,CACzBvN,QAAS,CACLwN,QAAS,CACLC,MAAO,UACP/M,KAAM,UACNgN,KAAM,UACNC,aAAc,WAElBlN,UAAW,CACPgN,MAAO,UACP/M,KAAM,UACNgN,KAAM,UACNC,aAAc,WAElBpI,KAAM,CACFK,UAAW,UACXE,QAAS,WAEbwB,MAAO,CACHD,KAAM,UACNE,KAAM,UACNqG,KAAM,UACNlG,IAAK,WAETkF,OAAQ,CACJ3F,MAAO,cAMJ,SAAS4G,KAAO,IAAD,EACwB5S,mBAAS,CACvDkH,QAAQ,EACRC,MAAO,KACPE,KAAM,CACFhF,GAAI,KACJ2D,SAAU,KACVsB,KAAM,CACFvF,KAAM,SARQ,mBACnB8L,EADmB,KACAgF,EADA,KAa1B,OACI,cAACC,GAAA,EAAD,CAAehU,MAASA,GAAxB,SACI,cAAC0F,GAAqBuO,SAAtB,CAA+B5T,MAAS,CAAC0O,EAAmBgF,GAA5D,SACI,cAAC,IAAD,CAAeV,SAAW,sBAA1B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIhS,UAAcwF,KACtC,cAAC,IAAD,CAAOuM,OAAK,EAACC,KAAO,WAAWhS,UAAcwF,KAC7C,cAAC,IAAD,CAAOuM,OAAK,EAACC,KAAO,kBAAkBhS,UAAc8H,KACpD,cAAC,IAAD,CAAOiK,OAAK,EAACC,KAAO,mBAAmBhS,UAAcsI,KACrD,cAAC,IAAD,CAAOyJ,OAAK,EAACC,KAAO,SAAShS,UAAc6R,KAC3C,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAO,aAAa1F,SAAa,cAACmD,GAAD,eCzDlDxO,QACa,cAA7B0R,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCDR,IAAMC,GAAWC,yBAAe,CAC9BC,IAAKC,oIAAYC,SAAW,mDAC5BC,YAAa,YAITC,GAAS,IAAIC,eAAa,CAC9BC,KAAMR,GACNS,MAAO,IAAIC,kBAIbC,IAASC,OACP,cAAC,iBAAD,CAAgBN,OAAWA,GAA3B,SACE,cAACd,GAAD,MAEFqB,SAASC,eAAe,SDkGlB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBrN,MAAK,SAAAsN,GACFA,EAAaC,gBAEhBhN,OAAM,SAAA/D,GACHgE,QAAQhE,MAAMA,EAAMgR,c","file":"static/js/main.e97bd449.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(2, 0, 2),\r\n\t},\r\n}));\r\n\r\nexport function ActionButton({ value, onClick }) {\r\n\tconst classes = useStyles();\r\n\r\n\tlet handleClick = () => onClick();\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tfullWidth\r\n\t\t\tvariant = \"contained\"\r\n\t\t\tcolor = \"primary\"\r\n\t\t\tclassName = { classes.button }\r\n\t\t\tonClick = { () => handleClick() }>\r\n\t\t\t{ value }\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\n/* HOW TO USE?\r\n******************************\r\n<DropdownButton options = {[\r\n\t{\r\n\t\tvalue: \"Home\",\r\n\t\tto: \"/home\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"Recover password\",\r\n\t\tto: \"/forgot-password\",\r\n\t}\r\n]} />\r\n******************************\r\n*/\r\n\r\nexport function DropdownButton({ options, icon }) {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst history = useHistory();\r\n\r\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget);\r\n\tconst handleClose = () => setAnchorEl(null);\r\n\tconst handleMenuItemClick = (to) => history.push(to);\r\n\r\n\treturn (\r\n\t\t<div component = { Paper }>\r\n\t\t\t<IconButton color = \"inherit\"\r\n\t\t\t\t\t\taria-haspopup = \"true\"\r\n\t\t\t\t\t\tonClick = { handleClick }>\r\n\t\t\t\t{ icon }\r\n\t\t\t</IconButton>\r\n\t\t\t<Paper elevation = {0} style = {{ margin: '0px', border: \"1px solid black\" }} />\r\n\t\t\t<Menu\r\n\t\t\t\tkeepMounted\r\n\t\t\t\televation = {2}\r\n\t\t\t\tgetContentAnchorEl = {null}\r\n\t\t\t\tanchorOrigin = {{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin = {{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl = { anchorEl }\r\n\t\t\t\topen = { Boolean(anchorEl) }\r\n\t\t\t\tonClose = { handleClose }\r\n\t\t\t>\r\n\r\n\t\t\t\t{ options.map((option) => (\r\n\t\t\t\t\t<MenuItem onClick = { () => handleMenuItemClick(option.to) }>{ option.value }</MenuItem>\r\n\t\t\t\t)) }\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nexport function TextInput({ label, name, value, onChange }) {\r\n\tlet handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function PasswordInput({ label, name, value, onChange }) {\r\n\tlet handleChange = (event) => onChange(event);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\trequired fullWidth autoFocus\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\ttype = \"password\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t\tname = { name }\r\n\t\t\tvalue = { value }\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport function SelectInput({ label, name, choices }) {\r\n\treturn (\r\n\t\t<Select\r\n\t\t\trequired fullWidth select\r\n\t\t\tvariant = \"outlined\"\r\n\t\t\tmargin = \"normal\"\r\n\t\t\tid = { name }\r\n\t\t\tlabel = { label }\r\n\t\t>\r\n\t\t\t{ choices.map((choice) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem key = { choice } value = { choice }>{ choice }</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Select>\r\n\t)\r\n}","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport function TitleText({ value, fontSize }) {\r\n\treturn (\r\n\t\t<Typography noWrap\r\n\t\t\t\t\tcolor = 'inherit'\r\n\t\t\t\t\tvariant = 'inherit'\r\n\t\t\t\t\tstyle = {{ fontWeight: 'bold', fontSize: fontSize }}\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\nexport function Text({ value, align }) {\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\talign = { align }\r\n\t\t>\r\n\t\t\t{ value }\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport function TextWithLink({ value, align, to }) {\r\n\treturn (\r\n\t\t<Link component = { RouteLink } to = { to } underline = 'none'>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant = \"body2\"\r\n\t\t\t\talign = { align }>\r\n\t\t\t\t{ value }\r\n\t\t\t</Typography>\r\n\t\t</Link>\r\n\t);\r\n};","import gql from \"graphql-tag\";\r\n\r\nexport const SIGNIN_MUTATION = gql`\r\n     mutation Login($username: String!, $password: String!) {\r\n        login(username: $username, password: $password) {\r\n            token\r\n            user {\r\n                id\r\n                username\r\n                role {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n     }   \r\n     `;\r\n\r\n\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n     mutation signup($user: UserInput!) {\r\n          signup(user: $user) {\r\n               token\r\n          }\r\n     }\r\n     `;\r\n\r\nexport const REFRESHJWT_MUTATION = gql`\r\n     mutation refreshJWT {\r\n          refreshJWT {\r\n               token\r\n               user {\r\n                    id\r\n                    username\r\n                    role {\r\n                         name\r\n                    }\r\n               }\r\n          }\r\n     }\r\n     `;\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport function ErrorDialog({ error, open, onClose }) {\r\n\tconst handleClose = () => onClose();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog\r\n\t\t\t\topen = { open }\r\n\t\t\t\tonClose = { handleClose }\r\n\t\t\t>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ error }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { handleClose } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function LoadingDialog({ open }) {\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen = { open }\r\n\t\t\tPaperProps = {{\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: 'transparent',\r\n\t\t\t\t\tboxShadow: 'none'\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<CircularProgress size = { 60 }/>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport function SuccessDialog({ success, open }) {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ success }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function InformDialog({ open, information, onContinue, onCancel}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog open = { open } onClose = { onCancel }>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>{ information }</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick = { onCancel } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick = { onContinue } color = \"primary\" autoFocus>\r\n\t\t\t\t\t\tContinue\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\n\r\nexport const AuthorizationContext = React.createContext();\r\n\r\nexport const useAuthorization = () => {\r\n\tconst authorizationData = useContext(AuthorizationContext);\r\n\tconsole.log(authorizationData);\r\n\treturn {\r\n\t\t...authorizationData\r\n\t}\r\n}\r\n\r\n// function AuthenticationContainer({ children }) {\r\n// \tconst [signInStatus, setSignInStatus] = React.useState({\r\n// \t\tloading: 'true',\r\n// \t\terror: null,\r\n// \t\tdata: null,\r\n// \t});\r\n//\r\n// \tuseEffect(() => {\r\n//\r\n// \t})\r\n// }\r\n// const AuthContext = React.createContext()\r\n// function AuthProvider({children}) {\r\n// \tconst [state, setState] = React.useState({\r\n// \t\tstatus: 'pending',\r\n// \t\terror: null,\r\n// \t\tuser: null,\r\n// \t})\r\n// \tReact.useEffect(() => {\r\n// \t\tgetUser().then(\r\n// \t\t\tuser => setState({status: 'success', error: null, user}),\r\n// \t\t\terror => setState({status: 'error', error, user: null}),\r\n// \t\t)\r\n// \t}, [])\r\n//\r\n// \treturn (\r\n// \t\t<AuthContext.Provider value={state}>\r\n// \t\t\t{state.status === 'pending' ? (\r\n// \t\t\t\t'Loading...'\r\n// \t\t\t) : state.status === 'error' ? (\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\tOh no\r\n// \t\t\t\t\t<div>\r\n// \t\t\t\t\t\t<pre>{state.error.message}</pre>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : (\r\n// \t\t\t\tchildren\r\n// \t\t\t)}\r\n// \t\t</AuthContext.Provider>\r\n// \t)\r\n// }\r\n//\r\n// function useAuthState() {\r\n// \tconst state = React.useContext(AuthContext)\r\n// \tconst isPending = state.status === 'pending'\r\n// \tconst isError = state.status === 'error'\r\n// \tconst isSuccess = state.status === 'success'\r\n// \tconst isAuthenticated = state.user && isSuccess\r\n// \treturn {\r\n// \t\t...state,\r\n// \t\tisPending,\r\n// \t\tisError,\r\n// \t\tisSuccess,\r\n// \t\tisAuthenticated,\r\n// \t}\r\n// }\r\n//\r\n// function Footer() {\r\n// \treturn <p>This is an awesome app!</p>\r\n// }\r\n//\r\n// function Header() {\r\n// \tconst {user} = useAuthState()\r\n// \treturn <p>Hello {user.username}</p>\r\n// }\r\n//\r\n// function Content() {\r\n// \tconst {user} = useAuthState()\r\n// \treturn <p>I am so happy to have you here {user.username}.</p>\r\n// }\r\n//\r\n// function UnauthenticatedHeader() {\r\n// \treturn <p>Please login</p>\r\n// }\r\n//\r\n// function UnauthenticatedContent() {\r\n// \treturn <p>You must login to read the message</p>\r\n// }\r\n//\r\n// function UnauthenticatedApp() {\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<UnauthenticatedHeader />\r\n// \t\t\t<UnauthenticatedContent />\r\n// \t\t</>\r\n// \t)\r\n// }\r\n//\r\n// function AuthenticatedApp() {\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<Header />\r\n// \t\t\t<Content />\r\n// \t\t\t<Footer />\r\n// \t\t</>\r\n// \t)\r\n// }\r\n//\r\n// function Home() {\r\n// \tconst {user} = useAuthState()\r\n// \treturn user ? <AuthenticatedApp /> : <UnauthenticatedApp />\r\n// }\r\n//\r\n// function App() {\r\n// \treturn (\r\n// \t\t<AuthProvider>\r\n// \t\t\t<div>\r\n// \t\t\t\t<h1>Hello there</h1>\r\n// \t\t\t\t<p>Welcome to my app...</p>\r\n// \t\t\t\t<Home />\r\n// \t\t\t</div>\r\n// \t\t</AuthProvider>\r\n// \t)\r\n// }\r\n//\r\n// export default App\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNIN_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog, SuccessDialog } from \"../../presentational-components/Dialog\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function LandingPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n    const [signInInfo, setSignInInfo] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const [signIn, { loading }] = useMutation(SIGNIN_MUTATION);\r\n\r\n    const handleSignInChange = (prop) => (event) => {\r\n        event.preventDefault();\r\n        setSignInInfo({ ...signInInfo, [prop]: event.target.value });\r\n    }\r\n    const handleSignInClick = async () => {\r\n        signIn({\r\n                variables: {\r\n                    username: signInInfo.username,\r\n                    password: signInInfo.password\r\n                },\r\n                errorPolicy: 'none',\r\n        })\r\n        .then(data => {\r\n            setAuthorization({\r\n                status: true,\r\n                token: data.data.login.token,\r\n                user: {\r\n                    id: data.data.login.user.id,\r\n                    username: data.data.login.user.username,\r\n                    role: {\r\n                        name: data.data.login.user.role.name,\r\n                    }\r\n                }\r\n            });\r\n            history.push(\"/tests/\");\r\n        })\r\n        .catch(error => {\r\n            setError(true);\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { loading && <LoadingDialog open = { loading } /> }\r\n            { error && <ErrorDialog error = 'Invalid username/password. Please try again!'\r\n                                    open = { error } onClose = { setError(false) } /> }\r\n            <Grid container component = \"main\" className = { classes.root }>\r\n                <CssBaseline />\r\n                <Grid item xs = {false} sm = {4} md = {8}>\r\n                    {/* PAGE INTRODUCTION */}\r\n                </Grid>\r\n                {/* REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED */}\r\n                {/* REPLACE WITH <SignIn /> COMPONENT*/}\r\n                <Grid item xs = {12} sm = {8} md = {4} component = {Paper}>\r\n                    <div className = { classes.paper }>\r\n                        <Avatar className = { classes.avatar }>\r\n                            <LockOutlinedIcon/>\r\n                        </Avatar>\r\n                        <TitleText value = \"Sign In\" fontSize = \"18px\" />\r\n                        <form className = { classes.form }>\r\n                            <TextInput label = \"Username\" name = \"username\" value = { signInInfo['username'] }\r\n                                       onChange = { handleSignInChange('username') } />\r\n\r\n                            <PasswordInput label = \"Password\" name = \"password\" value = { signInInfo['password'] }\r\n                                           onChange = { handleSignInChange('password') } />\r\n\r\n                            <ActionButton value = \"Sign In\"\r\n                                          onClick = { () => handleSignInClick() } />\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Forgot password!\"\r\n                                        align = \"left\"\r\n                                        to = \"/forgot-password\" />\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <TextWithLink\r\n                                        value = \"Don't have account?\"\r\n                                        align = \"right\"\r\n                                        to = \"/create-account\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                {/* END REMOVE */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Text, TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { PasswordInput, TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\nimport { signUp } from \"../../service-component/API/authorization\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SIGNIN_MUTATION, SIGNUP_MUTATION } from \"../../service-component/API/mutation\";\r\nimport { ErrorDialog, LoadingDialog } from \"../../presentational-components/Dialog\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function SignUpPage() {\r\n\t// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst [signUpInfo, setSignUpInfo] = useState({\r\n\t\tname: '',\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: '',\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\tconst [signUp, { loading }] = useMutation(SIGNUP_MUTATION);\r\n\r\n\tconst handleSignUpChange = (prop) => (event) => setSignUpInfo({ ...signUpInfo, [prop]: event.target.value });\r\n\tconst handleSignUpClick = () => {\r\n\t\tsignUp({\r\n\t\t\tvariables: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tusername: signUpInfo.username,\r\n\t\t\t\t\tpassword: signUpInfo.password,\r\n\t\t\t\t\tname: signUpInfo.name,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terrorPolicy: 'none',\r\n\t\t}).then(data => history.push(\"/\")\r\n\t\t).catch(error => {\r\n\t\t\tsetError(true);\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\t// END REMOVE\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ loading && <LoadingDialog open = { loading } /> }\r\n\t\t\t{ error && <ErrorDialog error = 'Please try again!'\r\n\t\t\t\t\t\t\t\t\topen = { error } onClose = { setError(false) } /> }\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t{/* REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED */}\r\n\t\t\t\t{/* REPLACE WITH <SignUp /> COMPONENT*/}\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Create Account\" fontSize = \"18px\"/>\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Full Name\" name = \"name\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['name'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('name') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Username\" name = \"username\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['username'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('username') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Password\" name = \"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['password'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('password') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<PasswordInput label = \"Confirm password\" name = \"confirm-password\"\r\n\t\t\t\t\t\t\t\t\t\t\t   value = { signUpInfo['confirmPassword'] }\r\n\t\t\t\t\t\t\t\t\t\t\t   onChange = { handleSignUpChange('confirmPassword') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Sign Up\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleSignUpClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Oh! I already have account\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* END REMOVE */}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React, { useState } from 'react';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Text, TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport { TextInput } from \"../../presentational-components/Input\";\r\nimport { ActionButton } from \"../../presentational-components/Button\";\r\n\r\nimport { forgotPassword } from \"../../service-component/API/authorization\";\r\n\r\n// REMOVE IF BACKEND FOR AUTHENTICATION IS FINISHED\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n// END REMOVE\r\n\r\nexport default function ForgotPasswordPage() {\r\n\tconst classes = useStyles();\r\n\tconst [forgotPasswordInfo, setForgotPasswordInfo] = useState({\r\n\t\temail: '',\r\n\t});\r\n\r\n\tconst handleForgotPasswordChange = (prop) => (event) => setForgotPasswordInfo({ ...forgotPasswordInfo, [prop]: event.target.value });\r\n\tconst handleForgotPasswordClick = () => {\r\n\t\tforgotPassword(forgotPasswordInfo);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container maxWidth = \"xs\">\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<div className = { classes.paper }>\r\n\t\t\t\t\t<Avatar className = { classes.avatar }>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TitleText value = \"Recover password\" fontSize = '18px' />\r\n\t\t\t\t\t<form className = { classes.form }>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<TextInput label = \"Email\" name = \"email\"\r\n\t\t\t\t\t\t\t\t\t\t   value = { forgotPasswordInfo['email'] }\r\n\t\t\t\t\t\t\t\t\t\t   onChange = { handleForgotPasswordChange('email') } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} sm = {12}>\r\n\t\t\t\t\t\t\t\t<ActionButton value = \"Recover password\"\r\n\t\t\t\t\t\t\t\t\t\t\t  onClick = { () => handleForgotPasswordClick() } />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t<TextWithLink\r\n\t\t\t\t\t\t\t\t\tvalue = \"Back to home\"\r\n\t\t\t\t\t\t\t\t\talign = \"right\"\r\n\t\t\t\t\t\t\t\t\tto = \"/\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport { TextWithLink, TitleText } from \"./Text\";\r\nimport { DropdownButton } from \"./Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolBar: {\r\n\t\tbackgroundColor: theme.palette.common.white,\r\n\t\tcolor: theme.palette.common.black,\r\n\t\tjustifyContent: 'space-between',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\tappBar: {\r\n\t}\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n\tconst classes = useStyles();\r\n\tconst options = [\r\n\t\t{\r\n\t\t\tvalue: \"Home\",\r\n\t\t\tto: \"/home\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"Recover password\",\r\n\t\t\tto: \"/forgot-password\",\r\n\t\t},\r\n\t];\r\n\treturn (\r\n\t\t<AppBar elevation = {2} className = { classes.appBar }>\r\n\t\t\t<Toolbar component = \"nav\" variant = \"dense\" className = { classes.toolBar }>\r\n\t\t\t\t<TitleText value = \"IELTS Training\" component = \"h1\"/>\r\n\t\t\t\t<DropdownButton options = { options }\r\n\t\t\t\t\t\t\t\ticon = { <AccountCircleIcon /> } />\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\n","\r\n/*\t****** QUERY ALL TEST\r\nreturn LIST OF TEST;\r\n\teach element has { id, title, type, created, status }\r\n\r\n**************************** */\r\nexport function allTest() {\r\n\treturn [\r\n\t\tcreateData('1','History of Homo Sapiens', 'Reading', '17/08/2021', 'todo'),\r\n\t\tcreateData('2','Evolution of hours', 'Listening', '17/08/2021', 'done'),\r\n\t\tcreateData('3','How to build a house?', 'Reading', '17/08/2021', 'done'),\r\n\t\tcreateData('4','How to raise child?', 'Listening', '17/08/2021', 'todo'),\r\n\t\tcreateData('5','History of Homo Sapiens', 'Reading', '17/08/2021', 'done'),\r\n\t\tcreateData('6','Evolution of hours', 'Reading', '17/08/2021', 'done'),\r\n\t\tcreateData('7','How to build a house?', 'Reading', '17/08/2021', 'done'),\r\n\t\tcreateData('8','How to raise child?', 'Listening', '17/08/2021', 'todo'),\r\n\t\tcreateData('9','History of Homo Sapiens', 'Reading', '17/08/2021', 'done'),\r\n\t\tcreateData('10','Evolution of hours', 'Listening', '17/08/2021', 'done'),\r\n\t\tcreateData('11','How to build a house?', 'Listening', '17/08/2021', 'done'),\r\n\t\tcreateData('12','How to raise child?', 'Reading', '17/08/2021', 'todo'),\r\n\t\tcreateData('13','History of Homo Sapiens', 'Listening', '17/08/2021', 'done'),\r\n\t\tcreateData('14','Evolution of hours', 'Reading', '17/08/2021', 'todo'),\r\n\t\tcreateData('15','How to build a house?', 'Listening', '17/08/2021', 'done'),\r\n\t\tcreateData('16','How to raise child?', 'Reading', '17/08/2021', 'todo'),\r\n\t];\r\n}\r\n\r\nfunction createData(id, title, type, created, status) {\r\n\treturn { id, title, type, created, status };\r\n}\r\n\r\n/*\t****** QUERY TEST :id\r\n\r\n\r\n**************************** */\r\nexport function getTestById(id) {\r\n\tconst TESTBYID_QUERY = `\r\n\t{\r\n\t\ttest(id: ${id}) {\r\n\t\t\tid\r\n\t\t\ttype\r\n\t\t\tsections {\r\n\t\t\t\tid\r\n\t\t\t\tnumber\r\n\t\t\t\ttype\r\n\t\t\t\tstatementText\r\n\t\t\t\tstatementAudio\r\n\t\t\t\tquestionList {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tnumber\r\n\t\t\t\t\tintroText\r\n\t\t\t\t\tquestions {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tnumber\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\tstatementText\r\n\t\t\t\t\t\tanswer {\r\n\t\t\t\t\t\t\ttext\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}`;\r\n\r\n\tconst data = {\r\n\t\ttest: {\r\n\t\t\tid: '1',\r\n\t\t\ttype: 'reading',\r\n\t\t\tsections: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: '1',\r\n\t\t\t\t\tnumber: '1',\r\n\t\t\t\t\ttype: 'TFNG',\r\n\t\t\t\t\tstatementText: 'Prof Zeman tells the BBC: \"People who have contacted us say they are really delighted that this has been recognised and has been given a name, because they have been trying to explain to people for years that there is this oddity that they find hard to convey to others.\" How we imagine is clearly very subjective - one person\\'s vivid scene could be another\\'s grainy picture. But Prof Zeman is certain that aphantasia is real. People often report being able to dream in pictures, and there have been reported cases of people losing the ability to think in images after a brain injury.',\r\n\t\t\t\t\tstatementAudio: '',\r\n\t\t\t\t\tquestionList: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tid: '1', number: '1', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '1', number: '1', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '2', number: '2', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '3', number: '3', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '4', number: '4', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '5', number: '5', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '2', number: '2', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '6', number: '6', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '7', number: '7', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '8', number: '8', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '3', number: '3', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '9', number: '9', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. He is the boy', 'B. She is a girl', 'C. Hahaa'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '10', number: '10', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '11', number: '11', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},{\r\n\t\t\t\t\tid: '2',\r\n\t\t\t\t\tnumber: '2',\r\n\t\t\t\t\ttype: 'TFNG',\r\n\t\t\t\t\tstatementText: 'Prof Zeman tells the BBC: \"People who have contacted us say they are really delighted that this has been recognised and has been given a name, because they have been trying to explain to people for years that there is this oddity that they find hard to convey to others.\" How we imagine is clearly very subjective - one person\\'s vivid scene could be another\\'s grainy picture. But Prof Zeman is certain that aphantasia is real. People often report being able to dream in pictures, and there have been reported cases of people losing the ability to think in images after a brain injury.',\r\n\t\t\t\t\tstatementAudio: '',\r\n\t\t\t\t\tquestionList: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tid: '1', number: '1', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '12', number: '12', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '13', number: '13', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '14', number: '14', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '15', number: '15', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '16', number: '16', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '2', number: '2', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '17', number: '17', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '18', number: '18', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '19', number: '19', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '3', number: '3', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '20', number: '20', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. He is the boy', 'B. She is a girl', 'C. Hahaa'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '21', number: '21', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '22', number: '22', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},{\r\n\t\t\t\t\tid: '1',\r\n\t\t\t\t\tnumber: '1',\r\n\t\t\t\t\ttype: 'TFNG',\r\n\t\t\t\t\tstatementText: 'Prof Zeman tells the BBC: \"People who have contacted us say they are really delighted that this has been recognised and has been given a name, because they have been trying to explain to people for years that there is this oddity that they find hard to convey to others.\" How we imagine is clearly very subjective - one person\\'s vivid scene could be another\\'s grainy picture. But Prof Zeman is certain that aphantasia is real. People often report being able to dream in pictures, and there have been reported cases of people losing the ability to think in images after a brain injury.',\r\n\t\t\t\t\tstatementAudio: '',\r\n\t\t\t\t\tquestionList: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tid: '1', number: '1', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '23', number: '23', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '24', number: '24', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '25', number: '25', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '26', number: '26', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '27', number: '27', type: 'TFNG',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Aphantasia is a condition, which describes people, for whom it is hard to visualise mental images.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '2', number: '2', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '28', number: '28', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '29', number: '29', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A', 'B', 'C'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '30', number: '30', type: 'FITB',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['True', 'False', 'Not Given'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tid: '3', number: '3', introText:\r\n\t\t\t\t\t\t\t\t'Do the following statements agree with the information in the IELTS reading text?\\n' + '\\n' +\r\n\t\t\t\t\t\t\t\t'In boxes 1-5 on your answer sheet, write\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'TRUE if the statement agrees with the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'FALSE if the statement contradicts the information\\n' +\r\n\t\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t\t'NOT GIVEN if there is no information on this',\r\n\t\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '31', number: '31', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. He is the boy', 'B. She is a girl', 'C. Hahaa'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '32', number: '32', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '33', number: '33', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '34', number: '34', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. He is the boy', 'B. She is a girl', 'C. Hahaa'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '35', number: '35', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '36', number: '36', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '37', number: '37', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Only a small fraction of people have imagination as ___________________ as Lauren does.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. He is the boy', 'B. She is a girl', 'C. Hahaa'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: '38', number: '38', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'Hyperphantasia is ___________________ to aphantasia.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '39', number: '39', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\tid: '40', number: '40', type: 'MC',\r\n\t\t\t\t\t\t\t\t\tstatementText: 'There are a lot of subjectivity in comparing people\\'s imagination - somebody\\'s vivid scene could be another person\\'s ___________________.',\r\n\t\t\t\t\t\t\t\t\tanswer: ['A. askhdasd', 'B. asdasdasd', 'C. asdasddasdas', 'D. asdasdasddas', 'E. qweqweqweqweq'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t};\r\n\r\n\treturn data;\r\n}\r\n\r\n/*\t****** QUERY TEST :id\r\n\r\n\r\n**************************** */\r\nexport function getCommentByTestId(id) {\r\n\tconst COMMENTBYTESTID_QUERY = `\r\n\t{\r\n\t\ttest(id: ${id}) {\r\n\t\t\tcomments {\r\n\t\t\t\tid\r\n\t\t\t\tuser\r\n\t\t\t\tcontent\r\n\t\t\t\tcreated\r\n\t\t\t}\r\n\t\t}\r\n\t}`\r\n\r\n\tconst data = {\r\n\t\ttest: {\r\n\t\t\tcomments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: '1',\r\n\t\t\t\t\tuser: 'user1',\r\n\t\t\t\t\tcontent: 'This test is great!',\r\n\t\t\t\t\tcreated: '1622800555'\r\n\t\t\t\t},{\r\n\t\t\t\t\tid: '2',\r\n\t\t\t\t\tuser: 'user2',\r\n\t\t\t\t\tcontent: 'I\\'ve got 8.5',\r\n\t\t\t\t\tcreated: '1622800000'\r\n\t\t\t\t},{\r\n\t\t\t\t\tid: '3',\r\n\t\t\t\t\tuser: 'user3',\r\n\t\t\t\t\tcontent: 'Hello guys.',\r\n\t\t\t\t\tcreated: '1522800000',\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tchip: {\r\n\t\tmaxHeight: '18px',\r\n\t\tfontSize: '11px',\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n}));\r\n\r\nexport function ListeningChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Listening\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.listening }}/>\r\n\t)\r\n}\r\n\r\nexport function ReadingChip() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<Chip size = \"small\" label = \"Reading\" className = { classes.chip }\r\n\t\t\t  style = {{ backgroundColor: theme.palette.chip.reading }}/>\r\n\t)\r\n}","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\n\r\nexport function DoneIcon() {\r\n\treturn (\r\n\t\t<CheckCircleIcon fontSize = 'small' />\r\n\t);\r\n}\r\n\r\n","import React from \"react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport { allTest } from \"../../service-component/API/test\";\r\nimport { ListeningChip, ReadingChip } from \"../../presentational-components/Chip\";\r\nimport { DoneIcon } from \"../../presentational-components/Icon\";\r\nimport { TextWithLink, TitleText } from \"../../presentational-components/Text\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcellWithIcon: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tflexWrap: 'wrap',\r\n\t}\r\n}));\r\n\r\nexport default function TestTable() {\r\n\tconst classes = useStyles();\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tid: 'id',\r\n\t\t\tlabel: '#',\r\n\t\t\talign: 'right',\r\n\t\t\twidth: '5%',\r\n\t\t\tcompareFn: (a, b, direction) => {\r\n\t\t\t\tconst res = a.id - b.id;\r\n\t\t\t\treturn direction === 'asc' ? res : -res;\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\tid: 'title',\r\n\t\t\tlabel: 'Title',\r\n\t\t\talign: 'left',\r\n\t\t\twidth: '60%',\r\n\t\t\tcompareFn: (a, b, direction) => {\r\n\t\t\t\tconst res = a.title - b.title;\r\n\t\t\t\treturn direction === 'asc' ? res : -res;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tid: 'type',\r\n\t\t\tlabel: 'Type',\r\n\t\t\talign: 'left',\r\n\t\t\twidth: '5%',\r\n\t\t\tcompareFn: (a, b, direction) => {\r\n\t\t\t\tconst res = a.type > b.type ? 1 : -1;\r\n\t\t\t\treturn direction === 'asc' ? res : -res;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tid: 'created',\r\n\t\t\tlabel: 'Date Created',\r\n\t\t\talign: 'right',\r\n\t\t\twidth: '5%',\r\n\t\t\tcompareFn: (a, b, direction) => {\r\n\t\t\t\tconst res = a.created > b.created ? 1 : -1;\r\n\t\t\t\treturn direction === 'asc' ? res : -res;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tid: 'status',\r\n\t\t\tlabel: 'Status',\r\n\t\t\talign: 'right',\r\n\t\t\twidth: '5%',\r\n\t\t\tcompareFn: (a, b, direction) => {\r\n\t\t\t\tconst res = a.status.toUpperCase() > b.status.toUpperCase() ? 1 : -1;\r\n\t\t\t\treturn direction === 'asc' ? res : -res;\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\tconst test = allTest();\r\n\r\n\treturn (\r\n\t\t<Table size = \"small\" stickyHeader>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t{ columns.map((column) => (\r\n\t\t\t\t\t\t\t<TCell align = { column.align }>\r\n\t\t\t\t\t\t\t\t<TitleText value = { column.label }/>\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{ test.map((row) => (\r\n\t\t\t\t\t\t<TRow hover key = { row.id } >\r\n\t\t\t\t\t\t\t<TCell align = 'right'>\r\n\t\t\t\t\t\t\t\t{ row.id }\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t\t<TCell align = 'left'\r\n\t\t\t\t\t\t\t\t   style = {{ width: '60%' }}>\r\n\t\t\t\t\t\t\t\t<TextWithLink value = { row.title } to = {`/${row.id}`}/>\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t\t<TCell align = 'left'>\r\n\t\t\t\t\t\t\t\t{ (row.type.toLowerCase() === 'listening') ? <ListeningChip /> : <ReadingChip /> }\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t\t<TCell align = \"right\">\r\n\t\t\t\t\t\t\t\t{ row.created }\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t\t<TCell align = 'right'\r\n\t\t\t\t\t\t\t\t   className = { classes.cellWithIcon }>\r\n\t\t\t\t\t\t\t\t{ (row.status.toLowerCase() === 'done') && <DoneIcon /> }\r\n\t\t\t\t\t\t\t</TCell>\r\n\t\t\t\t\t\t</TRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t);\r\n}\r\n\r\nconst TCell = withStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\theight: 25,\r\n\t\t\tborderBottom: \"none\",\r\n\t\t},\r\n\t\thead: {\r\n\t\t\tbackgroundColor: theme.palette.table.head,\r\n\t\t\tcolor: theme.palette.table.text,\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\tfontSize: 14,\r\n\t\t},\r\n\t}))(TableCell);\r\nconst TRow = withStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\t'&:nth-of-type(odd)': {\r\n\t\t\t\tbackgroundColor: theme.palette.table.odd,\r\n\t\t\t},\r\n\t\t},\r\n\t}))(TableRow);","import React, { useContext, useEffect } from \"react\";\r\nimport { AuthorizationContext } from \"../../service-component/Context/authorization\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REFRESHJWT_MUTATION } from \"../../service-component/API/mutation\";\r\n\r\nexport function AuthorizationContainer({ children }) {\r\n\tconst [authorization, setAuthorization] = useContext(AuthorizationContext);\r\n\tconst [refreshJWT, { loading }] = useMutation(REFRESHJWT_MUTATION);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('refreshJWT called');\r\n\t\tif (authorization.token != null) {\r\n\t\t\tconst tokenPayload = authorization.token.split('.')[1];\r\n\t\t\tconst tokenExpiration = new Date(tokenPayload);\r\n\t\t\tconst now = new Date();\r\n\t\t\tif (tokenExpiration.getTime() - now.getTime() < 1000 * 60 * 5) {\r\n\t\t\t\trefreshJWT()\r\n\t\t\t\t\t.then(data => console.log(data))\r\n\t\t\t\t\t.catch(error => console.log(error));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\trefreshJWT()\r\n\t\t\t\t.then(data => console.log(data))\r\n\t\t\t\t.catch(error => console.log(error));\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tauthorization.status\r\n\t\t\t\t\t? children\r\n\t\t\t\t\t: <Redirect to = '/' />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TestTable from \"../../../container-components/Test/TestTable\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React, { useEffect } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { AuthorizationContainer } from \"../../../container-components/Authorization/AuthorizationContainer\";\r\nimport { useAuthorization } from \"../../../service-component/Context/authorization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t},\r\n\ttableHead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n}));\r\n\r\nexport default function AllTestPage() {\r\n\tconst classes = useStyles();\r\n\tconst authorization = useAuthorization();\r\n\r\n\treturn (\r\n\t\t<AuthorizationContainer>\r\n\t\t\t<Container className = {classes.container}>\r\n\t\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t\t<Grid item xs = {8}>\r\n\t\t\t\t\t\t<Paper elevation = {0}>\r\n\t\t\t\t\t\t\t<TestTable />\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t\t<Paper className = {classes.paper}>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</AuthorizationContainer>\r\n\t)\r\n}","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Text, TitleText } from \"../../presentational-components/Text\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsection: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tpadding: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tquestionGroup: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tquestion: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tpadding: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function ReadingPassage({ section, passage }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {1.5} className = { classes.section }>\r\n\t\t\t<div className = { classes.title }>\r\n\t\t\t\t<TitleText value = {`Section ${section}`} fontSize = { '18px' } />\r\n\t\t\t</div>\r\n\t\t\t<Text value = { passage }/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport function ReadingSectionQuestion({ section }) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ReadingPassage section = { section.number } passage = { section.statementText } />\r\n\t\t\t<QuestionGroup questionList = { section.questionList } />\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function QuestionGroup({ questionList }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(questionList.map(question => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0} className = { classes.questionGroup }>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${question.number}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Text value = { question.introText }/>\r\n\t\t\t\t\t\t\t<Question questions = { question.questions } />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Question({ questions }) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{ questions.map((question) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(question.type === 'TFNG')\r\n\t\t\t\t\t\t? <TFQuestion number = { question.number } statementText = { question.statementText } />\r\n\t\t\t\t\t\t: (question.type === 'FITB')\r\n\t\t\t\t\t\t\t? <FITBQuestion number = { question.number } statementText = { question.statementText } />\r\n\t\t\t\t\t\t\t: <MCQuestion number = { question.number } statementText = { question.statementText } possibleAnswer = { question.answer} />\r\n\t\t\t\t)\r\n\t\t\t}) }\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport function TFQuestion({ number, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ number }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport function MCQuestion({ number, statementText, possibleAnswer }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ number }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t\t<Box border = {0} style = {{ marginLeft: '25px'}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tpossibleAnswer.map(answer => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline' style = {{ marginLeft: '10px', marginRight: '25px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t{ answer.substring(0, 1) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t\t\t\t\t\t{ answer.substring(3) }\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n};\r\nexport function FITBQuestion({ number, statementText }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.question }>\r\n\t\t\t<Typography display = 'inline' style = {{ marginRight: '25px', fontWeight: 'bold'}}>\r\n\t\t\t\t{ number }\r\n\t\t\t</Typography>\r\n\t\t\t<Typography display = 'inline'>\r\n\t\t\t\t{ statementText }\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { TitleText } from \"../../presentational-components/Text\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tmarginBottom: theme.spacing(4),\r\n\t},\r\n\tanswer: {\r\n\t\tmargin: theme.spacing(1),\r\n\t}\r\n}));\r\n\r\nexport function ReadingSectionAnswer(props) {\r\n\treturn (\r\n\t\t<AnswerGroup questionList = { props.section.questionList } answers = { props.answers }\r\n\t\t\t\t\t onAnswer = { props.onAnswer }/>\r\n\t)\r\n}\r\nexport function AnswerGroup(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\t(props.questionList.map(question => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Box border = {0}>\r\n\t\t\t\t\t\t\t<div className = { classes.title }>\r\n\t\t\t\t\t\t\t\t<TitleText value = {`Group ${question.number}`} fontSize = { '16px' } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Answer questions = { question.questions } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\tonAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nexport function Answer(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box border = {0} className = { classes.answer }>\r\n\t\t\t{ props.questions.map(question => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(question.type === 'TFNG')\r\n\t\t\t\t\t\t? <TFAnswer id = { question.id } number = { question.number } possibleAnswer = { question.answer }\r\n\t\t\t\t\t\t\t\t\tanswers = { props.answers } onAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t\t: (question.type === 'FITB')\r\n\t\t\t\t\t\t\t? <FITBAnswer id = { question.id } number = { question.number } onAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t\t\t: <MCAnswer id = { question.id } number = { question.number } possibleAnswer = { question.answer }\r\n\t\t\t\t\t\t\t\t\t\tonAnswer = { props.onAnswer } />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport function TFAnswer(props) {\r\n\tconst theme = useTheme();\r\n\tconst [answer, setAnswer] = useState({\r\n\t\tid: props.id,\r\n\t\tanswer: ' '\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAnswer({\r\n\t\t\tid: props.id,\r\n\t\t\tanswer: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// this will update answer at TestPage component every time user change their answer.\r\n\tuseEffect(() => {\r\n\t\tprops.onAnswer(answer);\r\n\t}, [answer.answer]);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tselect fullWidth\r\n\t\t\tsize = 'small'\r\n\t\t\tvariant = 'outlined'\r\n\t\t\tid = { props.number }\r\n\t\t\tlabel = { `Question ${props.number}`}\r\n\t\t\tvalue = { answer.answer }\r\n\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t>\r\n\t\t\t{ props.possibleAnswer.map((option) => (\r\n\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t{ option }\r\n\t\t\t\t</MenuItem>\r\n\t\t\t)) }\r\n\t\t</TextField>\r\n\t)\r\n}\r\nexport function MCAnswer(props) {\r\n\tconst theme = useTheme();\r\n\r\n\tconst [answer, setAnswer] = useState({\r\n\t\tid: props.id,\r\n\t\tanswer: ' '\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAnswer({\r\n\t\t\tid: props.id,\r\n\t\t\tanswer: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// this will update answer at TestPage component every time user change their answer.\r\n\tuseEffect(() => {\r\n\t\tprops.onAnswer(answer);\r\n\t}, [answer.answer]);\r\n\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tselect fullWidth\r\n\t\t\tsize = 'small'\r\n\t\t\tvariant = 'outlined'\r\n\t\t\tid = { props.number }\r\n\t\t\tlabel = { `Question ${props.number}`}\r\n\t\t\tvalue = { answer.answer }\r\n\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t>\r\n\t\t\t{ props.possibleAnswer.map((option) => (\r\n\t\t\t\t<MenuItem key = { option } value = { option }>\r\n\t\t\t\t\t{ option.substring(0, 1) }\r\n\t\t\t\t</MenuItem>\r\n\t\t\t)) }\r\n\t\t</TextField>\r\n\t)\r\n};\r\nexport function FITBAnswer(props) {\r\n\tconst theme = useTheme();\r\n\r\n\tconst [answer, setAnswer] = useState({\r\n\t\tid: props.id,\r\n\t\tanswer: ' ',\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetAnswer({\r\n\t\t\tid: props.id,\r\n\t\t\tanswer: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// this will update answer at TestPage component every time user change their answer.\r\n\tuseEffect(() => {\r\n\t\tprops.onAnswer(answer);\r\n\t}, [answer.answer]);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tfullWidth\r\n\t\t\tsize = 'small'\r\n\t\t\tvariant = 'outlined'\r\n\t\t\tid = { props.number }\r\n\t\t\tlabel = { `Question ${props.number}`}\r\n\t\t\tvalue = { answer.answer }\r\n\t\t\tstyle = {{ marginBottom: theme.spacing(4), }}\r\n\t\t\tonChange = { (event) => handleChange(event) }\r\n\t\t>\r\n\t\t</TextField>\r\n\t);\r\n};","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ReadingSectionQuestion } from \"./Question\";\r\nimport { ReadingSectionAnswer } from \"./Answer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t\theight: 'auto'\r\n\t}\r\n}));\r\n\r\nexport function ReadingTest(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t(props.sections.map(section => (\r\n\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t<Grid item xs = {9}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = { classes.paper }>\r\n\t\t\t\t\t\t<ReadingSectionQuestion section = { section } />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t<Paper variant = 'outlined' className = {classes.paper}>\r\n\t\t\t\t\t\t<ReadingSectionAnswer section = { section } answers = { props.answers }\r\n\t\t\t\t\t\t\t\t\t\t\t  onAnswer = { props.onAnswer }/>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)))\r\n\t)\r\n}\r\n\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { getCommentByTestId, getTestById } from \"../../../service-component/API/test\";\r\nimport { ActionButton } from \"../../../presentational-components/Button\";\r\nimport { ReadingTest } from \"../../../container-components/Test/Test\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Text } from \"../../../presentational-components/Text\";\r\nimport { AuthorizationContext } from \"../../../service-component/Context/authorization\";\r\nimport { AuthorizationContainer } from \"../../../container-components/Authorization/AuthorizationContainer\";\r\nimport { InformDialog } from \"../../../presentational-components/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingLeft: theme.spacing(8),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t\tpaddingRight: theme.spacing(8)\r\n\t},\r\n\tcardHeader: {\r\n\t\tpaddingBottom: theme.spacing(1),\r\n\t},\r\n\tcardContent: {\r\n\t\tpaddingTop: theme.spacing(0),\r\n\t}\r\n}));\r\n\r\nexport default function TestPage() {\r\n\tconst { id } = useParams();\r\n\tconst [tab, setTab] = useState('doTest');\r\n\tconst [nextTab, setNextTab] = useState(null);\r\n\tconst [testDisable, setTestDisable] = useState(false);\r\n\tconst [informDialogOpen, setInformDialogOpen] = useState(false);\r\n\r\n\tconst handleTabChange = (event, nextTab) => {\r\n\t\tif (tab === 'doTest' && nextTab !== 'doTest') {\r\n\t\t\tsetInformDialogOpen(true);\r\n\t\t\tsetNextTab(nextTab);\r\n\t\t} else {\r\n\t\t\tsetTab(nextTab);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogContinue = () => {\r\n\t\tsetInformDialogOpen(false);\r\n\t\tsetTestDisable(true);\r\n\t\tsetTab(nextTab);\r\n\t}\r\n\tconst handleDialogCancel = () => {\r\n\t\tsetInformDialogOpen(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthorizationContainer>\r\n\t\t\t<InformDialog open = { informDialogOpen }\r\n\t\t\t\t\t\t\t  information = \"Test submission will be disabled if proceed. Do you want to continue?\"\r\n\t\t\t\t\t\t\t  onContinue = { handleDialogContinue }\r\n\t\t\t\t\t\t\t  onCancel = { handleDialogCancel } />\r\n\t\t\t<Grid container direction = 'row' justify = 'flex-start'>\r\n\t\t\t\t<Grid item xs = {1}>\r\n\t\t\t\t\t<Tabs value = { tab } orientation = \"vertical\" onChange = { handleTabChange }>\r\n\t\t\t\t\t\t<Tab icon = { <HelpIcon /> } disabled = { testDisable } value = 'doTest'/>\r\n\t\t\t\t\t\t<Tab icon = { <CommentIcon /> } value = 'commentTest'/>\r\n\t\t\t\t\t\t<Tab icon = { <AssignmentTurnedInIcon /> } value = 'resultTest'/>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {11}>\r\n\t\t\t\t\t{ tab === 'doTest' && <DoTest id = { id }/> }\r\n\t\t\t\t\t{ tab === 'commentTest' && <CommentTest id = { id }/>}\r\n\t\t\t\t\t{ tab === 'resultTest' && <ResultTest id = { id }/> }\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</AuthorizationContainer>\r\n\t)\r\n};\r\n\r\nfunction DoTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [answers, setAnswers] = useState([]);\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data = getTestById(props.id);\r\n\t\tsetData(data);\r\n\t}, []);\r\n\r\n\tlet handleAnswer = () => (answer) => {\r\n\t\tlet elementIdx = answers.findIndex((element => element.id === answer.id));\r\n\t\tif (elementIdx === -1) {\r\n\t\t\tsetAnswers([...answers, {\r\n\t\t\t\tid: answer.id,\r\n\t\t\t\tanswer: answer.answer\r\n\t\t\t}]);\r\n\t\t} else {\r\n\t\t\tlet newAnswers = answers;\r\n\t\t\tnewAnswers[elementIdx].answer = answer.answer;\r\n\t\t\tsetAnswers(newAnswers);\r\n\t\t}\r\n\t}\r\n\r\n\tlet handleSubmit = () => {\r\n\t\tconsole.log(answers);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className = { classes.container }>\r\n\t\t\t{\r\n\t\t\t\tdata && (data.test.type === 'reading')\r\n\t\t\t\t\t? (<ReadingTest sections = { data.test.sections } answers = { answers }\r\n\t\t\t\t\t\t\t\t\tonAnswer = { handleAnswer() } />)\r\n\t\t\t\t\t\t: <div></div>\r\n\t\t\t}\r\n\r\n\t\t\t<Grid container spacing = {3}>\r\n\t\t\t\t<Grid item xs = {4}></Grid>\r\n\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t<ActionButton value = 'Submit' onClick = { () => handleSubmit() }/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {4}></Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n}\r\nfunction CommentTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data = getCommentByTestId(props.id);\r\n\t\tsetData(data);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container className = { classes.container }>\r\n\t\t\t<Grid container spacing = {2}>\r\n\t\t\t\t{ \tdata && data.test.comments.map(comment => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<Card variant = 'outlined'>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\tavatar = { <AccountCircleIcon /> }\r\n\t\t\t\t\t\t\t\t\taction = {\r\n\t\t\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<MoreVertIcon />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttitle = { comment.user }\r\n\t\t\t\t\t\t\t\t\tsubheader ={ comment.created }\r\n\t\t\t\t\t\t\t\t\tclassName = { classes.cardHeader }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<CardContent className = { classes.cardContent }>\r\n\t\t\t\t\t\t\t\t\t<Text value = { comment.content } />\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\nfunction ResultTest(props) {\r\n\tconst classes = useStyles();\r\n\tconst [answers, setAnswers] = useState([]);\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data = getTestById(props.id);\r\n\t\tsetData(data);\r\n\t}, [])\r\n\r\n\tlet handleAnswer = () => (answer) => {\r\n\t\tlet elementIdx = answers.findIndex((element => element.id == answer.id));\r\n\t\tif (elementIdx === -1) {\r\n\t\t\tsetAnswers([...answers, {\r\n\t\t\t\tid: answer.id,\r\n\t\t\t\tanswer: answer.answer\r\n\t\t\t}]);\r\n\t\t} else {\r\n\t\t\tlet newAnswers = answers;\r\n\t\t\tnewAnswers[elementIdx].answer = answer.answer;\r\n\t\t\tsetAnswers(newAnswers);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className = { classes.container }>\r\n\t\t\t{\r\n\t\t\t\tdata && (data.test.type === 'reading')\r\n\t\t\t\t\t? (<ReadingTest sections = { data.test.sections } answers = { answers }\r\n\t\t\t\t\t\t\t\t\tonAnswer = { handleAnswer() } />)\r\n\t\t\t\t\t: <div></div>\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport NavigationBar from \"../../presentational-components/NavigationBar\";\r\nimport AllTestPage from \"./Test/AllTestPage\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport TestPage from \"./Test/TestPage\";\r\nimport { AuthorizationContainer } from \"../../container-components/Authorization/AuthorizationContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\toverflow: 'auto'\r\n\t},\r\n\tappBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function HomePage() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AuthorizationContainer>\r\n\t\t\t<div className = { classes.root }>\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<div className = {classes.content}>\r\n\t\t\t\t\t<div className = {classes.appBarSpacer}/>\r\n\t\t\t\t\t<BrowserRouter basename = \"/qnc-ielts-practice/tests\">\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path = \"/\" component = { AllTestPage } />\r\n\t\t\t\t\t\t\t<Route path = \"/:id\" children = { <TestPage /> } />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</AuthorizationContainer>\r\n\t);\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport LandingPage from \"./route-component/Authorization/LandingPage\";\r\nimport SignUpPage from \"./route-component/Authorization/SignUpPage\";\r\nimport ForgotPasswordPage from \"./route-component/Authorization/ForgotPasswordPage\";\r\n\r\nimport HomePage from \"./route-component/Home/HomePage\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport TestPage from \"./route-component/Home/Test/TestPage\";\r\nimport { AuthorizationContext } from \"./service-component/Context/authorization\";\r\n\r\n// https://coolors.co/fcba04-ffebeb-590004\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#8c332d',\r\n            main: '#590004',\r\n            dark: '#350000',\r\n            contrastText: '#ffffff'\r\n        },\r\n        secondary: {\r\n            light: '#ffec4e',\r\n            main: '#fcba04',\r\n            dark: '#c48a00',\r\n            contrastText: '#000000'\r\n        },\r\n        chip: {\r\n            listening: '#ff7077',\r\n            reading: '#fede86',\r\n        },\r\n        table: {\r\n            head: '#ffffff',\r\n            text: '#000000',\r\n            even: '#ffffff',\r\n            odd: '#f5f5f5',\r\n        },\r\n        action: {\r\n            hover: '#cccccc',\r\n        }\r\n\r\n    },\r\n});\r\n\r\nexport default function App() {\r\n    const [authorizationData, setAuthorizationData] = useState({\r\n        status: false,\r\n        token: null,\r\n        user: {\r\n            id: null,\r\n            username: null,\r\n            role: {\r\n                name: null\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme = {theme}>\r\n            <AuthorizationContext.Provider value = {[authorizationData, setAuthorizationData]}>\r\n                <BrowserRouter basename = \"/qnc-ielts-practice\">\r\n                    <Switch>\r\n                        <Route exact path = \"/\" component = { LandingPage } />\r\n                        <Route exact path = \"/landing\" component = { LandingPage } />\r\n                        <Route exact path = \"/create-account\" component = { SignUpPage } />\r\n                        <Route exact path = \"/forgot-password\" component = { ForgotPasswordPage } />\r\n                        <Route exact path = \"/tests\" component = { HomePage } />\r\n                        <Route exact path = \"/tests/:id\" children = { <TestPage /> } />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </AuthorizationContext.Provider>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {\r\n            'Service-Worker': 'script'\r\n        },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// 1\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache\r\n} from '@apollo/client';\r\n\r\n// 2\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.API_URL || 'https://qnc-ielts-practice.herokuapp.com/graphql',\r\n  credentials: 'include'\r\n});\r\n\r\n// 3\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n// 4\r\nReactDOM.render(\r\n  <ApolloProvider client = { client }>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}